// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/header.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bosdyn.Api {

  /// <summary>Holder for reflection information generated from Protos/header.proto</summary>
  public static partial class HeaderReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/header.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HeaderReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90b3MvaGVhZGVyLnByb3RvEgpib3NkeW4uYXBpGhlnb29nbGUvcHJv",
            "dG9idWYvYW55LnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvIngKDVJlcXVlc3RIZWFkZXISNQoRcmVxdWVzdF90aW1lc3RhbXAYASAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhMKC2NsaWVudF9uYW1l",
            "GAIgASgJEhsKE2Rpc2FibGVfcnBjX2xvZ2dpbmcYAyABKAgi0wEKC0NvbW1v",
            "bkVycm9yEioKBGNvZGUYASABKA4yHC5ib3NkeW4uYXBpLkNvbW1vbkVycm9y",
            "LkNvZGUSDwoHbWVzc2FnZRgCIAEoCRIiCgRkYXRhGAMgASgLMhQuZ29vZ2xl",
            "LnByb3RvYnVmLkFueSJjCgRDb2RlEhQKEENPREVfVU5TUEVDSUZJRUQQABIL",
            "CgdDT0RFX09LEAESHgoaQ09ERV9JTlRFUk5BTF9TRVJWRVJfRVJST1IQAhIY",
            "ChRDT0RFX0lOVkFMSURfUkVRVUVTVBADIooCCg5SZXNwb25zZUhlYWRlchIx",
            "Cg5yZXF1ZXN0X2hlYWRlchgBIAEoCzIZLmJvc2R5bi5hcGkuUmVxdWVzdEhl",
            "YWRlchI+ChpyZXF1ZXN0X3JlY2VpdmVkX3RpbWVzdGFtcBgCIAEoCzIaLmdv",
            "b2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASNgoScmVzcG9uc2VfdGltZXN0YW1w",
            "GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBImCgVlcnJvchgE",
            "IAEoCzIXLmJvc2R5bi5hcGkuQ29tbW9uRXJyb3ISJQoHcmVxdWVzdBgFIAEo",
            "CzIULmdvb2dsZS5wcm90b2J1Zi5BbnlCGUILSGVhZGVyUHJvdG9aCmJvc2R5",
            "bi9hcGliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.RequestHeader), global::Bosdyn.Api.RequestHeader.Parser, new[]{ "RequestTimestamp", "ClientName", "DisableRpcLogging" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.CommonError), global::Bosdyn.Api.CommonError.Parser, new[]{ "Code", "Message", "Data" }, null, new[]{ typeof(global::Bosdyn.Api.CommonError.Types.Code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.ResponseHeader), global::Bosdyn.Api.ResponseHeader.Parser, new[]{ "RequestHeader", "RequestReceivedTimestamp", "ResponseTimestamp", "Error", "Request" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Standard header attached to all GRPC requests to services.
  /// </summary>
  public sealed partial class RequestHeader : pb::IMessage<RequestHeader> {
    private static readonly pb::MessageParser<RequestHeader> _parser = new pb::MessageParser<RequestHeader>(() => new RequestHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequestHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.HeaderReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeader(RequestHeader other) : this() {
      requestTimestamp_ = other.requestTimestamp_ != null ? other.requestTimestamp_.Clone() : null;
      clientName_ = other.clientName_;
      disableRpcLogging_ = other.disableRpcLogging_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestHeader Clone() {
      return new RequestHeader(this);
    }

    /// <summary>Field number for the "request_timestamp" field.</summary>
    public const int RequestTimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestTimestamp_;
    /// <summary>
    /// Time that the request was sent, as measured by the client's local system clock.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestTimestamp {
      get { return requestTimestamp_; }
      set {
        requestTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "client_name" field.</summary>
    public const int ClientNameFieldNumber = 2;
    private string clientName_ = "";
    /// <summary>
    /// Name of the client to identify itself. The name will typically include a
    /// symbolic string to identify the program, and a unique integer to identify
    /// the specific instance of the process running.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientName {
      get { return clientName_; }
      set {
        clientName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disable_rpc_logging" field.</summary>
    public const int DisableRpcLoggingFieldNumber = 3;
    private bool disableRpcLogging_;
    /// <summary>
    /// If Set to true, request that request and response messages for this call are not recorded
    /// in the GRPC log.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DisableRpcLogging {
      get { return disableRpcLogging_; }
      set {
        disableRpcLogging_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequestHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequestHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestTimestamp, other.RequestTimestamp)) return false;
      if (ClientName != other.ClientName) return false;
      if (DisableRpcLogging != other.DisableRpcLogging) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestTimestamp_ != null) hash ^= RequestTimestamp.GetHashCode();
      if (ClientName.Length != 0) hash ^= ClientName.GetHashCode();
      if (DisableRpcLogging != false) hash ^= DisableRpcLogging.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requestTimestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestTimestamp);
      }
      if (ClientName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientName);
      }
      if (DisableRpcLogging != false) {
        output.WriteRawTag(24);
        output.WriteBool(DisableRpcLogging);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestTimestamp);
      }
      if (ClientName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientName);
      }
      if (DisableRpcLogging != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequestHeader other) {
      if (other == null) {
        return;
      }
      if (other.requestTimestamp_ != null) {
        if (requestTimestamp_ == null) {
          RequestTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestTimestamp.MergeFrom(other.RequestTimestamp);
      }
      if (other.ClientName.Length != 0) {
        ClientName = other.ClientName;
      }
      if (other.DisableRpcLogging != false) {
        DisableRpcLogging = other.DisableRpcLogging;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (requestTimestamp_ == null) {
              RequestTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestTimestamp);
            break;
          }
          case 18: {
            ClientName = input.ReadString();
            break;
          }
          case 24: {
            DisableRpcLogging = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// General error code are returned in the header to facilitate error-handling which is not
  /// message-specific.
  /// This can be used for generic error handlers, aggregation, and trend analysis.
  /// </summary>
  public sealed partial class CommonError : pb::IMessage<CommonError> {
    private static readonly pb::MessageParser<CommonError> _parser = new pb::MessageParser<CommonError>(() => new CommonError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CommonError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.HeaderReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonError(CommonError other) : this() {
      code_ = other.code_;
      message_ = other.message_;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CommonError Clone() {
      return new CommonError(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private global::Bosdyn.Api.CommonError.Types.Code code_ = 0;
    /// <summary>
    /// The different error codes that can be returned on a grpc response message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.CommonError.Types.Code Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    /// <summary>
    /// Human-readable error description.  Not for programmatic analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Any data_;
    /// <summary>
    /// Extra information that can optionally be provided for generic error handling/analysis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CommonError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CommonError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Message != other.Message) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Code);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Code);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CommonError other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = (global::Bosdyn.Api.CommonError.Types.Code) input.ReadEnum();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            if (data_ == null) {
              Data = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Data);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CommonError message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Code {
        /// <summary>
        /// Code is not specified.
        /// </summary>
        [pbr::OriginalName("CODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Not an error.  Request was successful.
        /// </summary>
        [pbr::OriginalName("CODE_OK")] Ok = 1,
        /// <summary>
        /// Service experienced an unexpected error state.
        /// </summary>
        [pbr::OriginalName("CODE_INTERNAL_SERVER_ERROR")] InternalServerError = 2,
        /// <summary>
        /// Ill-formed request.  Request arguments were not valid.
        /// </summary>
        [pbr::OriginalName("CODE_INVALID_REQUEST")] InvalidRequest = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Standard header attached to all GRPC responses from services.
  /// </summary>
  public sealed partial class ResponseHeader : pb::IMessage<ResponseHeader> {
    private static readonly pb::MessageParser<ResponseHeader> _parser = new pb::MessageParser<ResponseHeader>(() => new ResponseHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.HeaderReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeader(ResponseHeader other) : this() {
      requestHeader_ = other.requestHeader_ != null ? other.requestHeader_.Clone() : null;
      requestReceivedTimestamp_ = other.requestReceivedTimestamp_ != null ? other.requestReceivedTimestamp_.Clone() : null;
      responseTimestamp_ = other.responseTimestamp_ != null ? other.responseTimestamp_.Clone() : null;
      error_ = other.error_ != null ? other.error_.Clone() : null;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseHeader Clone() {
      return new ResponseHeader(this);
    }

    /// <summary>Field number for the "request_header" field.</summary>
    public const int RequestHeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader requestHeader_;
    /// <summary>
    /// Echo-back the RequestHeader for timing information, etc....
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader RequestHeader {
      get { return requestHeader_; }
      set {
        requestHeader_ = value;
      }
    }

    /// <summary>Field number for the "request_received_timestamp" field.</summary>
    public const int RequestReceivedTimestampFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp requestReceivedTimestamp_;
    /// <summary>
    /// Time that the request was received. The server clock is the time basis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RequestReceivedTimestamp {
      get { return requestReceivedTimestamp_; }
      set {
        requestReceivedTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "response_timestamp" field.</summary>
    public const int ResponseTimestampFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp responseTimestamp_;
    /// <summary>
    /// Time that the response was received. The server clock is the time basis.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ResponseTimestamp {
      get { return responseTimestamp_; }
      set {
        responseTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 4;
    private global::Bosdyn.Api.CommonError error_;
    /// <summary>
    /// Common errors, such as invalid input or internal server problems.
    /// If there is a common error, the rest of the response message outside of the
    /// ResponseHeader will be invalid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.CommonError Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Any request_;
    /// <summary>
    /// Echoed request message. In some cases it may not be present, or it may be a stripped
    /// down representation of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RequestHeader, other.RequestHeader)) return false;
      if (!object.Equals(RequestReceivedTimestamp, other.RequestReceivedTimestamp)) return false;
      if (!object.Equals(ResponseTimestamp, other.ResponseTimestamp)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestHeader_ != null) hash ^= RequestHeader.GetHashCode();
      if (requestReceivedTimestamp_ != null) hash ^= RequestReceivedTimestamp.GetHashCode();
      if (responseTimestamp_ != null) hash ^= ResponseTimestamp.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requestHeader_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RequestHeader);
      }
      if (requestReceivedTimestamp_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RequestReceivedTimestamp);
      }
      if (responseTimestamp_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseTimestamp);
      }
      if (error_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Error);
      }
      if (request_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestHeader);
      }
      if (requestReceivedTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RequestReceivedTimestamp);
      }
      if (responseTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseTimestamp);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseHeader other) {
      if (other == null) {
        return;
      }
      if (other.requestHeader_ != null) {
        if (requestHeader_ == null) {
          RequestHeader = new global::Bosdyn.Api.RequestHeader();
        }
        RequestHeader.MergeFrom(other.RequestHeader);
      }
      if (other.requestReceivedTimestamp_ != null) {
        if (requestReceivedTimestamp_ == null) {
          RequestReceivedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RequestReceivedTimestamp.MergeFrom(other.RequestReceivedTimestamp);
      }
      if (other.responseTimestamp_ != null) {
        if (responseTimestamp_ == null) {
          ResponseTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ResponseTimestamp.MergeFrom(other.ResponseTimestamp);
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Bosdyn.Api.CommonError();
        }
        Error.MergeFrom(other.Error);
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Request.MergeFrom(other.Request);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (requestHeader_ == null) {
              RequestHeader = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(RequestHeader);
            break;
          }
          case 18: {
            if (requestReceivedTimestamp_ == null) {
              RequestReceivedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RequestReceivedTimestamp);
            break;
          }
          case 26: {
            if (responseTimestamp_ == null) {
              ResponseTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ResponseTimestamp);
            break;
          }
          case 34: {
            if (error_ == null) {
              Error = new global::Bosdyn.Api.CommonError();
            }
            input.ReadMessage(Error);
            break;
          }
          case 42: {
            if (request_ == null) {
              Request = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(Request);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
