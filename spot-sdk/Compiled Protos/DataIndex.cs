// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/data_index.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bosdyn.Api {

  /// <summary>Holder for reflection information generated from Protos/data_index.proto</summary>
  public static partial class DataIndexReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/data_index.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataIndexReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdQcm90b3MvZGF0YV9pbmRleC5wcm90bxIKYm9zZHluLmFwaRoYUHJvdG9z",
            "L2RhdGFfYnVmZmVyLnByb3RvGhNQcm90b3MvaGVhZGVyLnByb3RvGhdQcm90",
            "b3MvdGltZV9yYW5nZS5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFt",
            "cC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvIiAKCEdy",
            "cGNTcGVjEhQKDHNlcnZpY2VfbmFtZRgBIAEoCSJXCghCbG9iU3BlYxIOCgZz",
            "b3VyY2UYASABKAkSFAoMbWVzc2FnZV90eXBlGAIgASgJEg8KB2NoYW5uZWwY",
            "AyABKAkSFAoMY2hhbm5lbF9nbG9iGAQgASgJIpMBCglFdmVudFNwZWMSDgoG",
            "c291cmNlGAEgASgJEgwKBHR5cGUYAiABKAkSKgoFbGV2ZWwYAyABKAsyGy5n",
            "b29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRI8ChFsb2dfcHJlc2VydmVfaGlu",
            "dBgEIAEoDjIhLmJvc2R5bi5hcGkuRXZlbnQuTG9nUHJlc2VydmVIaW50IsoE",
            "CghQYWdlSW5mbxIKCgJpZBgBIAEoCRIMCgRwYXRoGAIgASgJEg4KBnNvdXJj",
            "ZRgDIAEoCRIpCgp0aW1lX3JhbmdlGAQgASgLMhUuYm9zZHluLmFwaS5UaW1l",
            "UmFuZ2USEQoJbnVtX3RpY2tzGAUgASgDEhMKC3RvdGFsX2J5dGVzGAYgASgD",
            "Ei8KBmZvcm1hdBgHIAEoDjIfLmJvc2R5bi5hcGkuUGFnZUluZm8uUGFnZUZv",
            "cm1hdBI1Cgtjb21wcmVzc2lvbhgIIAEoDjIgLmJvc2R5bi5hcGkuUGFnZUlu",
            "Zm8uQ29tcHJlc3Npb24SDwoHaXNfb3BlbhgJIAEoCBIVCg1pc19kb3dubG9h",
            "ZGVkGAogASgIEjUKEWRlbGV0ZWRfdGltZXN0YW1wGAsgASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLlRpbWVzdGFtcBI+Chpkb3dubG9hZF9zdGFydGVkX3RpbWVz",
            "dGFtcBgMIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASGAoQcmVx",
            "dWVzdF9wcmVzZXJ2ZRgNIAEoCCI2CgpQYWdlRm9ybWF0EhIKDkZPUk1BVF9V",
            "TktOT1dOEAASFAoQRk9STUFUX0JEREZfRklMRRABImgKC0NvbXByZXNzaW9u",
            "EhcKE0NPTVBSRVNTSU9OX1VOS05PV04QABIUChBDT01QUkVTU0lPTl9OT05F",
            "EAESFAoQQ09NUFJFU1NJT05fR1pJUBACEhQKEENPTVBSRVNTSU9OX1pTVEQQ",
            "AyJ/CglHcnBjUGFnZXMSKQoKdGltZV9yYW5nZRgBIAEoCzIVLmJvc2R5bi5h",
            "cGkuVGltZVJhbmdlEiIKBHNwZWMYAiABKAsyFC5ib3NkeW4uYXBpLkdycGNT",
            "cGVjEiMKBXBhZ2VzGAMgAygLMhQuYm9zZHluLmFwaS5QYWdlSW5mbyJSCghC",
            "bG9iUGFnZRIiCgRzcGVjGAEgASgLMhQuYm9zZHluLmFwaS5CbG9iU3BlYxIi",
            "CgRwYWdlGAIgASgLMhQuYm9zZHluLmFwaS5QYWdlSW5mbyJbCglCbG9iUGFn",
            "ZXMSKQoKdGltZV9yYW5nZRgBIAEoCzIVLmJvc2R5bi5hcGkuVGltZVJhbmdl",
            "EiMKBXBhZ2VzGAMgAygLMhQuYm9zZHluLmFwaS5CbG9iUGFnZSJjChFQYWdl",
            "c0FuZFRpbWVzdGFtcBIpCgp0aW1lX3JhbmdlGAEgASgLMhUuYm9zZHluLmFw",
            "aS5UaW1lUmFuZ2USIwoFcGFnZXMYAiADKAsyFC5ib3NkeW4uYXBpLlBhZ2VJ",
            "bmZvIpQBCglEYXRhUXVlcnkSKQoKdGltZV9yYW5nZRgBIAEoCzIVLmJvc2R5",
            "bi5hcGkuVGltZVJhbmdlEiMKBWJsb2JzGAIgAygLMhQuYm9zZHluLmFwaS5C",
            "bG9iU3BlYxIVCg10ZXh0X21lc3NhZ2VzGAMgASgIEg4KBmV2ZW50cxgEIAEo",
            "CBIQCghjb21tZW50cxgGIAEoCCLyAQoJRGF0YUluZGV4EikKCnRpbWVfcmFu",
            "Z2UYASABKAsyFS5ib3NkeW4uYXBpLlRpbWVSYW5nZRIkCgVibG9icxgCIAMo",
            "CzIVLmJvc2R5bi5hcGkuQmxvYlBhZ2VzEjQKDXRleHRfbWVzc2FnZXMYAyAB",
            "KAsyHS5ib3NkeW4uYXBpLlBhZ2VzQW5kVGltZXN0YW1wEi0KBmV2ZW50cxgE",
            "IAEoCzIdLmJvc2R5bi5hcGkuUGFnZXNBbmRUaW1lc3RhbXASLwoIY29tbWVu",
            "dHMYBiABKAsyHS5ib3NkeW4uYXBpLlBhZ2VzQW5kVGltZXN0YW1wIngKEkV2",
            "ZW50c0NvbW1lbnRzU3BlYxIpCgp0aW1lX3JhbmdlGAEgASgLMhUuYm9zZHlu",
            "LmFwaS5UaW1lUmFuZ2USJQoGZXZlbnRzGAIgAygLMhUuYm9zZHluLmFwaS5F",
            "dmVudFNwZWMSEAoIY29tbWVudHMYAyABKAgilgEKDkV2ZW50c0NvbW1lbnRz",
            "EikKCnRpbWVfcmFuZ2UYASABKAsyFS5ib3NkeW4uYXBpLlRpbWVSYW5nZRIh",
            "CgZldmVudHMYAiADKAsyES5ib3NkeW4uYXBpLkV2ZW50EjYKEW9wZXJhdG9y",
            "X2NvbW1lbnRzGAMgAygLMhsuYm9zZHluLmFwaS5PcGVyYXRvckNvbW1lbnQi",
            "pgEKEERhdGFCdWZmZXJTdGF0dXMSHQoVbnVtX2RhdGFfYnVmZmVyX3BhZ2Vz",
            "GAEgASgDEh8KF2RhdGFfYnVmZmVyX3RvdGFsX2J5dGVzGAIgASgDEhQKDG51",
            "bV9jb21tZW50cxgDIAEoAxISCgpudW1fZXZlbnRzGAQgASgDEigKCmJsb2Jf",
            "c3BlY3MYBSADKAsyFC5ib3NkeW4uYXBpLkJsb2JTcGVjIm0KFEdldERhdGFJ",
            "bmRleFJlc3BvbnNlEioKBmhlYWRlchgBIAEoCzIaLmJvc2R5bi5hcGkuUmVz",
            "cG9uc2VIZWFkZXISKQoKZGF0YV9pbmRleBgCIAEoCzIVLmJvc2R5bi5hcGku",
            "RGF0YUluZGV4ImsKE0dldERhdGFJbmRleFJlcXVlc3QSKQoGaGVhZGVyGAEg",
            "ASgLMhkuYm9zZHluLmFwaS5SZXF1ZXN0SGVhZGVyEikKCmRhdGFfcXVlcnkY",
            "AiABKAsyFS5ib3NkeW4uYXBpLkRhdGFRdWVyeSKEAQoYR2V0RXZlbnRzQ29t",
            "bWVudHNSZXF1ZXN0EikKBmhlYWRlchgBIAEoCzIZLmJvc2R5bi5hcGkuUmVx",
            "dWVzdEhlYWRlchI9ChVldmVudF9jb21tZW50X3JlcXVlc3QYAiABKAsyHi5i",
            "b3NkeW4uYXBpLkV2ZW50c0NvbW1lbnRzU3BlYyJ8ChlHZXRFdmVudHNDb21t",
            "ZW50c1Jlc3BvbnNlEioKBmhlYWRlchgBIAEoCzIaLmJvc2R5bi5hcGkuUmVz",
            "cG9uc2VIZWFkZXISMwoPZXZlbnRzX2NvbW1lbnRzGAIgASgLMhouYm9zZHlu",
            "LmFwaS5FdmVudHNDb21tZW50cyJfChpHZXREYXRhQnVmZmVyU3RhdHVzUmVx",
            "dWVzdBIpCgZoZWFkZXIYASABKAsyGS5ib3NkeW4uYXBpLlJlcXVlc3RIZWFk",
            "ZXISFgoOZ2V0X2Jsb2Jfc3BlY3MYAiABKAgigwEKG0dldERhdGFCdWZmZXJT",
            "dGF0dXNSZXNwb25zZRIqCgZoZWFkZXIYASABKAsyGi5ib3NkeW4uYXBpLlJl",
            "c3BvbnNlSGVhZGVyEjgKEmRhdGFfYnVmZmVyX3N0YXR1cxgCIAEoCzIcLmJv",
            "c2R5bi5hcGkuRGF0YUJ1ZmZlclN0YXR1cyJrChNHZXREYXRhUGFnZXNSZXF1",
            "ZXN0EikKBmhlYWRlchgBIAEoCzIZLmJvc2R5bi5hcGkuUmVxdWVzdEhlYWRl",
            "chIpCgp0aW1lX3JhbmdlGAIgASgLMhUuYm9zZHluLmFwaS5UaW1lUmFuZ2Ui",
            "ZwoUR2V0RGF0YVBhZ2VzUmVzcG9uc2USKgoGaGVhZGVyGAEgASgLMhouYm9z",
            "ZHluLmFwaS5SZXNwb25zZUhlYWRlchIjCgVwYWdlcxgCIAMoCzIULmJvc2R5",
            "bi5hcGkuUGFnZUluZm8igAEKFkRlbGV0ZURhdGFQYWdlc1JlcXVlc3QSKQoG",
            "aGVhZGVyGAEgASgLMhkuYm9zZHluLmFwaS5SZXF1ZXN0SGVhZGVyEikKCnRp",
            "bWVfcmFuZ2UYAiABKAsyFS5ib3NkeW4uYXBpLlRpbWVSYW5nZRIQCghwYWdl",
            "X2lkcxgDIAMoCSK8AQoQRGVsZXRlUGFnZVN0YXR1cxIPCgdwYWdlX2lkGAEg",
            "ASgJEjMKBnN0YXR1cxgCIAEoDjIjLmJvc2R5bi5hcGkuRGVsZXRlUGFnZVN0",
            "YXR1cy5TdGF0dXMiYgoGU3RhdHVzEhIKDlNUQVRVU19VTktOT1dOEAASEgoO",
            "U1RBVFVTX0RFTEVURUQQARIaChZTVEFUVVNfREVMRVRJT05fRkFJTEVEEAIS",
            "FAoQU1RBVFVTX05PVF9GT1VORBADIooBChdEZWxldGVEYXRhUGFnZXNSZXNw",
            "b25zZRIqCgZoZWFkZXIYASABKAsyGi5ib3NkeW4uYXBpLlJlc3BvbnNlSGVh",
            "ZGVyEhUKDWJ5dGVzX2RlbGV0ZWQYAiABKAMSLAoGc3RhdHVzGAMgAygLMhwu",
            "Ym9zZHluLmFwaS5EZWxldGVQYWdlU3RhdHVzQhBCDkRhdGFJbmRleFByb3Rv",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bosdyn.Api.DataBufferReflection.Descriptor, global::Bosdyn.Api.HeaderReflection.Descriptor, global::Bosdyn.Api.TimeRangeReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GrpcSpec), global::Bosdyn.Api.GrpcSpec.Parser, new[]{ "ServiceName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.BlobSpec), global::Bosdyn.Api.BlobSpec.Parser, new[]{ "Source", "MessageType", "Channel", "ChannelGlob" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EventSpec), global::Bosdyn.Api.EventSpec.Parser, new[]{ "Source", "Type", "Level", "LogPreserveHint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.PageInfo), global::Bosdyn.Api.PageInfo.Parser, new[]{ "Id", "Path", "Source", "TimeRange", "NumTicks", "TotalBytes", "Format", "Compression", "IsOpen", "IsDownloaded", "DeletedTimestamp", "DownloadStartedTimestamp", "RequestPreserve" }, null, new[]{ typeof(global::Bosdyn.Api.PageInfo.Types.PageFormat), typeof(global::Bosdyn.Api.PageInfo.Types.Compression) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GrpcPages), global::Bosdyn.Api.GrpcPages.Parser, new[]{ "TimeRange", "Spec", "Pages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.BlobPage), global::Bosdyn.Api.BlobPage.Parser, new[]{ "Spec", "Page" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.BlobPages), global::Bosdyn.Api.BlobPages.Parser, new[]{ "TimeRange", "Pages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.PagesAndTimestamp), global::Bosdyn.Api.PagesAndTimestamp.Parser, new[]{ "TimeRange", "Pages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DataQuery), global::Bosdyn.Api.DataQuery.Parser, new[]{ "TimeRange", "Blobs", "TextMessages", "Events", "Comments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DataIndex), global::Bosdyn.Api.DataIndex.Parser, new[]{ "TimeRange", "Blobs", "TextMessages", "Events", "Comments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EventsCommentsSpec), global::Bosdyn.Api.EventsCommentsSpec.Parser, new[]{ "TimeRange", "Events", "Comments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EventsComments), global::Bosdyn.Api.EventsComments.Parser, new[]{ "TimeRange", "Events", "OperatorComments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DataBufferStatus), global::Bosdyn.Api.DataBufferStatus.Parser, new[]{ "NumDataBufferPages", "DataBufferTotalBytes", "NumComments", "NumEvents", "BlobSpecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetDataIndexResponse), global::Bosdyn.Api.GetDataIndexResponse.Parser, new[]{ "Header", "DataIndex" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetDataIndexRequest), global::Bosdyn.Api.GetDataIndexRequest.Parser, new[]{ "Header", "DataQuery" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetEventsCommentsRequest), global::Bosdyn.Api.GetEventsCommentsRequest.Parser, new[]{ "Header", "EventCommentRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetEventsCommentsResponse), global::Bosdyn.Api.GetEventsCommentsResponse.Parser, new[]{ "Header", "EventsComments" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetDataBufferStatusRequest), global::Bosdyn.Api.GetDataBufferStatusRequest.Parser, new[]{ "Header", "GetBlobSpecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetDataBufferStatusResponse), global::Bosdyn.Api.GetDataBufferStatusResponse.Parser, new[]{ "Header", "DataBufferStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetDataPagesRequest), global::Bosdyn.Api.GetDataPagesRequest.Parser, new[]{ "Header", "TimeRange" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetDataPagesResponse), global::Bosdyn.Api.GetDataPagesResponse.Parser, new[]{ "Header", "Pages" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DeleteDataPagesRequest), global::Bosdyn.Api.DeleteDataPagesRequest.Parser, new[]{ "Header", "TimeRange", "PageIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DeletePageStatus), global::Bosdyn.Api.DeletePageStatus.Parser, new[]{ "PageId", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.DeletePageStatus.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DeleteDataPagesResponse), global::Bosdyn.Api.DeleteDataPagesResponse.Parser, new[]{ "Header", "BytesDeleted", "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Specification for selecting of GRPC logs.
  /// </summary>
  public sealed partial class GrpcSpec : pb::IMessage<GrpcSpec> {
    private static readonly pb::MessageParser<GrpcSpec> _parser = new pb::MessageParser<GrpcSpec>(() => new GrpcSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSpec(GrpcSpec other) : this() {
      serviceName_ = other.serviceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcSpec Clone() {
      return new GrpcSpec(this);
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 1;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceName != other.ServiceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcSpec other) {
      if (other == null) {
        return;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Specification for selecting of blob messages.
  /// </summary>
  public sealed partial class BlobSpec : pb::IMessage<BlobSpec> {
    private static readonly pb::MessageParser<BlobSpec> _parser = new pb::MessageParser<BlobSpec>(() => new BlobSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlobSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobSpec(BlobSpec other) : this() {
      source_ = other.source_;
      messageType_ = other.messageType_;
      channel_ = other.channel_;
      channelGlob_ = other.channelGlob_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobSpec Clone() {
      return new BlobSpec(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private string source_ = "";
    /// <summary>
    /// If set, require the message source to match this.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message_type" field.</summary>
    public const int MessageTypeFieldNumber = 2;
    private string messageType_ = "";
    /// <summary>
    /// If set, require the message type to match this value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MessageType {
      get { return messageType_; }
      set {
        messageType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    /// <summary>
    /// If set, require the channel to match this value (or channel_glob, if set).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel_glob" field.</summary>
    public const int ChannelGlobFieldNumber = 4;
    private string channelGlob_ = "";
    /// <summary>
    /// Optionally require the channel to match a glob (or channel, if set)..
    /// For example, 'gps/*' will match all channels starting with 'gps/'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelGlob {
      get { return channelGlob_; }
      set {
        channelGlob_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlobSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlobSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if (MessageType != other.MessageType) return false;
      if (Channel != other.Channel) return false;
      if (ChannelGlob != other.ChannelGlob) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (MessageType.Length != 0) hash ^= MessageType.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (ChannelGlob.Length != 0) hash ^= ChannelGlob.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (MessageType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MessageType);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (ChannelGlob.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ChannelGlob);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (MessageType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MessageType);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (ChannelGlob.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelGlob);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlobSpec other) {
      if (other == null) {
        return;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.MessageType.Length != 0) {
        MessageType = other.MessageType;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.ChannelGlob.Length != 0) {
        ChannelGlob = other.ChannelGlob;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            MessageType = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            ChannelGlob = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Specification for selecting Events.
  /// </summary>
  public sealed partial class EventSpec : pb::IMessage<EventSpec> {
    private static readonly pb::MessageParser<EventSpec> _parser = new pb::MessageParser<EventSpec>(() => new EventSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSpec(EventSpec other) : this() {
      source_ = other.source_;
      type_ = other.type_;
      Level = other.Level;
      logPreserveHint_ = other.logPreserveHint_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventSpec Clone() {
      return new EventSpec(this);
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 1;
    private string source_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private static readonly pb::FieldCodec<int?> _single_level_codec = pb::FieldCodec.ForStructWrapper<int>(26);
    private int? level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }


    /// <summary>Field number for the "log_preserve_hint" field.</summary>
    public const int LogPreserveHintFieldNumber = 4;
    private global::Bosdyn.Api.Event.Types.LogPreserveHint logPreserveHint_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.Event.Types.LogPreserveHint LogPreserveHint {
      get { return logPreserveHint_; }
      set {
        logPreserveHint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Source != other.Source) return false;
      if (Type != other.Type) return false;
      if (Level != other.Level) return false;
      if (LogPreserveHint != other.LogPreserveHint) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (level_ != null) hash ^= Level.GetHashCode();
      if (LogPreserveHint != 0) hash ^= LogPreserveHint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Source.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Source);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (level_ != null) {
        _single_level_codec.WriteTagAndValue(output, Level);
      }
      if (LogPreserveHint != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) LogPreserveHint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (level_ != null) {
        size += _single_level_codec.CalculateSizeWithTag(Level);
      }
      if (LogPreserveHint != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogPreserveHint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventSpec other) {
      if (other == null) {
        return;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.level_ != null) {
        if (level_ == null || other.Level != 0) {
          Level = other.Level;
        }
      }
      if (other.LogPreserveHint != 0) {
        LogPreserveHint = other.LogPreserveHint;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Source = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 26: {
            int? value = _single_level_codec.Read(input);
            if (level_ == null || value != 0) {
              Level = value;
            }
            break;
          }
          case 32: {
            LogPreserveHint = (global::Bosdyn.Api.Event.Types.LogPreserveHint) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A unit of data storage.
  /// This may be a bddf data file.
  /// Like a file, this data may be downloaded or deleted all together for example.
  /// </summary>
  public sealed partial class PageInfo : pb::IMessage<PageInfo> {
    private static readonly pb::MessageParser<PageInfo> _parser = new pb::MessageParser<PageInfo>(() => new PageInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PageInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInfo(PageInfo other) : this() {
      id_ = other.id_;
      path_ = other.path_;
      source_ = other.source_;
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      numTicks_ = other.numTicks_;
      totalBytes_ = other.totalBytes_;
      format_ = other.format_;
      compression_ = other.compression_;
      isOpen_ = other.isOpen_;
      isDownloaded_ = other.isDownloaded_;
      deletedTimestamp_ = other.deletedTimestamp_ != null ? other.deletedTimestamp_.Clone() : null;
      downloadStartedTimestamp_ = other.downloadStartedTimestamp_ != null ? other.downloadStartedTimestamp_.Clone() : null;
      requestPreserve_ = other.requestPreserve_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PageInfo Clone() {
      return new PageInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// Identifier unique to robot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    private string path_ = "";
    /// <summary>
    /// Relative path to file, if file storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private string source_ = "";
    /// <summary>
    /// Name of service/client which provided the data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Source {
      get { return source_; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 4;
    private global::Bosdyn.Api.TimeRange timeRange_;
    /// <summary>
    /// Time range of the relevant data in the page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "num_ticks" field.</summary>
    public const int NumTicksFieldNumber = 5;
    private long numTicks_;
    /// <summary>
    /// Number of time samples or blobs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumTicks {
      get { return numTicks_; }
      set {
        numTicks_ = value;
      }
    }

    /// <summary>Field number for the "total_bytes" field.</summary>
    public const int TotalBytesFieldNumber = 6;
    private long totalBytes_;
    /// <summary>
    /// Total size of data in the page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalBytes {
      get { return totalBytes_; }
      set {
        totalBytes_ = value;
      }
    }

    /// <summary>Field number for the "format" field.</summary>
    public const int FormatFieldNumber = 7;
    private global::Bosdyn.Api.PageInfo.Types.PageFormat format_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PageInfo.Types.PageFormat Format {
      get { return format_; }
      set {
        format_ = value;
      }
    }

    /// <summary>Field number for the "compression" field.</summary>
    public const int CompressionFieldNumber = 8;
    private global::Bosdyn.Api.PageInfo.Types.Compression compression_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PageInfo.Types.Compression Compression {
      get { return compression_; }
      set {
        compression_ = value;
      }
    }

    /// <summary>Field number for the "is_open" field.</summary>
    public const int IsOpenFieldNumber = 9;
    private bool isOpen_;
    /// <summary>
    /// True if data is still being written into this page, false if page is complete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsOpen {
      get { return isOpen_; }
      set {
        isOpen_ = value;
      }
    }

    /// <summary>Field number for the "is_downloaded" field.</summary>
    public const int IsDownloadedFieldNumber = 10;
    private bool isDownloaded_;
    /// <summary>
    /// True if data is marked as having been downloaded.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDownloaded {
      get { return isDownloaded_; }
      set {
        isDownloaded_ = value;
      }
    }

    /// <summary>Field number for the "deleted_timestamp" field.</summary>
    public const int DeletedTimestampFieldNumber = 11;
    private global::Google.Protobuf.WellKnownTypes.Timestamp deletedTimestamp_;
    /// <summary>
    /// If this exists, the page was deleted from the robot at the specified time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DeletedTimestamp {
      get { return deletedTimestamp_; }
      set {
        deletedTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "download_started_timestamp" field.</summary>
    public const int DownloadStartedTimestampFieldNumber = 12;
    private global::Google.Protobuf.WellKnownTypes.Timestamp downloadStartedTimestamp_;
    /// <summary>
    /// If this exists, download from this page was started at the specified time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp DownloadStartedTimestamp {
      get { return downloadStartedTimestamp_; }
      set {
        downloadStartedTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "request_preserve" field.</summary>
    public const int RequestPreserveFieldNumber = 13;
    private bool requestPreserve_;
    /// <summary>
    /// True if data has been requested to be preserved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RequestPreserve {
      get { return requestPreserve_; }
      set {
        requestPreserve_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PageInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PageInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Path != other.Path) return false;
      if (Source != other.Source) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (NumTicks != other.NumTicks) return false;
      if (TotalBytes != other.TotalBytes) return false;
      if (Format != other.Format) return false;
      if (Compression != other.Compression) return false;
      if (IsOpen != other.IsOpen) return false;
      if (IsDownloaded != other.IsDownloaded) return false;
      if (!object.Equals(DeletedTimestamp, other.DeletedTimestamp)) return false;
      if (!object.Equals(DownloadStartedTimestamp, other.DownloadStartedTimestamp)) return false;
      if (RequestPreserve != other.RequestPreserve) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (Source.Length != 0) hash ^= Source.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (NumTicks != 0L) hash ^= NumTicks.GetHashCode();
      if (TotalBytes != 0L) hash ^= TotalBytes.GetHashCode();
      if (Format != 0) hash ^= Format.GetHashCode();
      if (Compression != 0) hash ^= Compression.GetHashCode();
      if (IsOpen != false) hash ^= IsOpen.GetHashCode();
      if (IsDownloaded != false) hash ^= IsDownloaded.GetHashCode();
      if (deletedTimestamp_ != null) hash ^= DeletedTimestamp.GetHashCode();
      if (downloadStartedTimestamp_ != null) hash ^= DownloadStartedTimestamp.GetHashCode();
      if (RequestPreserve != false) hash ^= RequestPreserve.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Path.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (Source.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Source);
      }
      if (timeRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TimeRange);
      }
      if (NumTicks != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(NumTicks);
      }
      if (TotalBytes != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalBytes);
      }
      if (Format != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Format);
      }
      if (Compression != 0) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Compression);
      }
      if (IsOpen != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsOpen);
      }
      if (IsDownloaded != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsDownloaded);
      }
      if (deletedTimestamp_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(DeletedTimestamp);
      }
      if (downloadStartedTimestamp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DownloadStartedTimestamp);
      }
      if (RequestPreserve != false) {
        output.WriteRawTag(104);
        output.WriteBool(RequestPreserve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (Source.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Source);
      }
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (NumTicks != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumTicks);
      }
      if (TotalBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalBytes);
      }
      if (Format != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Format);
      }
      if (Compression != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Compression);
      }
      if (IsOpen != false) {
        size += 1 + 1;
      }
      if (IsDownloaded != false) {
        size += 1 + 1;
      }
      if (deletedTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeletedTimestamp);
      }
      if (downloadStartedTimestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DownloadStartedTimestamp);
      }
      if (RequestPreserve != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PageInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      if (other.Source.Length != 0) {
        Source = other.Source;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.NumTicks != 0L) {
        NumTicks = other.NumTicks;
      }
      if (other.TotalBytes != 0L) {
        TotalBytes = other.TotalBytes;
      }
      if (other.Format != 0) {
        Format = other.Format;
      }
      if (other.Compression != 0) {
        Compression = other.Compression;
      }
      if (other.IsOpen != false) {
        IsOpen = other.IsOpen;
      }
      if (other.IsDownloaded != false) {
        IsDownloaded = other.IsDownloaded;
      }
      if (other.deletedTimestamp_ != null) {
        if (deletedTimestamp_ == null) {
          DeletedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DeletedTimestamp.MergeFrom(other.DeletedTimestamp);
      }
      if (other.downloadStartedTimestamp_ != null) {
        if (downloadStartedTimestamp_ == null) {
          DownloadStartedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        DownloadStartedTimestamp.MergeFrom(other.DownloadStartedTimestamp);
      }
      if (other.RequestPreserve != false) {
        RequestPreserve = other.RequestPreserve;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            Source = input.ReadString();
            break;
          }
          case 34: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 40: {
            NumTicks = input.ReadInt64();
            break;
          }
          case 48: {
            TotalBytes = input.ReadInt64();
            break;
          }
          case 56: {
            Format = (global::Bosdyn.Api.PageInfo.Types.PageFormat) input.ReadEnum();
            break;
          }
          case 64: {
            Compression = (global::Bosdyn.Api.PageInfo.Types.Compression) input.ReadEnum();
            break;
          }
          case 72: {
            IsOpen = input.ReadBool();
            break;
          }
          case 80: {
            IsDownloaded = input.ReadBool();
            break;
          }
          case 90: {
            if (deletedTimestamp_ == null) {
              DeletedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DeletedTimestamp);
            break;
          }
          case 98: {
            if (downloadStartedTimestamp_ == null) {
              DownloadStartedTimestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(DownloadStartedTimestamp);
            break;
          }
          case 104: {
            RequestPreserve = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PageInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum PageFormat {
        /// <summary>
        /// Unset -- do not use.
        /// </summary>
        [pbr::OriginalName("FORMAT_UNKNOWN")] FormatUnknown = 0,
        /// <summary>
        /// Data is stored in a .bddf file
        /// </summary>
        [pbr::OriginalName("FORMAT_BDDF_FILE")] FormatBddfFile = 1,
      }

      public enum Compression {
        /// <summary>
        /// Not set -- do not use.
        /// </summary>
        [pbr::OriginalName("COMPRESSION_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Data is not compressed.
        /// </summary>
        [pbr::OriginalName("COMPRESSION_NONE")] None = 1,
        /// <summary>
        /// Data uses gzip compression.
        /// </summary>
        [pbr::OriginalName("COMPRESSION_GZIP")] Gzip = 2,
        /// <summary>
        /// Data uses zstd compression.
        /// </summary>
        [pbr::OriginalName("COMPRESSION_ZSTD")] Zstd = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// A set of pages of data which contain specied GRPC request and response messages.
  /// </summary>
  public sealed partial class GrpcPages : pb::IMessage<GrpcPages> {
    private static readonly pb::MessageParser<GrpcPages> _parser = new pb::MessageParser<GrpcPages>(() => new GrpcPages());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcPages> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPages() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPages(GrpcPages other) : this() {
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      pages_ = other.pages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcPages Clone() {
      return new GrpcPages(this);
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private global::Bosdyn.Api.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 2;
    private global::Bosdyn.Api.GrpcSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.GrpcSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "pages" field.</summary>
    public const int PagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.PageInfo> _repeated_pages_codec
        = pb::FieldCodec.ForMessage(26, global::Bosdyn.Api.PageInfo.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.PageInfo> pages_ = new pbc::RepeatedField<global::Bosdyn.Api.PageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.PageInfo> Pages {
      get { return pages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcPages);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcPages other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if (!object.Equals(Spec, other.Spec)) return false;
      if(!pages_.Equals(other.pages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (spec_ != null) hash ^= Spec.GetHashCode();
      hash ^= pages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeRange);
      }
      if (spec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Spec);
      }
      pages_.WriteTo(output, _repeated_pages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      size += pages_.CalculateSize(_repeated_pages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcPages other) {
      if (other == null) {
        return;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Bosdyn.Api.GrpcSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      pages_.Add(other.pages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 18: {
            if (spec_ == null) {
              Spec = new global::Bosdyn.Api.GrpcSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 26: {
            pages_.AddEntriesFrom(input, _repeated_pages_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A set of blob messages of a given channel/msgtype within a given data page.
  /// </summary>
  public sealed partial class BlobPage : pb::IMessage<BlobPage> {
    private static readonly pb::MessageParser<BlobPage> _parser = new pb::MessageParser<BlobPage>(() => new BlobPage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlobPage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPage(BlobPage other) : this() {
      spec_ = other.spec_ != null ? other.spec_.Clone() : null;
      page_ = other.page_ != null ? other.page_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPage Clone() {
      return new BlobPage(this);
    }

    /// <summary>Field number for the "spec" field.</summary>
    public const int SpecFieldNumber = 1;
    private global::Bosdyn.Api.BlobSpec spec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.BlobSpec Spec {
      get { return spec_; }
      set {
        spec_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private global::Bosdyn.Api.PageInfo page_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PageInfo Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlobPage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlobPage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Spec, other.Spec)) return false;
      if (!object.Equals(Page, other.Page)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (spec_ != null) hash ^= Spec.GetHashCode();
      if (page_ != null) hash ^= Page.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (spec_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Spec);
      }
      if (page_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Page);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (spec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spec);
      }
      if (page_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Page);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlobPage other) {
      if (other == null) {
        return;
      }
      if (other.spec_ != null) {
        if (spec_ == null) {
          Spec = new global::Bosdyn.Api.BlobSpec();
        }
        Spec.MergeFrom(other.Spec);
      }
      if (other.page_ != null) {
        if (page_ == null) {
          Page = new global::Bosdyn.Api.PageInfo();
        }
        Page.MergeFrom(other.Page);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (spec_ == null) {
              Spec = new global::Bosdyn.Api.BlobSpec();
            }
            input.ReadMessage(Spec);
            break;
          }
          case 18: {
            if (page_ == null) {
              Page = new global::Bosdyn.Api.PageInfo();
            }
            input.ReadMessage(Page);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A set of pages of data which contain specified Blob messages from the data-buffer.
  /// </summary>
  public sealed partial class BlobPages : pb::IMessage<BlobPages> {
    private static readonly pb::MessageParser<BlobPages> _parser = new pb::MessageParser<BlobPages>(() => new BlobPages());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlobPages> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPages() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPages(BlobPages other) : this() {
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      pages_ = other.pages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlobPages Clone() {
      return new BlobPages(this);
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private global::Bosdyn.Api.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "pages" field.</summary>
    public const int PagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.BlobPage> _repeated_pages_codec
        = pb::FieldCodec.ForMessage(26, global::Bosdyn.Api.BlobPage.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.BlobPage> pages_ = new pbc::RepeatedField<global::Bosdyn.Api.BlobPage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.BlobPage> Pages {
      get { return pages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlobPages);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlobPages other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if(!pages_.Equals(other.pages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      hash ^= pages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeRange);
      }
      pages_.WriteTo(output, _repeated_pages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      size += pages_.CalculateSize(_repeated_pages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlobPages other) {
      if (other == null) {
        return;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      pages_.Add(other.pages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 26: {
            pages_.AddEntriesFrom(input, _repeated_pages_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A set of pages and the associated time range they cover.
  /// </summary>
  public sealed partial class PagesAndTimestamp : pb::IMessage<PagesAndTimestamp> {
    private static readonly pb::MessageParser<PagesAndTimestamp> _parser = new pb::MessageParser<PagesAndTimestamp>(() => new PagesAndTimestamp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PagesAndTimestamp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagesAndTimestamp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagesAndTimestamp(PagesAndTimestamp other) : this() {
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      pages_ = other.pages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagesAndTimestamp Clone() {
      return new PagesAndTimestamp(this);
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private global::Bosdyn.Api.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "pages" field.</summary>
    public const int PagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.PageInfo> _repeated_pages_codec
        = pb::FieldCodec.ForMessage(18, global::Bosdyn.Api.PageInfo.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.PageInfo> pages_ = new pbc::RepeatedField<global::Bosdyn.Api.PageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.PageInfo> Pages {
      get { return pages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PagesAndTimestamp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PagesAndTimestamp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if(!pages_.Equals(other.pages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      hash ^= pages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeRange);
      }
      pages_.WriteTo(output, _repeated_pages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      size += pages_.CalculateSize(_repeated_pages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PagesAndTimestamp other) {
      if (other == null) {
        return;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      pages_.Add(other.pages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 18: {
            pages_.AddEntriesFrom(input, _repeated_pages_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A query for pages containing the desired data.
  /// </summary>
  public sealed partial class DataQuery : pb::IMessage<DataQuery> {
    private static readonly pb::MessageParser<DataQuery> _parser = new pb::MessageParser<DataQuery>(() => new DataQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQuery(DataQuery other) : this() {
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      blobs_ = other.blobs_.Clone();
      textMessages_ = other.textMessages_;
      events_ = other.events_;
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataQuery Clone() {
      return new DataQuery(this);
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private global::Bosdyn.Api.TimeRange timeRange_;
    /// <summary>
    /// Timespan for data we want to query
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "blobs" field.</summary>
    public const int BlobsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.BlobSpec> _repeated_blobs_codec
        = pb::FieldCodec.ForMessage(18, global::Bosdyn.Api.BlobSpec.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.BlobSpec> blobs_ = new pbc::RepeatedField<global::Bosdyn.Api.BlobSpec>();
    /// <summary>
    /// Request for pages containing different kinds of data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.BlobSpec> Blobs {
      get { return blobs_; }
    }

    /// <summary>Field number for the "text_messages" field.</summary>
    public const int TextMessagesFieldNumber = 3;
    private bool textMessages_;
    /// <summary>
    /// return pages of text-messages during the specified timespan
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TextMessages {
      get { return textMessages_; }
      set {
        textMessages_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 4;
    private bool events_;
    /// <summary>
    /// return pages of events
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Events {
      get { return events_; }
      set {
        events_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 6;
    private bool comments_;
    /// <summary>
    /// return pages of operator comments during the specified timespan
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Comments {
      get { return comments_; }
      set {
        comments_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if(!blobs_.Equals(other.blobs_)) return false;
      if (TextMessages != other.TextMessages) return false;
      if (Events != other.Events) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      hash ^= blobs_.GetHashCode();
      if (TextMessages != false) hash ^= TextMessages.GetHashCode();
      if (Events != false) hash ^= Events.GetHashCode();
      if (Comments != false) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeRange);
      }
      blobs_.WriteTo(output, _repeated_blobs_codec);
      if (TextMessages != false) {
        output.WriteRawTag(24);
        output.WriteBool(TextMessages);
      }
      if (Events != false) {
        output.WriteRawTag(32);
        output.WriteBool(Events);
      }
      if (Comments != false) {
        output.WriteRawTag(48);
        output.WriteBool(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      size += blobs_.CalculateSize(_repeated_blobs_codec);
      if (TextMessages != false) {
        size += 1 + 1;
      }
      if (Events != false) {
        size += 1 + 1;
      }
      if (Comments != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataQuery other) {
      if (other == null) {
        return;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      blobs_.Add(other.blobs_);
      if (other.TextMessages != false) {
        TextMessages = other.TextMessages;
      }
      if (other.Events != false) {
        Events = other.Events;
      }
      if (other.Comments != false) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 18: {
            blobs_.AddEntriesFrom(input, _repeated_blobs_codec);
            break;
          }
          case 24: {
            TextMessages = input.ReadBool();
            break;
          }
          case 32: {
            Events = input.ReadBool();
            break;
          }
          case 48: {
            Comments = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Description of data matching a given DataQuery.
  /// </summary>
  public sealed partial class DataIndex : pb::IMessage<DataIndex> {
    private static readonly pb::MessageParser<DataIndex> _parser = new pb::MessageParser<DataIndex>(() => new DataIndex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataIndex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataIndex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataIndex(DataIndex other) : this() {
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      blobs_ = other.blobs_.Clone();
      textMessages_ = other.textMessages_ != null ? other.textMessages_.Clone() : null;
      events_ = other.events_ != null ? other.events_.Clone() : null;
      comments_ = other.comments_ != null ? other.comments_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataIndex Clone() {
      return new DataIndex(this);
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private global::Bosdyn.Api.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "blobs" field.</summary>
    public const int BlobsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.BlobPages> _repeated_blobs_codec
        = pb::FieldCodec.ForMessage(18, global::Bosdyn.Api.BlobPages.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.BlobPages> blobs_ = new pbc::RepeatedField<global::Bosdyn.Api.BlobPages>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.BlobPages> Blobs {
      get { return blobs_; }
    }

    /// <summary>Field number for the "text_messages" field.</summary>
    public const int TextMessagesFieldNumber = 3;
    private global::Bosdyn.Api.PagesAndTimestamp textMessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PagesAndTimestamp TextMessages {
      get { return textMessages_; }
      set {
        textMessages_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 4;
    private global::Bosdyn.Api.PagesAndTimestamp events_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PagesAndTimestamp Events {
      get { return events_; }
      set {
        events_ = value;
      }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 6;
    private global::Bosdyn.Api.PagesAndTimestamp comments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PagesAndTimestamp Comments {
      get { return comments_; }
      set {
        comments_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataIndex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataIndex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if(!blobs_.Equals(other.blobs_)) return false;
      if (!object.Equals(TextMessages, other.TextMessages)) return false;
      if (!object.Equals(Events, other.Events)) return false;
      if (!object.Equals(Comments, other.Comments)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      hash ^= blobs_.GetHashCode();
      if (textMessages_ != null) hash ^= TextMessages.GetHashCode();
      if (events_ != null) hash ^= Events.GetHashCode();
      if (comments_ != null) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeRange);
      }
      blobs_.WriteTo(output, _repeated_blobs_codec);
      if (textMessages_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TextMessages);
      }
      if (events_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Events);
      }
      if (comments_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      size += blobs_.CalculateSize(_repeated_blobs_codec);
      if (textMessages_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextMessages);
      }
      if (events_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Events);
      }
      if (comments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Comments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataIndex other) {
      if (other == null) {
        return;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      blobs_.Add(other.blobs_);
      if (other.textMessages_ != null) {
        if (textMessages_ == null) {
          TextMessages = new global::Bosdyn.Api.PagesAndTimestamp();
        }
        TextMessages.MergeFrom(other.TextMessages);
      }
      if (other.events_ != null) {
        if (events_ == null) {
          Events = new global::Bosdyn.Api.PagesAndTimestamp();
        }
        Events.MergeFrom(other.Events);
      }
      if (other.comments_ != null) {
        if (comments_ == null) {
          Comments = new global::Bosdyn.Api.PagesAndTimestamp();
        }
        Comments.MergeFrom(other.Comments);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 18: {
            blobs_.AddEntriesFrom(input, _repeated_blobs_codec);
            break;
          }
          case 26: {
            if (textMessages_ == null) {
              TextMessages = new global::Bosdyn.Api.PagesAndTimestamp();
            }
            input.ReadMessage(TextMessages);
            break;
          }
          case 34: {
            if (events_ == null) {
              Events = new global::Bosdyn.Api.PagesAndTimestamp();
            }
            input.ReadMessage(Events);
            break;
          }
          case 50: {
            if (comments_ == null) {
              Comments = new global::Bosdyn.Api.PagesAndTimestamp();
            }
            input.ReadMessage(Comments);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A request for Events and/or OperatorComments over a given time range.
  /// </summary>
  public sealed partial class EventsCommentsSpec : pb::IMessage<EventsCommentsSpec> {
    private static readonly pb::MessageParser<EventsCommentsSpec> _parser = new pb::MessageParser<EventsCommentsSpec>(() => new EventsCommentsSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventsCommentsSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsCommentsSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsCommentsSpec(EventsCommentsSpec other) : this() {
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      events_ = other.events_.Clone();
      comments_ = other.comments_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsCommentsSpec Clone() {
      return new EventsCommentsSpec(this);
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private global::Bosdyn.Api.TimeRange timeRange_;
    /// <summary>
    /// Timespan for data we want to query
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.EventSpec> _repeated_events_codec
        = pb::FieldCodec.ForMessage(18, global::Bosdyn.Api.EventSpec.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.EventSpec> events_ = new pbc::RepeatedField<global::Bosdyn.Api.EventSpec>();
    /// <summary>
    /// Return events which match the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.EventSpec> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "comments" field.</summary>
    public const int CommentsFieldNumber = 3;
    private bool comments_;
    /// <summary>
    /// Return operator comments which match the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Comments {
      get { return comments_; }
      set {
        comments_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventsCommentsSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventsCommentsSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if(!events_.Equals(other.events_)) return false;
      if (Comments != other.Comments) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      hash ^= events_.GetHashCode();
      if (Comments != false) hash ^= Comments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeRange);
      }
      events_.WriteTo(output, _repeated_events_codec);
      if (Comments != false) {
        output.WriteRawTag(24);
        output.WriteBool(Comments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      if (Comments != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventsCommentsSpec other) {
      if (other == null) {
        return;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      events_.Add(other.events_);
      if (other.Comments != false) {
        Comments = other.Comments;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 18: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 24: {
            Comments = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Requested Events and/or OperatorComments.
  /// </summary>
  public sealed partial class EventsComments : pb::IMessage<EventsComments> {
    private static readonly pb::MessageParser<EventsComments> _parser = new pb::MessageParser<EventsComments>(() => new EventsComments());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventsComments> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsComments() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsComments(EventsComments other) : this() {
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      events_ = other.events_.Clone();
      operatorComments_ = other.operatorComments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventsComments Clone() {
      return new EventsComments(this);
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 1;
    private global::Bosdyn.Api.TimeRange timeRange_;
    /// <summary>
    /// Timespan for data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "events" field.</summary>
    public const int EventsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.Event> _repeated_events_codec
        = pb::FieldCodec.ForMessage(18, global::Bosdyn.Api.Event.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.Event> events_ = new pbc::RepeatedField<global::Bosdyn.Api.Event>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.Event> Events {
      get { return events_; }
    }

    /// <summary>Field number for the "operator_comments" field.</summary>
    public const int OperatorCommentsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.OperatorComment> _repeated_operatorComments_codec
        = pb::FieldCodec.ForMessage(26, global::Bosdyn.Api.OperatorComment.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.OperatorComment> operatorComments_ = new pbc::RepeatedField<global::Bosdyn.Api.OperatorComment>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.OperatorComment> OperatorComments {
      get { return operatorComments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventsComments);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventsComments other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if(!events_.Equals(other.events_)) return false;
      if(!operatorComments_.Equals(other.operatorComments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      hash ^= events_.GetHashCode();
      hash ^= operatorComments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timeRange_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(TimeRange);
      }
      events_.WriteTo(output, _repeated_events_codec);
      operatorComments_.WriteTo(output, _repeated_operatorComments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      size += events_.CalculateSize(_repeated_events_codec);
      size += operatorComments_.CalculateSize(_repeated_operatorComments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventsComments other) {
      if (other == null) {
        return;
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      events_.Add(other.events_);
      operatorComments_.Add(other.operatorComments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 18: {
            events_.AddEntriesFrom(input, _repeated_events_codec);
            break;
          }
          case 26: {
            operatorComments_.AddEntriesFrom(input, _repeated_operatorComments_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataBufferStatus : pb::IMessage<DataBufferStatus> {
    private static readonly pb::MessageParser<DataBufferStatus> _parser = new pb::MessageParser<DataBufferStatus>(() => new DataBufferStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataBufferStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBufferStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBufferStatus(DataBufferStatus other) : this() {
      numDataBufferPages_ = other.numDataBufferPages_;
      dataBufferTotalBytes_ = other.dataBufferTotalBytes_;
      numComments_ = other.numComments_;
      numEvents_ = other.numEvents_;
      blobSpecs_ = other.blobSpecs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataBufferStatus Clone() {
      return new DataBufferStatus(this);
    }

    /// <summary>Field number for the "num_data_buffer_pages" field.</summary>
    public const int NumDataBufferPagesFieldNumber = 1;
    private long numDataBufferPages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumDataBufferPages {
      get { return numDataBufferPages_; }
      set {
        numDataBufferPages_ = value;
      }
    }

    /// <summary>Field number for the "data_buffer_total_bytes" field.</summary>
    public const int DataBufferTotalBytesFieldNumber = 2;
    private long dataBufferTotalBytes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DataBufferTotalBytes {
      get { return dataBufferTotalBytes_; }
      set {
        dataBufferTotalBytes_ = value;
      }
    }

    /// <summary>Field number for the "num_comments" field.</summary>
    public const int NumCommentsFieldNumber = 3;
    private long numComments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumComments {
      get { return numComments_; }
      set {
        numComments_ = value;
      }
    }

    /// <summary>Field number for the "num_events" field.</summary>
    public const int NumEventsFieldNumber = 4;
    private long numEvents_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NumEvents {
      get { return numEvents_; }
      set {
        numEvents_ = value;
      }
    }

    /// <summary>Field number for the "blob_specs" field.</summary>
    public const int BlobSpecsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.BlobSpec> _repeated_blobSpecs_codec
        = pb::FieldCodec.ForMessage(42, global::Bosdyn.Api.BlobSpec.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.BlobSpec> blobSpecs_ = new pbc::RepeatedField<global::Bosdyn.Api.BlobSpec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.BlobSpec> BlobSpecs {
      get { return blobSpecs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataBufferStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataBufferStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NumDataBufferPages != other.NumDataBufferPages) return false;
      if (DataBufferTotalBytes != other.DataBufferTotalBytes) return false;
      if (NumComments != other.NumComments) return false;
      if (NumEvents != other.NumEvents) return false;
      if(!blobSpecs_.Equals(other.blobSpecs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NumDataBufferPages != 0L) hash ^= NumDataBufferPages.GetHashCode();
      if (DataBufferTotalBytes != 0L) hash ^= DataBufferTotalBytes.GetHashCode();
      if (NumComments != 0L) hash ^= NumComments.GetHashCode();
      if (NumEvents != 0L) hash ^= NumEvents.GetHashCode();
      hash ^= blobSpecs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NumDataBufferPages != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(NumDataBufferPages);
      }
      if (DataBufferTotalBytes != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DataBufferTotalBytes);
      }
      if (NumComments != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NumComments);
      }
      if (NumEvents != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NumEvents);
      }
      blobSpecs_.WriteTo(output, _repeated_blobSpecs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NumDataBufferPages != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumDataBufferPages);
      }
      if (DataBufferTotalBytes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DataBufferTotalBytes);
      }
      if (NumComments != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumComments);
      }
      if (NumEvents != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumEvents);
      }
      size += blobSpecs_.CalculateSize(_repeated_blobSpecs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataBufferStatus other) {
      if (other == null) {
        return;
      }
      if (other.NumDataBufferPages != 0L) {
        NumDataBufferPages = other.NumDataBufferPages;
      }
      if (other.DataBufferTotalBytes != 0L) {
        DataBufferTotalBytes = other.DataBufferTotalBytes;
      }
      if (other.NumComments != 0L) {
        NumComments = other.NumComments;
      }
      if (other.NumEvents != 0L) {
        NumEvents = other.NumEvents;
      }
      blobSpecs_.Add(other.blobSpecs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NumDataBufferPages = input.ReadInt64();
            break;
          }
          case 16: {
            DataBufferTotalBytes = input.ReadInt64();
            break;
          }
          case 24: {
            NumComments = input.ReadInt64();
            break;
          }
          case 32: {
            NumEvents = input.ReadInt64();
            break;
          }
          case 42: {
            blobSpecs_.AddEntriesFrom(input, _repeated_blobSpecs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GRPC request for data index information.
  /// </summary>
  public sealed partial class GetDataIndexResponse : pb::IMessage<GetDataIndexResponse> {
    private static readonly pb::MessageParser<GetDataIndexResponse> _parser = new pb::MessageParser<GetDataIndexResponse>(() => new GetDataIndexResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDataIndexResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataIndexResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataIndexResponse(GetDataIndexResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      dataIndex_ = other.dataIndex_ != null ? other.dataIndex_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataIndexResponse Clone() {
      return new GetDataIndexResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "data_index" field.</summary>
    public const int DataIndexFieldNumber = 2;
    private global::Bosdyn.Api.DataIndex dataIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.DataIndex DataIndex {
      get { return dataIndex_; }
      set {
        dataIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDataIndexResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDataIndexResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(DataIndex, other.DataIndex)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (dataIndex_ != null) hash ^= DataIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (dataIndex_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (dataIndex_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDataIndexResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.dataIndex_ != null) {
        if (dataIndex_ == null) {
          DataIndex = new global::Bosdyn.Api.DataIndex();
        }
        DataIndex.MergeFrom(other.DataIndex);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (dataIndex_ == null) {
              DataIndex = new global::Bosdyn.Api.DataIndex();
            }
            input.ReadMessage(DataIndex);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GRPC response with requested data index information.
  /// </summary>
  public sealed partial class GetDataIndexRequest : pb::IMessage<GetDataIndexRequest> {
    private static readonly pb::MessageParser<GetDataIndexRequest> _parser = new pb::MessageParser<GetDataIndexRequest>(() => new GetDataIndexRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDataIndexRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataIndexRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataIndexRequest(GetDataIndexRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      dataQuery_ = other.dataQuery_ != null ? other.dataQuery_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataIndexRequest Clone() {
      return new GetDataIndexRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "data_query" field.</summary>
    public const int DataQueryFieldNumber = 2;
    private global::Bosdyn.Api.DataQuery dataQuery_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.DataQuery DataQuery {
      get { return dataQuery_; }
      set {
        dataQuery_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDataIndexRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDataIndexRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(DataQuery, other.DataQuery)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (dataQuery_ != null) hash ^= DataQuery.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (dataQuery_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataQuery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (dataQuery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataQuery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDataIndexRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.dataQuery_ != null) {
        if (dataQuery_ == null) {
          DataQuery = new global::Bosdyn.Api.DataQuery();
        }
        DataQuery.MergeFrom(other.DataQuery);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (dataQuery_ == null) {
              DataQuery = new global::Bosdyn.Api.DataQuery();
            }
            input.ReadMessage(DataQuery);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GRPC request for Events and OperatorComments.
  /// </summary>
  public sealed partial class GetEventsCommentsRequest : pb::IMessage<GetEventsCommentsRequest> {
    private static readonly pb::MessageParser<GetEventsCommentsRequest> _parser = new pb::MessageParser<GetEventsCommentsRequest>(() => new GetEventsCommentsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEventsCommentsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsCommentsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsCommentsRequest(GetEventsCommentsRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      eventCommentRequest_ = other.eventCommentRequest_ != null ? other.eventCommentRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsCommentsRequest Clone() {
      return new GetEventsCommentsRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "event_comment_request" field.</summary>
    public const int EventCommentRequestFieldNumber = 2;
    private global::Bosdyn.Api.EventsCommentsSpec eventCommentRequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EventsCommentsSpec EventCommentRequest {
      get { return eventCommentRequest_; }
      set {
        eventCommentRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEventsCommentsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEventsCommentsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(EventCommentRequest, other.EventCommentRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (eventCommentRequest_ != null) hash ^= EventCommentRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (eventCommentRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventCommentRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (eventCommentRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventCommentRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEventsCommentsRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.eventCommentRequest_ != null) {
        if (eventCommentRequest_ == null) {
          EventCommentRequest = new global::Bosdyn.Api.EventsCommentsSpec();
        }
        EventCommentRequest.MergeFrom(other.EventCommentRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (eventCommentRequest_ == null) {
              EventCommentRequest = new global::Bosdyn.Api.EventsCommentsSpec();
            }
            input.ReadMessage(EventCommentRequest);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GRPC response with requested Events and OperatorComments.
  /// </summary>
  public sealed partial class GetEventsCommentsResponse : pb::IMessage<GetEventsCommentsResponse> {
    private static readonly pb::MessageParser<GetEventsCommentsResponse> _parser = new pb::MessageParser<GetEventsCommentsResponse>(() => new GetEventsCommentsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEventsCommentsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsCommentsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsCommentsResponse(GetEventsCommentsResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      eventsComments_ = other.eventsComments_ != null ? other.eventsComments_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEventsCommentsResponse Clone() {
      return new GetEventsCommentsResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "events_comments" field.</summary>
    public const int EventsCommentsFieldNumber = 2;
    private global::Bosdyn.Api.EventsComments eventsComments_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EventsComments EventsComments {
      get { return eventsComments_; }
      set {
        eventsComments_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEventsCommentsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEventsCommentsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(EventsComments, other.EventsComments)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (eventsComments_ != null) hash ^= EventsComments.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (eventsComments_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EventsComments);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (eventsComments_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EventsComments);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEventsCommentsResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.eventsComments_ != null) {
        if (eventsComments_ == null) {
          EventsComments = new global::Bosdyn.Api.EventsComments();
        }
        EventsComments.MergeFrom(other.EventsComments);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (eventsComments_ == null) {
              EventsComments = new global::Bosdyn.Api.EventsComments();
            }
            input.ReadMessage(EventsComments);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDataBufferStatusRequest : pb::IMessage<GetDataBufferStatusRequest> {
    private static readonly pb::MessageParser<GetDataBufferStatusRequest> _parser = new pb::MessageParser<GetDataBufferStatusRequest>(() => new GetDataBufferStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDataBufferStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataBufferStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataBufferStatusRequest(GetDataBufferStatusRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      getBlobSpecs_ = other.getBlobSpecs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataBufferStatusRequest Clone() {
      return new GetDataBufferStatusRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "get_blob_specs" field.</summary>
    public const int GetBlobSpecsFieldNumber = 2;
    private bool getBlobSpecs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool GetBlobSpecs {
      get { return getBlobSpecs_; }
      set {
        getBlobSpecs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDataBufferStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDataBufferStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (GetBlobSpecs != other.GetBlobSpecs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (GetBlobSpecs != false) hash ^= GetBlobSpecs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (GetBlobSpecs != false) {
        output.WriteRawTag(16);
        output.WriteBool(GetBlobSpecs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (GetBlobSpecs != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDataBufferStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.GetBlobSpecs != false) {
        GetBlobSpecs = other.GetBlobSpecs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            GetBlobSpecs = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDataBufferStatusResponse : pb::IMessage<GetDataBufferStatusResponse> {
    private static readonly pb::MessageParser<GetDataBufferStatusResponse> _parser = new pb::MessageParser<GetDataBufferStatusResponse>(() => new GetDataBufferStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDataBufferStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataBufferStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataBufferStatusResponse(GetDataBufferStatusResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      dataBufferStatus_ = other.dataBufferStatus_ != null ? other.dataBufferStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataBufferStatusResponse Clone() {
      return new GetDataBufferStatusResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "data_buffer_status" field.</summary>
    public const int DataBufferStatusFieldNumber = 2;
    private global::Bosdyn.Api.DataBufferStatus dataBufferStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.DataBufferStatus DataBufferStatus {
      get { return dataBufferStatus_; }
      set {
        dataBufferStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDataBufferStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDataBufferStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(DataBufferStatus, other.DataBufferStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (dataBufferStatus_ != null) hash ^= DataBufferStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (dataBufferStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DataBufferStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (dataBufferStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DataBufferStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDataBufferStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.dataBufferStatus_ != null) {
        if (dataBufferStatus_ == null) {
          DataBufferStatus = new global::Bosdyn.Api.DataBufferStatus();
        }
        DataBufferStatus.MergeFrom(other.DataBufferStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (dataBufferStatus_ == null) {
              DataBufferStatus = new global::Bosdyn.Api.DataBufferStatus();
            }
            input.ReadMessage(DataBufferStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDataPagesRequest : pb::IMessage<GetDataPagesRequest> {
    private static readonly pb::MessageParser<GetDataPagesRequest> _parser = new pb::MessageParser<GetDataPagesRequest>(() => new GetDataPagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDataPagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataPagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataPagesRequest(GetDataPagesRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataPagesRequest Clone() {
      return new GetDataPagesRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 2;
    private global::Bosdyn.Api.TimeRange timeRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDataPagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDataPagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (timeRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeRange);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDataPagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetDataPagesResponse : pb::IMessage<GetDataPagesResponse> {
    private static readonly pb::MessageParser<GetDataPagesResponse> _parser = new pb::MessageParser<GetDataPagesResponse>(() => new GetDataPagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetDataPagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataPagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataPagesResponse(GetDataPagesResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      pages_ = other.pages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetDataPagesResponse Clone() {
      return new GetDataPagesResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "pages" field.</summary>
    public const int PagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.PageInfo> _repeated_pages_codec
        = pb::FieldCodec.ForMessage(18, global::Bosdyn.Api.PageInfo.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.PageInfo> pages_ = new pbc::RepeatedField<global::Bosdyn.Api.PageInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.PageInfo> Pages {
      get { return pages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetDataPagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetDataPagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if(!pages_.Equals(other.pages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      hash ^= pages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      pages_.WriteTo(output, _repeated_pages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      size += pages_.CalculateSize(_repeated_pages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetDataPagesResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      pages_.Add(other.pages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            pages_.AddEntriesFrom(input, _repeated_pages_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GRPC request to delete pages. Both time_range and page_ids can be set.
  /// </summary>
  public sealed partial class DeleteDataPagesRequest : pb::IMessage<DeleteDataPagesRequest> {
    private static readonly pb::MessageParser<DeleteDataPagesRequest> _parser = new pb::MessageParser<DeleteDataPagesRequest>(() => new DeleteDataPagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDataPagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDataPagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDataPagesRequest(DeleteDataPagesRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      timeRange_ = other.timeRange_ != null ? other.timeRange_.Clone() : null;
      pageIds_ = other.pageIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDataPagesRequest Clone() {
      return new DeleteDataPagesRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "time_range" field.</summary>
    public const int TimeRangeFieldNumber = 2;
    private global::Bosdyn.Api.TimeRange timeRange_;
    /// <summary>
    /// Delete all pages in this time range
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.TimeRange TimeRange {
      get { return timeRange_; }
      set {
        timeRange_ = value;
      }
    }

    /// <summary>Field number for the "page_ids" field.</summary>
    public const int PageIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_pageIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> pageIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Delete all pages with matching ids
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> PageIds {
      get { return pageIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDataPagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDataPagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(TimeRange, other.TimeRange)) return false;
      if(!pageIds_.Equals(other.pageIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (timeRange_ != null) hash ^= TimeRange.GetHashCode();
      hash ^= pageIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (timeRange_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TimeRange);
      }
      pageIds_.WriteTo(output, _repeated_pageIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (timeRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeRange);
      }
      size += pageIds_.CalculateSize(_repeated_pageIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDataPagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.timeRange_ != null) {
        if (timeRange_ == null) {
          TimeRange = new global::Bosdyn.Api.TimeRange();
        }
        TimeRange.MergeFrom(other.TimeRange);
      }
      pageIds_.Add(other.pageIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (timeRange_ == null) {
              TimeRange = new global::Bosdyn.Api.TimeRange();
            }
            input.ReadMessage(TimeRange);
            break;
          }
          case 26: {
            pageIds_.AddEntriesFrom(input, _repeated_pageIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeletePageStatus : pb::IMessage<DeletePageStatus> {
    private static readonly pb::MessageParser<DeletePageStatus> _parser = new pb::MessageParser<DeletePageStatus>(() => new DeletePageStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeletePageStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePageStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePageStatus(DeletePageStatus other) : this() {
      pageId_ = other.pageId_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeletePageStatus Clone() {
      return new DeletePageStatus(this);
    }

    /// <summary>Field number for the "page_id" field.</summary>
    public const int PageIdFieldNumber = 1;
    private string pageId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageId {
      get { return pageId_; }
      set {
        pageId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Bosdyn.Api.DeletePageStatus.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.DeletePageStatus.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeletePageStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeletePageStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PageId != other.PageId) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PageId.Length != 0) hash ^= PageId.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PageId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PageId);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PageId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageId);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeletePageStatus other) {
      if (other == null) {
        return;
      }
      if (other.PageId.Length != 0) {
        PageId = other.PageId;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PageId = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::Bosdyn.Api.DeletePageStatus.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeletePageStatus message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("STATUS_DELETED")] Deleted = 1,
        [pbr::OriginalName("STATUS_DELETION_FAILED")] DeletionFailed = 2,
        [pbr::OriginalName("STATUS_NOT_FOUND")] NotFound = 3,
      }

    }
    #endregion

  }

  public sealed partial class DeleteDataPagesResponse : pb::IMessage<DeleteDataPagesResponse> {
    private static readonly pb::MessageParser<DeleteDataPagesResponse> _parser = new pb::MessageParser<DeleteDataPagesResponse>(() => new DeleteDataPagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteDataPagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.DataIndexReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDataPagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDataPagesResponse(DeleteDataPagesResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      bytesDeleted_ = other.bytesDeleted_;
      status_ = other.status_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteDataPagesResponse Clone() {
      return new DeleteDataPagesResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "bytes_deleted" field.</summary>
    public const int BytesDeletedFieldNumber = 2;
    private long bytesDeleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BytesDeleted {
      get { return bytesDeleted_; }
      set {
        bytesDeleted_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.DeletePageStatus> _repeated_status_codec
        = pb::FieldCodec.ForMessage(26, global::Bosdyn.Api.DeletePageStatus.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.DeletePageStatus> status_ = new pbc::RepeatedField<global::Bosdyn.Api.DeletePageStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.DeletePageStatus> Status {
      get { return status_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteDataPagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteDataPagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (BytesDeleted != other.BytesDeleted) return false;
      if(!status_.Equals(other.status_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (BytesDeleted != 0L) hash ^= BytesDeleted.GetHashCode();
      hash ^= status_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (BytesDeleted != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(BytesDeleted);
      }
      status_.WriteTo(output, _repeated_status_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (BytesDeleted != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BytesDeleted);
      }
      size += status_.CalculateSize(_repeated_status_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteDataPagesResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.BytesDeleted != 0L) {
        BytesDeleted = other.BytesDeleted;
      }
      status_.Add(other.status_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            BytesDeleted = input.ReadInt64();
            break;
          }
          case 26: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
