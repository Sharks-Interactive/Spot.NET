// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/estop.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bosdyn.Api {

  /// <summary>Holder for reflection information generated from Protos/estop.proto</summary>
  public static partial class EstopReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/estop.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static EstopReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3MvZXN0b3AucHJvdG8SCmJvc2R5bi5hcGkaE1Byb3Rvcy9oZWFk",
            "ZXIucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90byKgAQoN",
            "RXN0b3BFbmRwb2ludBIMCgRyb2xlGAEgASgJEgwKBG5hbWUYAiABKAkSEQoJ",
            "dW5pcXVlX2lkGAMgASgJEioKB3RpbWVvdXQYBCABKAsyGS5nb29nbGUucHJv",
            "dG9idWYuRHVyYXRpb24SNAoRY3V0X3Bvd2VyX3RpbWVvdXQYBSABKAsyGS5n",
            "b29nbGUucHJvdG9idWYuRHVyYXRpb24iTgoLRXN0b3BDb25maWcSLAoJZW5k",
            "cG9pbnRzGAEgAygLMhkuYm9zZHluLmFwaS5Fc3RvcEVuZHBvaW50EhEKCXVu",
            "aXF1ZV9pZBgCIAEoCSK0AQoXRXN0b3BFbmRwb2ludFdpdGhTdGF0dXMSKwoI",
            "ZW5kcG9pbnQYASABKAsyGS5ib3NkeW4uYXBpLkVzdG9wRW5kcG9pbnQSLgoK",
            "c3RvcF9sZXZlbBgCIAEoDjIaLmJvc2R5bi5hcGkuRXN0b3BTdG9wTGV2ZWwS",
            "PAoZdGltZV9zaW5jZV92YWxpZF9yZXNwb25zZRgDIAEoCzIZLmdvb2dsZS5w",
            "cm90b2J1Zi5EdXJhdGlvbiKXAQoRRXN0b3BTeXN0ZW1TdGF0dXMSNgoJZW5k",
            "cG9pbnRzGAMgAygLMiMuYm9zZHluLmFwaS5Fc3RvcEVuZHBvaW50V2l0aFN0",
            "YXR1cxIuCgpzdG9wX2xldmVsGAQgASgOMhouYm9zZHluLmFwaS5Fc3RvcFN0",
            "b3BMZXZlbBIaChJzdG9wX2xldmVsX2RldGFpbHMYBSABKAkiwgEKE0VzdG9w",
            "Q2hlY2tJblJlcXVlc3QSKQoGaGVhZGVyGAEgASgLMhkuYm9zZHluLmFwaS5S",
            "ZXF1ZXN0SGVhZGVyEisKCGVuZHBvaW50GAIgASgLMhkuYm9zZHluLmFwaS5F",
            "c3RvcEVuZHBvaW50EhEKCWNoYWxsZW5nZRgDIAEoBBIQCghyZXNwb25zZRgE",
            "IAEoBBIuCgpzdG9wX2xldmVsGAUgASgOMhouYm9zZHluLmFwaS5Fc3RvcFN0",
            "b3BMZXZlbCKzAgoURXN0b3BDaGVja0luUmVzcG9uc2USKgoGaGVhZGVyGAEg",
            "ASgLMhouYm9zZHluLmFwaS5SZXNwb25zZUhlYWRlchIwCgdyZXF1ZXN0GAIg",
            "ASgLMh8uYm9zZHluLmFwaS5Fc3RvcENoZWNrSW5SZXF1ZXN0EhEKCWNoYWxs",
            "ZW5nZRgDIAEoBBI3CgZzdGF0dXMYBCABKA4yJy5ib3NkeW4uYXBpLkVzdG9w",
            "Q2hlY2tJblJlc3BvbnNlLlN0YXR1cyJxCgZTdGF0dXMSEgoOU1RBVFVTX1VO",
            "S05PV04QABINCglTVEFUVVNfT0sQARIbChdTVEFUVVNfRU5EUE9JTlRfVU5L",
            "Tk9XThACEicKI1NUQVRVU19JTkNPUlJFQ1RfQ0hBTExFTkdFX1JFU1BPTlNF",
            "EAUiyAEKHFJlZ2lzdGVyRXN0b3BFbmRwb2ludFJlcXVlc3QSKQoGaGVhZGVy",
            "GAEgASgLMhkuYm9zZHluLmFwaS5SZXF1ZXN0SGVhZGVyEjIKD3RhcmdldF9l",
            "bmRwb2ludBgCIAEoCzIZLmJvc2R5bi5hcGkuRXN0b3BFbmRwb2ludBIYChB0",
            "YXJnZXRfY29uZmlnX2lkGAMgASgJEi8KDG5ld19lbmRwb2ludBgEIAEoCzIZ",
            "LmJvc2R5bi5hcGkuRXN0b3BFbmRwb2ludCKDAwodUmVnaXN0ZXJFc3RvcEVu",
            "ZHBvaW50UmVzcG9uc2USKgoGaGVhZGVyGAEgASgLMhouYm9zZHluLmFwaS5S",
            "ZXNwb25zZUhlYWRlchI5CgdyZXF1ZXN0GAIgASgLMiguYm9zZHluLmFwaS5S",
            "ZWdpc3RlckVzdG9wRW5kcG9pbnRSZXF1ZXN0Ei8KDG5ld19lbmRwb2ludBgD",
            "IAEoCzIZLmJvc2R5bi5hcGkuRXN0b3BFbmRwb2ludBJACgZzdGF0dXMYBCAB",
            "KA4yMC5ib3NkeW4uYXBpLlJlZ2lzdGVyRXN0b3BFbmRwb2ludFJlc3BvbnNl",
            "LlN0YXR1cyKHAQoGU3RhdHVzEhIKDlNUQVRVU19VTktOT1dOEAASEgoOU1RB",
            "VFVTX1NVQ0NFU1MQARIcChhTVEFUVVNfRU5EUE9JTlRfTUlTTUFUQ0gQAhIa",
            "ChZTVEFUVVNfQ09ORklHX01JU01BVENIEAMSGwoXU1RBVFVTX0lOVkFMSURf",
            "RU5EUE9JTlQQBCKZAQoeRGVyZWdpc3RlckVzdG9wRW5kcG9pbnRSZXF1ZXN0",
            "EikKBmhlYWRlchgBIAEoCzIZLmJvc2R5bi5hcGkuUmVxdWVzdEhlYWRlchIy",
            "Cg90YXJnZXRfZW5kcG9pbnQYAiABKAsyGS5ib3NkeW4uYXBpLkVzdG9wRW5k",
            "cG9pbnQSGAoQdGFyZ2V0X2NvbmZpZ19pZBgDIAEoCSLRAgofRGVyZWdpc3Rl",
            "ckVzdG9wRW5kcG9pbnRSZXNwb25zZRIqCgZoZWFkZXIYASABKAsyGi5ib3Nk",
            "eW4uYXBpLlJlc3BvbnNlSGVhZGVyEjsKB3JlcXVlc3QYAiABKAsyKi5ib3Nk",
            "eW4uYXBpLkRlcmVnaXN0ZXJFc3RvcEVuZHBvaW50UmVxdWVzdBJCCgZzdGF0",
            "dXMYBCABKA4yMi5ib3NkeW4uYXBpLkRlcmVnaXN0ZXJFc3RvcEVuZHBvaW50",
            "UmVzcG9uc2UuU3RhdHVzIoABCgZTdGF0dXMSEgoOU1RBVFVTX1VOS05PV04Q",
            "ABISCg5TVEFUVVNfU1VDQ0VTUxABEhwKGFNUQVRVU19FTkRQT0lOVF9NSVNN",
            "QVRDSBACEhoKFlNUQVRVU19DT05GSUdfTUlTTUFUQ0gQAxIUChBTVEFUVVNf",
            "TU9UT1JTX09OEAQiXAoVR2V0RXN0b3BDb25maWdSZXF1ZXN0EikKBmhlYWRl",
            "chgBIAEoCzIZLmJvc2R5bi5hcGkuUmVxdWVzdEhlYWRlchIYChB0YXJnZXRf",
            "Y29uZmlnX2lkGAQgASgJIqgBChZHZXRFc3RvcENvbmZpZ1Jlc3BvbnNlEioK",
            "BmhlYWRlchgBIAEoCzIaLmJvc2R5bi5hcGkuUmVzcG9uc2VIZWFkZXISMgoH",
            "cmVxdWVzdBgCIAEoCzIhLmJvc2R5bi5hcGkuR2V0RXN0b3BDb25maWdSZXF1",
            "ZXN0Ei4KDWFjdGl2ZV9jb25maWcYAyABKAsyFy5ib3NkeW4uYXBpLkVzdG9w",
            "Q29uZmlnIoUBChVTZXRFc3RvcENvbmZpZ1JlcXVlc3QSKQoGaGVhZGVyGAEg",
            "ASgLMhkuYm9zZHluLmFwaS5SZXF1ZXN0SGVhZGVyEicKBmNvbmZpZxgDIAEo",
            "CzIXLmJvc2R5bi5hcGkuRXN0b3BDb25maWcSGAoQdGFyZ2V0X2NvbmZpZ19p",
            "ZBgEIAEoCSLCAgoWU2V0RXN0b3BDb25maWdSZXNwb25zZRIqCgZoZWFkZXIY",
            "ASABKAsyGi5ib3NkeW4uYXBpLlJlc3BvbnNlSGVhZGVyEjIKB3JlcXVlc3QY",
            "AiABKAsyIS5ib3NkeW4uYXBpLlNldEVzdG9wQ29uZmlnUmVxdWVzdBIuCg1h",
            "Y3RpdmVfY29uZmlnGAMgASgLMhcuYm9zZHluLmFwaS5Fc3RvcENvbmZpZxI5",
            "CgZzdGF0dXMYBCABKA4yKS5ib3NkeW4uYXBpLlNldEVzdG9wQ29uZmlnUmVz",
            "cG9uc2UuU3RhdHVzIl0KBlN0YXR1cxISCg5TVEFUVVNfVU5LTk9XThAAEhIK",
            "DlNUQVRVU19TVUNDRVNTEAESFQoRU1RBVFVTX0lOVkFMSURfSUQQAhIUChBT",
            "VEFUVVNfTU9UT1JTX09OEAQiSAobR2V0RXN0b3BTeXN0ZW1TdGF0dXNSZXF1",
            "ZXN0EikKBmhlYWRlchgBIAEoCzIZLmJvc2R5bi5hcGkuUmVxdWVzdEhlYWRl",
            "ciJ5ChxHZXRFc3RvcFN5c3RlbVN0YXR1c1Jlc3BvbnNlEioKBmhlYWRlchgB",
            "IAEoCzIaLmJvc2R5bi5hcGkuUmVzcG9uc2VIZWFkZXISLQoGc3RhdHVzGAMg",
            "ASgLMh0uYm9zZHluLmFwaS5Fc3RvcFN5c3RlbVN0YXR1cyp1Cg5Fc3RvcFN0",
            "b3BMZXZlbBIXChNFU1RPUF9MRVZFTF9VTktOT1dOEAASEwoPRVNUT1BfTEVW",
            "RUxfQ1VUEAESHwobRVNUT1BfTEVWRUxfU0VUVExFX1RIRU5fQ1VUEAISFAoQ",
            "RVNUT1BfTEVWRUxfTk9ORRAEQgxCCkVzdG9wUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bosdyn.Api.HeaderReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Bosdyn.Api.EstopStopLevel), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EstopEndpoint), global::Bosdyn.Api.EstopEndpoint.Parser, new[]{ "Role", "Name", "UniqueId", "Timeout", "CutPowerTimeout" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EstopConfig), global::Bosdyn.Api.EstopConfig.Parser, new[]{ "Endpoints", "UniqueId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EstopEndpointWithStatus), global::Bosdyn.Api.EstopEndpointWithStatus.Parser, new[]{ "Endpoint", "StopLevel", "TimeSinceValidResponse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EstopSystemStatus), global::Bosdyn.Api.EstopSystemStatus.Parser, new[]{ "Endpoints", "StopLevel", "StopLevelDetails" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EstopCheckInRequest), global::Bosdyn.Api.EstopCheckInRequest.Parser, new[]{ "Header", "Endpoint", "Challenge", "Response", "StopLevel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.EstopCheckInResponse), global::Bosdyn.Api.EstopCheckInResponse.Parser, new[]{ "Header", "Request", "Challenge", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.EstopCheckInResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.RegisterEstopEndpointRequest), global::Bosdyn.Api.RegisterEstopEndpointRequest.Parser, new[]{ "Header", "TargetEndpoint", "TargetConfigId", "NewEndpoint" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.RegisterEstopEndpointResponse), global::Bosdyn.Api.RegisterEstopEndpointResponse.Parser, new[]{ "Header", "Request", "NewEndpoint", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.RegisterEstopEndpointResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DeregisterEstopEndpointRequest), global::Bosdyn.Api.DeregisterEstopEndpointRequest.Parser, new[]{ "Header", "TargetEndpoint", "TargetConfigId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.DeregisterEstopEndpointResponse), global::Bosdyn.Api.DeregisterEstopEndpointResponse.Parser, new[]{ "Header", "Request", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.DeregisterEstopEndpointResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetEstopConfigRequest), global::Bosdyn.Api.GetEstopConfigRequest.Parser, new[]{ "Header", "TargetConfigId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetEstopConfigResponse), global::Bosdyn.Api.GetEstopConfigResponse.Parser, new[]{ "Header", "Request", "ActiveConfig" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.SetEstopConfigRequest), global::Bosdyn.Api.SetEstopConfigRequest.Parser, new[]{ "Header", "Config", "TargetConfigId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.SetEstopConfigResponse), global::Bosdyn.Api.SetEstopConfigResponse.Parser, new[]{ "Header", "Request", "ActiveConfig", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.SetEstopConfigResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetEstopSystemStatusRequest), global::Bosdyn.Api.GetEstopSystemStatusRequest.Parser, new[]{ "Header" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetEstopSystemStatusResponse), global::Bosdyn.Api.GetEstopSystemStatusResponse.Parser, new[]{ "Header", "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The state of the E-Stop system.
  /// </summary>
  public enum EstopStopLevel {
    /// <summary>
    /// Invalid stop level.
    /// </summary>
    [pbr::OriginalName("ESTOP_LEVEL_UNKNOWN")] EstopLevelUnknown = 0,
    /// <summary>
    /// Immediately cut power to the actuators.
    /// </summary>
    [pbr::OriginalName("ESTOP_LEVEL_CUT")] EstopLevelCut = 1,
    /// <summary>
    /// Prepare for loss of actuator power, then cut power.
    /// </summary>
    [pbr::OriginalName("ESTOP_LEVEL_SETTLE_THEN_CUT")] EstopLevelSettleThenCut = 2,
    /// <summary>
    /// No-stop level. The endpoint believes the robot is safe to operate.
    /// </summary>
    [pbr::OriginalName("ESTOP_LEVEL_NONE")] EstopLevelNone = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// An  to the robot software-E-Stop system.
  /// </summary>
  public sealed partial class EstopEndpoint : pb::IMessage<EstopEndpoint> {
    private static readonly pb::MessageParser<EstopEndpoint> _parser = new pb::MessageParser<EstopEndpoint>(() => new EstopEndpoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstopEndpoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopEndpoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopEndpoint(EstopEndpoint other) : this() {
      role_ = other.role_;
      name_ = other.name_;
      uniqueId_ = other.uniqueId_;
      timeout_ = other.timeout_ != null ? other.timeout_.Clone() : null;
      cutPowerTimeout_ = other.cutPowerTimeout_ != null ? other.cutPowerTimeout_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopEndpoint Clone() {
      return new EstopEndpoint(this);
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 1;
    private string role_ = "";
    /// <summary>
    /// Role of this endpoint. Should be a user-friendly string, e.g. "OCU".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Role {
      get { return role_; }
      set {
        role_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of this endpoint. Specifies a thing to fill the given role, e.g. "patrol-ocu01"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 3;
    private string uniqueId_ = "";
    /// <summary>
    /// Unique ID assigned by the server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "timeout" field.</summary>
    public const int TimeoutFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration timeout_;
    /// <summary>
    /// Maximum delay between challenge and response for this endpoint prior to soft power off
    /// handling. After timeout seconds has passed, the robot will try to get to a safe state prior
    /// to disabling motor power. The robot response is equivalent to an ESTOP_LEVEL_SETTLE_THEN_CUT
    /// which may involve the robot sitting down in order to prepare for disabling motor power.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration Timeout {
      get { return timeout_; }
      set {
        timeout_ = value;
      }
    }

    /// <summary>Field number for the "cut_power_timeout" field.</summary>
    public const int CutPowerTimeoutFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration cutPowerTimeout_;
    /// <summary>
    /// Optional maximum delay between challenge and response for this endpoint prior to disabling
    /// motor power. After cut_power_timeout seconds has passed, motor power will be disconnected
    /// immediately regardless of current robot state. If this value is not set robot will default
    /// to timeout plus a nominal expected duration to reach a safe state. In practice this
    /// is typically 3-4 seconds. The response is equivalent to an ESTOP_LEVEL_CUT.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration CutPowerTimeout {
      get { return cutPowerTimeout_; }
      set {
        cutPowerTimeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstopEndpoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstopEndpoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Role != other.Role) return false;
      if (Name != other.Name) return false;
      if (UniqueId != other.UniqueId) return false;
      if (!object.Equals(Timeout, other.Timeout)) return false;
      if (!object.Equals(CutPowerTimeout, other.CutPowerTimeout)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Role.Length != 0) hash ^= Role.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
      if (timeout_ != null) hash ^= Timeout.GetHashCode();
      if (cutPowerTimeout_ != null) hash ^= CutPowerTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Role.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Role);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UniqueId);
      }
      if (timeout_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Timeout);
      }
      if (cutPowerTimeout_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(CutPowerTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Role.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Role);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (UniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
      }
      if (timeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timeout);
      }
      if (cutPowerTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CutPowerTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstopEndpoint other) {
      if (other == null) {
        return;
      }
      if (other.Role.Length != 0) {
        Role = other.Role;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.UniqueId.Length != 0) {
        UniqueId = other.UniqueId;
      }
      if (other.timeout_ != null) {
        if (timeout_ == null) {
          Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        Timeout.MergeFrom(other.Timeout);
      }
      if (other.cutPowerTimeout_ != null) {
        if (cutPowerTimeout_ == null) {
          CutPowerTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        CutPowerTimeout.MergeFrom(other.CutPowerTimeout);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Role = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            UniqueId = input.ReadString();
            break;
          }
          case 34: {
            if (timeout_ == null) {
              Timeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(Timeout);
            break;
          }
          case 42: {
            if (cutPowerTimeout_ == null) {
              CutPowerTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(CutPowerTimeout);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration of a root / server.
  /// </summary>
  public sealed partial class EstopConfig : pb::IMessage<EstopConfig> {
    private static readonly pb::MessageParser<EstopConfig> _parser = new pb::MessageParser<EstopConfig>(() => new EstopConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstopConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopConfig(EstopConfig other) : this() {
      endpoints_ = other.endpoints_.Clone();
      uniqueId_ = other.uniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopConfig Clone() {
      return new EstopConfig(this);
    }

    /// <summary>Field number for the "endpoints" field.</summary>
    public const int EndpointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.EstopEndpoint> _repeated_endpoints_codec
        = pb::FieldCodec.ForMessage(10, global::Bosdyn.Api.EstopEndpoint.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.EstopEndpoint> endpoints_ = new pbc::RepeatedField<global::Bosdyn.Api.EstopEndpoint>();
    /// <summary>
    /// EstopEndpoints that are part of this configuration.
    /// Unique IDs do not have to be filled out, but can be.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.EstopEndpoint> Endpoints {
      get { return endpoints_; }
    }

    /// <summary>Field number for the "unique_id" field.</summary>
    public const int UniqueIdFieldNumber = 2;
    private string uniqueId_ = "";
    /// <summary>
    /// Unique ID for this configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstopConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstopConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endpoints_.Equals(other.endpoints_)) return false;
      if (UniqueId != other.UniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endpoints_.GetHashCode();
      if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      endpoints_.WriteTo(output, _repeated_endpoints_codec);
      if (UniqueId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endpoints_.CalculateSize(_repeated_endpoints_codec);
      if (UniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstopConfig other) {
      if (other == null) {
        return;
      }
      endpoints_.Add(other.endpoints_);
      if (other.UniqueId.Length != 0) {
        UniqueId = other.UniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            endpoints_.AddEntriesFrom(input, _repeated_endpoints_codec);
            break;
          }
          case 18: {
            UniqueId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// EstopEndpoint with some extra status data.
  /// </summary>
  public sealed partial class EstopEndpointWithStatus : pb::IMessage<EstopEndpointWithStatus> {
    private static readonly pb::MessageParser<EstopEndpointWithStatus> _parser = new pb::MessageParser<EstopEndpointWithStatus>(() => new EstopEndpointWithStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstopEndpointWithStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopEndpointWithStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopEndpointWithStatus(EstopEndpointWithStatus other) : this() {
      endpoint_ = other.endpoint_ != null ? other.endpoint_.Clone() : null;
      stopLevel_ = other.stopLevel_;
      timeSinceValidResponse_ = other.timeSinceValidResponse_ != null ? other.timeSinceValidResponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopEndpointWithStatus Clone() {
      return new EstopEndpointWithStatus(this);
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 1;
    private global::Bosdyn.Api.EstopEndpoint endpoint_;
    /// <summary>
    /// The endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopEndpoint Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = value;
      }
    }

    /// <summary>Field number for the "stop_level" field.</summary>
    public const int StopLevelFieldNumber = 2;
    private global::Bosdyn.Api.EstopStopLevel stopLevel_ = 0;
    /// <summary>
    /// Stop level most recently requested by the endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopStopLevel StopLevel {
      get { return stopLevel_; }
      set {
        stopLevel_ = value;
      }
    }

    /// <summary>Field number for the "time_since_valid_response" field.</summary>
    public const int TimeSinceValidResponseFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration timeSinceValidResponse_;
    /// <summary>
    /// Time since a valid response was provided by the endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration TimeSinceValidResponse {
      get { return timeSinceValidResponse_; }
      set {
        timeSinceValidResponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstopEndpointWithStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstopEndpointWithStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Endpoint, other.Endpoint)) return false;
      if (StopLevel != other.StopLevel) return false;
      if (!object.Equals(TimeSinceValidResponse, other.TimeSinceValidResponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (endpoint_ != null) hash ^= Endpoint.GetHashCode();
      if (StopLevel != 0) hash ^= StopLevel.GetHashCode();
      if (timeSinceValidResponse_ != null) hash ^= TimeSinceValidResponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (endpoint_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Endpoint);
      }
      if (StopLevel != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) StopLevel);
      }
      if (timeSinceValidResponse_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TimeSinceValidResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (endpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Endpoint);
      }
      if (StopLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StopLevel);
      }
      if (timeSinceValidResponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSinceValidResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstopEndpointWithStatus other) {
      if (other == null) {
        return;
      }
      if (other.endpoint_ != null) {
        if (endpoint_ == null) {
          Endpoint = new global::Bosdyn.Api.EstopEndpoint();
        }
        Endpoint.MergeFrom(other.Endpoint);
      }
      if (other.StopLevel != 0) {
        StopLevel = other.StopLevel;
      }
      if (other.timeSinceValidResponse_ != null) {
        if (timeSinceValidResponse_ == null) {
          TimeSinceValidResponse = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        TimeSinceValidResponse.MergeFrom(other.TimeSinceValidResponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (endpoint_ == null) {
              Endpoint = new global::Bosdyn.Api.EstopEndpoint();
            }
            input.ReadMessage(Endpoint);
            break;
          }
          case 16: {
            StopLevel = (global::Bosdyn.Api.EstopStopLevel) input.ReadEnum();
            break;
          }
          case 26: {
            if (timeSinceValidResponse_ == null) {
              TimeSinceValidResponse = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(TimeSinceValidResponse);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Status of Estop system.
  /// </summary>
  public sealed partial class EstopSystemStatus : pb::IMessage<EstopSystemStatus> {
    private static readonly pb::MessageParser<EstopSystemStatus> _parser = new pb::MessageParser<EstopSystemStatus>(() => new EstopSystemStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstopSystemStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopSystemStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopSystemStatus(EstopSystemStatus other) : this() {
      endpoints_ = other.endpoints_.Clone();
      stopLevel_ = other.stopLevel_;
      stopLevelDetails_ = other.stopLevelDetails_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopSystemStatus Clone() {
      return new EstopSystemStatus(this);
    }

    /// <summary>Field number for the "endpoints" field.</summary>
    public const int EndpointsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Bosdyn.Api.EstopEndpointWithStatus> _repeated_endpoints_codec
        = pb::FieldCodec.ForMessage(26, global::Bosdyn.Api.EstopEndpointWithStatus.Parser);
    private readonly pbc::RepeatedField<global::Bosdyn.Api.EstopEndpointWithStatus> endpoints_ = new pbc::RepeatedField<global::Bosdyn.Api.EstopEndpointWithStatus>();
    /// <summary>
    /// Status for all available endpoints.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Bosdyn.Api.EstopEndpointWithStatus> Endpoints {
      get { return endpoints_; }
    }

    /// <summary>Field number for the "stop_level" field.</summary>
    public const int StopLevelFieldNumber = 4;
    private global::Bosdyn.Api.EstopStopLevel stopLevel_ = 0;
    /// <summary>
    /// Current stop level for the system.
    /// Will be the most-restrictive stop level specified by an endpoint, or a stop level
    /// asserted by the system as a whole (e.g. if an endpoint timed out).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopStopLevel StopLevel {
      get { return stopLevel_; }
      set {
        stopLevel_ = value;
      }
    }

    /// <summary>Field number for the "stop_level_details" field.</summary>
    public const int StopLevelDetailsFieldNumber = 5;
    private string stopLevelDetails_ = "";
    /// <summary>
    /// Human-readable information on the stop level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StopLevelDetails {
      get { return stopLevelDetails_; }
      set {
        stopLevelDetails_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstopSystemStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstopSystemStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!endpoints_.Equals(other.endpoints_)) return false;
      if (StopLevel != other.StopLevel) return false;
      if (StopLevelDetails != other.StopLevelDetails) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= endpoints_.GetHashCode();
      if (StopLevel != 0) hash ^= StopLevel.GetHashCode();
      if (StopLevelDetails.Length != 0) hash ^= StopLevelDetails.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      endpoints_.WriteTo(output, _repeated_endpoints_codec);
      if (StopLevel != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) StopLevel);
      }
      if (StopLevelDetails.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StopLevelDetails);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += endpoints_.CalculateSize(_repeated_endpoints_codec);
      if (StopLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StopLevel);
      }
      if (StopLevelDetails.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StopLevelDetails);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstopSystemStatus other) {
      if (other == null) {
        return;
      }
      endpoints_.Add(other.endpoints_);
      if (other.StopLevel != 0) {
        StopLevel = other.StopLevel;
      }
      if (other.StopLevelDetails.Length != 0) {
        StopLevelDetails = other.StopLevelDetails;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            endpoints_.AddEntriesFrom(input, _repeated_endpoints_codec);
            break;
          }
          case 32: {
            StopLevel = (global::Bosdyn.Api.EstopStopLevel) input.ReadEnum();
            break;
          }
          case 42: {
            StopLevelDetails = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Client request for setting/maintaining an E-Stop system level.
  /// After the first CheckIn, must include response to previous challenge.
  /// </summary>
  public sealed partial class EstopCheckInRequest : pb::IMessage<EstopCheckInRequest> {
    private static readonly pb::MessageParser<EstopCheckInRequest> _parser = new pb::MessageParser<EstopCheckInRequest>(() => new EstopCheckInRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstopCheckInRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopCheckInRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopCheckInRequest(EstopCheckInRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      endpoint_ = other.endpoint_ != null ? other.endpoint_.Clone() : null;
      challenge_ = other.challenge_;
      response_ = other.response_;
      stopLevel_ = other.stopLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopCheckInRequest Clone() {
      return new EstopCheckInRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "endpoint" field.</summary>
    public const int EndpointFieldNumber = 2;
    private global::Bosdyn.Api.EstopEndpoint endpoint_;
    /// <summary>
    /// The endpoint making the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopEndpoint Endpoint {
      get { return endpoint_; }
      set {
        endpoint_ = value;
      }
    }

    /// <summary>Field number for the "challenge" field.</summary>
    public const int ChallengeFieldNumber = 3;
    private ulong challenge_;
    /// <summary>
    /// Challenge being responded to.
    /// Don't set if this is the first EstopCheckInRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Challenge {
      get { return challenge_; }
      set {
        challenge_ = value;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 4;
    private ulong response_;
    /// <summary>
    /// Response to above challenge.
    /// Don't set if this is the first EstopCheckInRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Response {
      get { return response_; }
      set {
        response_ = value;
      }
    }

    /// <summary>Field number for the "stop_level" field.</summary>
    public const int StopLevelFieldNumber = 5;
    private global::Bosdyn.Api.EstopStopLevel stopLevel_ = 0;
    /// <summary>
    /// Assert this stop level.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopStopLevel StopLevel {
      get { return stopLevel_; }
      set {
        stopLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstopCheckInRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstopCheckInRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Endpoint, other.Endpoint)) return false;
      if (Challenge != other.Challenge) return false;
      if (Response != other.Response) return false;
      if (StopLevel != other.StopLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (endpoint_ != null) hash ^= Endpoint.GetHashCode();
      if (Challenge != 0UL) hash ^= Challenge.GetHashCode();
      if (Response != 0UL) hash ^= Response.GetHashCode();
      if (StopLevel != 0) hash ^= StopLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (endpoint_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Endpoint);
      }
      if (Challenge != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Challenge);
      }
      if (Response != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Response);
      }
      if (StopLevel != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) StopLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (endpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Endpoint);
      }
      if (Challenge != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Challenge);
      }
      if (Response != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Response);
      }
      if (StopLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StopLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstopCheckInRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.endpoint_ != null) {
        if (endpoint_ == null) {
          Endpoint = new global::Bosdyn.Api.EstopEndpoint();
        }
        Endpoint.MergeFrom(other.Endpoint);
      }
      if (other.Challenge != 0UL) {
        Challenge = other.Challenge;
      }
      if (other.Response != 0UL) {
        Response = other.Response;
      }
      if (other.StopLevel != 0) {
        StopLevel = other.StopLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (endpoint_ == null) {
              Endpoint = new global::Bosdyn.Api.EstopEndpoint();
            }
            input.ReadMessage(Endpoint);
            break;
          }
          case 24: {
            Challenge = input.ReadUInt64();
            break;
          }
          case 32: {
            Response = input.ReadUInt64();
            break;
          }
          case 40: {
            StopLevel = (global::Bosdyn.Api.EstopStopLevel) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Server response to EstopCheckInRequest.
  /// </summary>
  public sealed partial class EstopCheckInResponse : pb::IMessage<EstopCheckInResponse> {
    private static readonly pb::MessageParser<EstopCheckInResponse> _parser = new pb::MessageParser<EstopCheckInResponse>(() => new EstopCheckInResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EstopCheckInResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopCheckInResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopCheckInResponse(EstopCheckInResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      challenge_ = other.challenge_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EstopCheckInResponse Clone() {
      return new EstopCheckInResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::Bosdyn.Api.EstopCheckInRequest request_;
    /// <summary>
    /// Copy of initial request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopCheckInRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "challenge" field.</summary>
    public const int ChallengeFieldNumber = 3;
    private ulong challenge_;
    /// <summary>
    /// Next challenge to answer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Challenge {
      get { return challenge_; }
      set {
        challenge_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Bosdyn.Api.EstopCheckInResponse.Types.Status status_ = 0;
    /// <summary>
    /// Status code for the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopCheckInResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EstopCheckInResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EstopCheckInResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (Challenge != other.Challenge) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (Challenge != 0UL) hash ^= Challenge.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (Challenge != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Challenge);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (Challenge != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Challenge);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EstopCheckInResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Bosdyn.Api.EstopCheckInRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.Challenge != 0UL) {
        Challenge = other.Challenge;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::Bosdyn.Api.EstopCheckInRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 24: {
            Challenge = input.ReadUInt64();
            break;
          }
          case 32: {
            Status = (global::Bosdyn.Api.EstopCheckInResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the EstopCheckInResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// Unknown error occurred.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Valid challenge has been returned.
        /// </summary>
        [pbr::OriginalName("STATUS_OK")] Ok = 1,
        /// <summary>
        /// The endpoint specified in the request is not registered.
        /// </summary>
        [pbr::OriginalName("STATUS_ENDPOINT_UNKNOWN")] EndpointUnknown = 2,
        /// <summary>
        /// The challenge and/or response was incorrect.
        /// </summary>
        [pbr::OriginalName("STATUS_INCORRECT_CHALLENGE_RESPONSE")] IncorrectChallengeResponse = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// Register an endpoint.
  /// EstopEndpoints must be registered before they can send commands or request challenges.
  /// </summary>
  public sealed partial class RegisterEstopEndpointRequest : pb::IMessage<RegisterEstopEndpointRequest> {
    private static readonly pb::MessageParser<RegisterEstopEndpointRequest> _parser = new pb::MessageParser<RegisterEstopEndpointRequest>(() => new RegisterEstopEndpointRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterEstopEndpointRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterEstopEndpointRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterEstopEndpointRequest(RegisterEstopEndpointRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      targetEndpoint_ = other.targetEndpoint_ != null ? other.targetEndpoint_.Clone() : null;
      targetConfigId_ = other.targetConfigId_;
      newEndpoint_ = other.newEndpoint_ != null ? other.newEndpoint_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterEstopEndpointRequest Clone() {
      return new RegisterEstopEndpointRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "target_endpoint" field.</summary>
    public const int TargetEndpointFieldNumber = 2;
    private global::Bosdyn.Api.EstopEndpoint targetEndpoint_;
    /// <summary>
    /// The endpoint to replace.
    /// Set the endpoint's unique ID if replacing an active endpoint.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopEndpoint TargetEndpoint {
      get { return targetEndpoint_; }
      set {
        targetEndpoint_ = value;
      }
    }

    /// <summary>Field number for the "target_config_id" field.</summary>
    public const int TargetConfigIdFieldNumber = 3;
    private string targetConfigId_ = "";
    /// <summary>
    /// ID of the configuration we are registering against.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetConfigId {
      get { return targetConfigId_; }
      set {
        targetConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_endpoint" field.</summary>
    public const int NewEndpointFieldNumber = 4;
    private global::Bosdyn.Api.EstopEndpoint newEndpoint_;
    /// <summary>
    /// The description of the new endpoint.
    /// Do not set the unique ID. It will be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopEndpoint NewEndpoint {
      get { return newEndpoint_; }
      set {
        newEndpoint_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterEstopEndpointRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterEstopEndpointRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(TargetEndpoint, other.TargetEndpoint)) return false;
      if (TargetConfigId != other.TargetConfigId) return false;
      if (!object.Equals(NewEndpoint, other.NewEndpoint)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (targetEndpoint_ != null) hash ^= TargetEndpoint.GetHashCode();
      if (TargetConfigId.Length != 0) hash ^= TargetConfigId.GetHashCode();
      if (newEndpoint_ != null) hash ^= NewEndpoint.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (targetEndpoint_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetEndpoint);
      }
      if (TargetConfigId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetConfigId);
      }
      if (newEndpoint_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NewEndpoint);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (targetEndpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetEndpoint);
      }
      if (TargetConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetConfigId);
      }
      if (newEndpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewEndpoint);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterEstopEndpointRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.targetEndpoint_ != null) {
        if (targetEndpoint_ == null) {
          TargetEndpoint = new global::Bosdyn.Api.EstopEndpoint();
        }
        TargetEndpoint.MergeFrom(other.TargetEndpoint);
      }
      if (other.TargetConfigId.Length != 0) {
        TargetConfigId = other.TargetConfigId;
      }
      if (other.newEndpoint_ != null) {
        if (newEndpoint_ == null) {
          NewEndpoint = new global::Bosdyn.Api.EstopEndpoint();
        }
        NewEndpoint.MergeFrom(other.NewEndpoint);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (targetEndpoint_ == null) {
              TargetEndpoint = new global::Bosdyn.Api.EstopEndpoint();
            }
            input.ReadMessage(TargetEndpoint);
            break;
          }
          case 26: {
            TargetConfigId = input.ReadString();
            break;
          }
          case 34: {
            if (newEndpoint_ == null) {
              NewEndpoint = new global::Bosdyn.Api.EstopEndpoint();
            }
            input.ReadMessage(NewEndpoint);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response to registration request.
  /// </summary>
  public sealed partial class RegisterEstopEndpointResponse : pb::IMessage<RegisterEstopEndpointResponse> {
    private static readonly pb::MessageParser<RegisterEstopEndpointResponse> _parser = new pb::MessageParser<RegisterEstopEndpointResponse>(() => new RegisterEstopEndpointResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterEstopEndpointResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterEstopEndpointResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterEstopEndpointResponse(RegisterEstopEndpointResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      newEndpoint_ = other.newEndpoint_ != null ? other.newEndpoint_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterEstopEndpointResponse Clone() {
      return new RegisterEstopEndpointResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::Bosdyn.Api.RegisterEstopEndpointRequest request_;
    /// <summary>
    /// Copy of the initial request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RegisterEstopEndpointRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "new_endpoint" field.</summary>
    public const int NewEndpointFieldNumber = 3;
    private global::Bosdyn.Api.EstopEndpoint newEndpoint_;
    /// <summary>
    /// The resulting endpoint on success.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopEndpoint NewEndpoint {
      get { return newEndpoint_; }
      set {
        newEndpoint_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Bosdyn.Api.RegisterEstopEndpointResponse.Types.Status status_ = 0;
    /// <summary>
    /// Status code for the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RegisterEstopEndpointResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterEstopEndpointResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterEstopEndpointResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(NewEndpoint, other.NewEndpoint)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (newEndpoint_ != null) hash ^= NewEndpoint.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (newEndpoint_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NewEndpoint);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (newEndpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NewEndpoint);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterEstopEndpointResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Bosdyn.Api.RegisterEstopEndpointRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.newEndpoint_ != null) {
        if (newEndpoint_ == null) {
          NewEndpoint = new global::Bosdyn.Api.EstopEndpoint();
        }
        NewEndpoint.MergeFrom(other.NewEndpoint);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::Bosdyn.Api.RegisterEstopEndpointRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 26: {
            if (newEndpoint_ == null) {
              NewEndpoint = new global::Bosdyn.Api.EstopEndpoint();
            }
            input.ReadMessage(NewEndpoint);
            break;
          }
          case 32: {
            Status = (global::Bosdyn.Api.RegisterEstopEndpointResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterEstopEndpointResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// An unknown / unexpected error occurred.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Request succeeded.
        /// </summary>
        [pbr::OriginalName("STATUS_SUCCESS")] Success = 1,
        /// <summary>
        /// Target endpoint did not match.
        /// </summary>
        [pbr::OriginalName("STATUS_ENDPOINT_MISMATCH")] EndpointMismatch = 2,
        /// <summary>
        /// Registered to wrong configuration.
        /// </summary>
        [pbr::OriginalName("STATUS_CONFIG_MISMATCH")] ConfigMismatch = 3,
        /// <summary>
        /// New endpoint was invalid.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_ENDPOINT")] InvalidEndpoint = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Deregister the specified E-Stop endpoint registration.
  /// </summary>
  public sealed partial class DeregisterEstopEndpointRequest : pb::IMessage<DeregisterEstopEndpointRequest> {
    private static readonly pb::MessageParser<DeregisterEstopEndpointRequest> _parser = new pb::MessageParser<DeregisterEstopEndpointRequest>(() => new DeregisterEstopEndpointRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeregisterEstopEndpointRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterEstopEndpointRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterEstopEndpointRequest(DeregisterEstopEndpointRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      targetEndpoint_ = other.targetEndpoint_ != null ? other.targetEndpoint_.Clone() : null;
      targetConfigId_ = other.targetConfigId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterEstopEndpointRequest Clone() {
      return new DeregisterEstopEndpointRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "target_endpoint" field.</summary>
    public const int TargetEndpointFieldNumber = 2;
    private global::Bosdyn.Api.EstopEndpoint targetEndpoint_;
    /// <summary>
    /// The endpoint to deregister.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopEndpoint TargetEndpoint {
      get { return targetEndpoint_; }
      set {
        targetEndpoint_ = value;
      }
    }

    /// <summary>Field number for the "target_config_id" field.</summary>
    public const int TargetConfigIdFieldNumber = 3;
    private string targetConfigId_ = "";
    /// <summary>
    /// ID of the configuration we are registering against.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetConfigId {
      get { return targetConfigId_; }
      set {
        targetConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeregisterEstopEndpointRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeregisterEstopEndpointRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(TargetEndpoint, other.TargetEndpoint)) return false;
      if (TargetConfigId != other.TargetConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (targetEndpoint_ != null) hash ^= TargetEndpoint.GetHashCode();
      if (TargetConfigId.Length != 0) hash ^= TargetConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (targetEndpoint_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TargetEndpoint);
      }
      if (TargetConfigId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (targetEndpoint_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TargetEndpoint);
      }
      if (TargetConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeregisterEstopEndpointRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.targetEndpoint_ != null) {
        if (targetEndpoint_ == null) {
          TargetEndpoint = new global::Bosdyn.Api.EstopEndpoint();
        }
        TargetEndpoint.MergeFrom(other.TargetEndpoint);
      }
      if (other.TargetConfigId.Length != 0) {
        TargetConfigId = other.TargetConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (targetEndpoint_ == null) {
              TargetEndpoint = new global::Bosdyn.Api.EstopEndpoint();
            }
            input.ReadMessage(TargetEndpoint);
            break;
          }
          case 26: {
            TargetConfigId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response to E-Stop endpoint  deregistration request.
  /// </summary>
  public sealed partial class DeregisterEstopEndpointResponse : pb::IMessage<DeregisterEstopEndpointResponse> {
    private static readonly pb::MessageParser<DeregisterEstopEndpointResponse> _parser = new pb::MessageParser<DeregisterEstopEndpointResponse>(() => new DeregisterEstopEndpointResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeregisterEstopEndpointResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterEstopEndpointResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterEstopEndpointResponse(DeregisterEstopEndpointResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeregisterEstopEndpointResponse Clone() {
      return new DeregisterEstopEndpointResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common resonse header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::Bosdyn.Api.DeregisterEstopEndpointRequest request_;
    /// <summary>
    /// Copy of the initial request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.DeregisterEstopEndpointRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Bosdyn.Api.DeregisterEstopEndpointResponse.Types.Status status_ = 0;
    /// <summary>
    /// Status code for the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.DeregisterEstopEndpointResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeregisterEstopEndpointResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeregisterEstopEndpointResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeregisterEstopEndpointResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Bosdyn.Api.DeregisterEstopEndpointRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::Bosdyn.Api.DeregisterEstopEndpointRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 32: {
            Status = (global::Bosdyn.Api.DeregisterEstopEndpointResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DeregisterEstopEndpointResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// An unknown / unexpected error occurred.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Request succeeded.
        /// </summary>
        [pbr::OriginalName("STATUS_SUCCESS")] Success = 1,
        /// <summary>
        /// Target endpoint did not match.
        /// </summary>
        [pbr::OriginalName("STATUS_ENDPOINT_MISMATCH")] EndpointMismatch = 2,
        /// <summary>
        /// Registered to wrong configuration.
        /// </summary>
        [pbr::OriginalName("STATUS_CONFIG_MISMATCH")] ConfigMismatch = 3,
        /// <summary>
        /// You cannot deregister an endpoint while the motors are on.
        /// </summary>
        [pbr::OriginalName("STATUS_MOTORS_ON")] MotorsOn = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Get the active EstopConfig.
  /// </summary>
  public sealed partial class GetEstopConfigRequest : pb::IMessage<GetEstopConfigRequest> {
    private static readonly pb::MessageParser<GetEstopConfigRequest> _parser = new pb::MessageParser<GetEstopConfigRequest>(() => new GetEstopConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEstopConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopConfigRequest(GetEstopConfigRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      targetConfigId_ = other.targetConfigId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopConfigRequest Clone() {
      return new GetEstopConfigRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "target_config_id" field.</summary>
    public const int TargetConfigIdFieldNumber = 4;
    private string targetConfigId_ = "";
    /// <summary>
    /// The 'unique_id' of EstopConfig to get.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetConfigId {
      get { return targetConfigId_; }
      set {
        targetConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEstopConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEstopConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (TargetConfigId != other.TargetConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (TargetConfigId.Length != 0) hash ^= TargetConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (TargetConfigId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TargetConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (TargetConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEstopConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.TargetConfigId.Length != 0) {
        TargetConfigId = other.TargetConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 34: {
            TargetConfigId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response to EstopConfigRequest.
  /// </summary>
  public sealed partial class GetEstopConfigResponse : pb::IMessage<GetEstopConfigResponse> {
    private static readonly pb::MessageParser<GetEstopConfigResponse> _parser = new pb::MessageParser<GetEstopConfigResponse>(() => new GetEstopConfigResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEstopConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopConfigResponse(GetEstopConfigResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      activeConfig_ = other.activeConfig_ != null ? other.activeConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopConfigResponse Clone() {
      return new GetEstopConfigResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::Bosdyn.Api.GetEstopConfigRequest request_;
    /// <summary>
    /// Copy of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.GetEstopConfigRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "active_config" field.</summary>
    public const int ActiveConfigFieldNumber = 3;
    private global::Bosdyn.Api.EstopConfig activeConfig_;
    /// <summary>
    /// The currently active configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopConfig ActiveConfig {
      get { return activeConfig_; }
      set {
        activeConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEstopConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEstopConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(ActiveConfig, other.ActiveConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (activeConfig_ != null) hash ^= ActiveConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (activeConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActiveConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (activeConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEstopConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Bosdyn.Api.GetEstopConfigRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.activeConfig_ != null) {
        if (activeConfig_ == null) {
          ActiveConfig = new global::Bosdyn.Api.EstopConfig();
        }
        ActiveConfig.MergeFrom(other.ActiveConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::Bosdyn.Api.GetEstopConfigRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 26: {
            if (activeConfig_ == null) {
              ActiveConfig = new global::Bosdyn.Api.EstopConfig();
            }
            input.ReadMessage(ActiveConfig);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Set a new active EstopConfig.
  /// </summary>
  public sealed partial class SetEstopConfigRequest : pb::IMessage<SetEstopConfigRequest> {
    private static readonly pb::MessageParser<SetEstopConfigRequest> _parser = new pb::MessageParser<SetEstopConfigRequest>(() => new SetEstopConfigRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetEstopConfigRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEstopConfigRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEstopConfigRequest(SetEstopConfigRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      targetConfigId_ = other.targetConfigId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEstopConfigRequest Clone() {
      return new SetEstopConfigRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 3;
    private global::Bosdyn.Api.EstopConfig config_;
    /// <summary>
    /// New configuration to set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "target_config_id" field.</summary>
    public const int TargetConfigIdFieldNumber = 4;
    private string targetConfigId_ = "";
    /// <summary>
    /// The 'unique_id' of EstopConfig to replace, if replacing one.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetConfigId {
      get { return targetConfigId_; }
      set {
        targetConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetEstopConfigRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetEstopConfigRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (TargetConfigId != other.TargetConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (TargetConfigId.Length != 0) hash ^= TargetConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (config_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Config);
      }
      if (TargetConfigId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TargetConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (TargetConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetEstopConfigRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Bosdyn.Api.EstopConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.TargetConfigId.Length != 0) {
        TargetConfigId = other.TargetConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 26: {
            if (config_ == null) {
              Config = new global::Bosdyn.Api.EstopConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 34: {
            TargetConfigId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response to EstopConfigRequest.
  /// </summary>
  public sealed partial class SetEstopConfigResponse : pb::IMessage<SetEstopConfigResponse> {
    private static readonly pb::MessageParser<SetEstopConfigResponse> _parser = new pb::MessageParser<SetEstopConfigResponse>(() => new SetEstopConfigResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetEstopConfigResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEstopConfigResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEstopConfigResponse(SetEstopConfigResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      request_ = other.request_ != null ? other.request_.Clone() : null;
      activeConfig_ = other.activeConfig_ != null ? other.activeConfig_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetEstopConfigResponse Clone() {
      return new SetEstopConfigResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    private global::Bosdyn.Api.SetEstopConfigRequest request_;
    /// <summary>
    /// Copy of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.SetEstopConfigRequest Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    /// <summary>Field number for the "active_config" field.</summary>
    public const int ActiveConfigFieldNumber = 3;
    private global::Bosdyn.Api.EstopConfig activeConfig_;
    /// <summary>
    /// The currently active configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopConfig ActiveConfig {
      get { return activeConfig_; }
      set {
        activeConfig_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Bosdyn.Api.SetEstopConfigResponse.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.SetEstopConfigResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetEstopConfigResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetEstopConfigResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(ActiveConfig, other.ActiveConfig)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (request_ != null) hash ^= Request.GetHashCode();
      if (activeConfig_ != null) hash ^= ActiveConfig.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (request_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (activeConfig_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ActiveConfig);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (request_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (activeConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActiveConfig);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetEstopConfigResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.request_ != null) {
        if (request_ == null) {
          Request = new global::Bosdyn.Api.SetEstopConfigRequest();
        }
        Request.MergeFrom(other.Request);
      }
      if (other.activeConfig_ != null) {
        if (activeConfig_ == null) {
          ActiveConfig = new global::Bosdyn.Api.EstopConfig();
        }
        ActiveConfig.MergeFrom(other.ActiveConfig);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (request_ == null) {
              Request = new global::Bosdyn.Api.SetEstopConfigRequest();
            }
            input.ReadMessage(Request);
            break;
          }
          case 26: {
            if (activeConfig_ == null) {
              ActiveConfig = new global::Bosdyn.Api.EstopConfig();
            }
            input.ReadMessage(ActiveConfig);
            break;
          }
          case 32: {
            Status = (global::Bosdyn.Api.SetEstopConfigResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SetEstopConfigResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// An unknown / unexpected error occurred.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Request succeeded.
        /// </summary>
        [pbr::OriginalName("STATUS_SUCCESS")] Success = 1,
        /// <summary>
        /// Tried to replace a EstopConfig, but provided bad ID.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_ID")] InvalidId = 2,
        /// <summary>
        /// You cannot set a configuration while the motors are on.
        /// </summary>
        [pbr::OriginalName("STATUS_MOTORS_ON")] MotorsOn = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Ask for the current status of the Estop system.
  /// </summary>
  public sealed partial class GetEstopSystemStatusRequest : pb::IMessage<GetEstopSystemStatusRequest> {
    private static readonly pb::MessageParser<GetEstopSystemStatusRequest> _parser = new pb::MessageParser<GetEstopSystemStatusRequest>(() => new GetEstopSystemStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEstopSystemStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopSystemStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopSystemStatusRequest(GetEstopSystemStatusRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopSystemStatusRequest Clone() {
      return new GetEstopSystemStatusRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEstopSystemStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEstopSystemStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEstopSystemStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Respond with the current Estop system status.
  /// </summary>
  public sealed partial class GetEstopSystemStatusResponse : pb::IMessage<GetEstopSystemStatusResponse> {
    private static readonly pb::MessageParser<GetEstopSystemStatusResponse> _parser = new pb::MessageParser<GetEstopSystemStatusResponse>(() => new GetEstopSystemStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetEstopSystemStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.EstopReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopSystemStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopSystemStatusResponse(GetEstopSystemStatusResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetEstopSystemStatusResponse Clone() {
      return new GetEstopSystemStatusResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private global::Bosdyn.Api.EstopSystemStatus status_;
    /// <summary>
    /// Status of the Estop system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.EstopSystemStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetEstopSystemStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetEstopSystemStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (status_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetEstopSystemStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Bosdyn.Api.EstopSystemStatus();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 26: {
            if (status_ == null) {
              Status = new global::Bosdyn.Api.EstopSystemStatus();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
