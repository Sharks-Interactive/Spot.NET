// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/payload_registration.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bosdyn.Api {

  /// <summary>Holder for reflection information generated from Protos/payload_registration.proto</summary>
  public static partial class PayloadRegistrationReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/payload_registration.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PayloadRegistrationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFQcm90b3MvcGF5bG9hZF9yZWdpc3RyYXRpb24ucHJvdG8SCmJvc2R5bi5h",
            "cGkaFFByb3Rvcy9wYXlsb2FkLnByb3RvGhNQcm90b3MvaGVhZGVyLnByb3Rv",
            "GhVQcm90b3Mvcm9ib3RfaWQucHJvdG8igQEKFlJlZ2lzdGVyUGF5bG9hZFJl",
            "cXVlc3QSKQoGaGVhZGVyGAEgASgLMhkuYm9zZHluLmFwaS5SZXF1ZXN0SGVh",
            "ZGVyEiQKB3BheWxvYWQYAiABKAsyEy5ib3NkeW4uYXBpLlBheWxvYWQSFgoO",
            "cGF5bG9hZF9zZWNyZXQYAyABKAkiyQEKF1JlZ2lzdGVyUGF5bG9hZFJlc3Bv",
            "bnNlEioKBmhlYWRlchgBIAEoCzIaLmJvc2R5bi5hcGkuUmVzcG9uc2VIZWFk",
            "ZXISOgoGc3RhdHVzGAIgASgOMiouYm9zZHluLmFwaS5SZWdpc3RlclBheWxv",
            "YWRSZXNwb25zZS5TdGF0dXMiRgoGU3RhdHVzEhIKDlNUQVRVU19VTktOT1dO",
            "EAASDQoJU1RBVFVTX09LEAESGQoVU1RBVFVTX0FMUkVBRFlfRVhJU1RTEAIi",
            "8QEKG1VwZGF0ZVBheWxvYWRWZXJzaW9uUmVxdWVzdBIpCgZoZWFkZXIYASAB",
            "KAsyGS5ib3NkeW4uYXBpLlJlcXVlc3RIZWFkZXISOwoTcGF5bG9hZF9jcmVk",
            "ZW50aWFscxgFIAEoCzIeLmJvc2R5bi5hcGkuUGF5bG9hZENyZWRlbnRpYWxz",
            "EhgKDHBheWxvYWRfZ3VpZBgCIAEoCUICGAESGgoOcGF5bG9hZF9zZWNyZXQY",
            "AyABKAlCAhgBEjQKD3VwZGF0ZWRfdmVyc2lvbhgEIAEoCzIbLmJvc2R5bi5h",
            "cGkuU29mdHdhcmVWZXJzaW9uIvMBChxVcGRhdGVQYXlsb2FkVmVyc2lvblJl",
            "c3BvbnNlEioKBmhlYWRlchgBIAEoCzIaLmJvc2R5bi5hcGkuUmVzcG9uc2VI",
            "ZWFkZXISPwoGc3RhdHVzGAIgASgOMi8uYm9zZHluLmFwaS5VcGRhdGVQYXls",
            "b2FkVmVyc2lvblJlc3BvbnNlLlN0YXR1cyJmCgZTdGF0dXMSEgoOU1RBVFVT",
            "X1VOS05PV04QABINCglTVEFUVVNfT0sQARIZChVTVEFUVVNfRE9FU19OT1Rf",
            "RVhJU1QQAhIeChpTVEFUVVNfSU5WQUxJRF9DUkVERU5USUFMUxADIroBChpH",
            "ZXRQYXlsb2FkQXV0aFRva2VuUmVxdWVzdBIpCgZoZWFkZXIYASABKAsyGS5i",
            "b3NkeW4uYXBpLlJlcXVlc3RIZWFkZXISOwoTcGF5bG9hZF9jcmVkZW50aWFs",
            "cxgEIAEoCzIeLmJvc2R5bi5hcGkuUGF5bG9hZENyZWRlbnRpYWxzEhgKDHBh",
            "eWxvYWRfZ3VpZBgCIAEoCUICGAESGgoOcGF5bG9hZF9zZWNyZXQYAyABKAlC",
            "AhgBIogCChtHZXRQYXlsb2FkQXV0aFRva2VuUmVzcG9uc2USKgoGaGVhZGVy",
            "GAEgASgLMhouYm9zZHluLmFwaS5SZXNwb25zZUhlYWRlchI+CgZzdGF0dXMY",
            "AiABKA4yLi5ib3NkeW4uYXBpLkdldFBheWxvYWRBdXRoVG9rZW5SZXNwb25z",
            "ZS5TdGF0dXMSDQoFdG9rZW4YAyABKAkibgoGU3RhdHVzEhIKDlNUQVRVU19V",
            "TktOT1dOEAASDQoJU1RBVFVTX09LEAESHgoaU1RBVFVTX0lOVkFMSURfQ1JF",
            "REVOVElBTFMQAhIhCh1TVEFUVVNfUEFZTE9BRF9OT1RfQVVUSE9SSVpFRBAD",
            "IpECChxVcGRhdGVQYXlsb2FkQXR0YWNoZWRSZXF1ZXN0EikKBmhlYWRlchgB",
            "IAEoCzIZLmJvc2R5bi5hcGkuUmVxdWVzdEhlYWRlchI7ChNwYXlsb2FkX2Ny",
            "ZWRlbnRpYWxzGAIgASgLMh4uYm9zZHluLmFwaS5QYXlsb2FkQ3JlZGVudGlh",
            "bHMSQQoHcmVxdWVzdBgDIAEoDjIwLmJvc2R5bi5hcGkuVXBkYXRlUGF5bG9h",
            "ZEF0dGFjaGVkUmVxdWVzdC5SZXF1ZXN0IkYKB1JlcXVlc3QSEwoPUkVRVUVT",
            "VF9VTktOT1dOEAASEgoOUkVRVUVTVF9BVFRBQ0gQARISCg5SRVFVRVNUX0RF",
            "VEFDSBACIpkCCh1VcGRhdGVQYXlsb2FkQXR0YWNoZWRSZXNwb25zZRIqCgZo",
            "ZWFkZXIYASABKAsyGi5ib3NkeW4uYXBpLlJlc3BvbnNlSGVhZGVyEkAKBnN0",
            "YXR1cxgCIAEoDjIwLmJvc2R5bi5hcGkuVXBkYXRlUGF5bG9hZEF0dGFjaGVk",
            "UmVzcG9uc2UuU3RhdHVzIokBCgZTdGF0dXMSEgoOU1RBVFVTX1VOS05PV04Q",
            "ABINCglTVEFUVVNfT0sQARIZChVTVEFUVVNfRE9FU19OT1RfRVhJU1QQAhIe",
            "ChpTVEFUVVNfSU5WQUxJRF9DUkVERU5USUFMUxADEiEKHVNUQVRVU19QQVlM",
            "T0FEX05PVF9BVVRIT1JJWkVEEAQiMgoSUGF5bG9hZENyZWRlbnRpYWxzEgwK",
            "BGd1aWQYASABKAkSDgoGc2VjcmV0GAIgASgJQhpCGFBheWxvYWRSZWdpc3Ry",
            "YXRpb25Qcm90b2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bosdyn.Api.PayloadReflection.Descriptor, global::Bosdyn.Api.HeaderReflection.Descriptor, global::Bosdyn.Api.RobotIdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.RegisterPayloadRequest), global::Bosdyn.Api.RegisterPayloadRequest.Parser, new[]{ "Header", "Payload", "PayloadSecret" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.RegisterPayloadResponse), global::Bosdyn.Api.RegisterPayloadResponse.Parser, new[]{ "Header", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.RegisterPayloadResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.UpdatePayloadVersionRequest), global::Bosdyn.Api.UpdatePayloadVersionRequest.Parser, new[]{ "Header", "PayloadCredentials", "PayloadGuid", "PayloadSecret", "UpdatedVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.UpdatePayloadVersionResponse), global::Bosdyn.Api.UpdatePayloadVersionResponse.Parser, new[]{ "Header", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.UpdatePayloadVersionResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetPayloadAuthTokenRequest), global::Bosdyn.Api.GetPayloadAuthTokenRequest.Parser, new[]{ "Header", "PayloadCredentials", "PayloadGuid", "PayloadSecret" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetPayloadAuthTokenResponse), global::Bosdyn.Api.GetPayloadAuthTokenResponse.Parser, new[]{ "Header", "Status", "Token" }, null, new[]{ typeof(global::Bosdyn.Api.GetPayloadAuthTokenResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.UpdatePayloadAttachedRequest), global::Bosdyn.Api.UpdatePayloadAttachedRequest.Parser, new[]{ "Header", "PayloadCredentials", "Request" }, null, new[]{ typeof(global::Bosdyn.Api.UpdatePayloadAttachedRequest.Types.Request) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.UpdatePayloadAttachedResponse), global::Bosdyn.Api.UpdatePayloadAttachedResponse.Parser, new[]{ "Header", "Status" }, null, new[]{ typeof(global::Bosdyn.Api.UpdatePayloadAttachedResponse.Types.Status) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.PayloadCredentials), global::Bosdyn.Api.PayloadCredentials.Parser, new[]{ "Guid", "Secret" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The RegisterPayload request message contains the payload information and secret to be
  /// able to register it to the directory.
  /// </summary>
  public sealed partial class RegisterPayloadRequest : pb::IMessage<RegisterPayloadRequest> {
    private static readonly pb::MessageParser<RegisterPayloadRequest> _parser = new pb::MessageParser<RegisterPayloadRequest>(() => new RegisterPayloadRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterPayloadRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterPayloadRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterPayloadRequest(RegisterPayloadRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      payload_ = other.payload_ != null ? other.payload_.Clone() : null;
      payloadSecret_ = other.payloadSecret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterPayloadRequest Clone() {
      return new RegisterPayloadRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 2;
    private global::Bosdyn.Api.Payload payload_;
    /// <summary>
    /// The payload to register, which must have, at minimum, GUID specified correctly.
    /// The admin console can be used to verify that the payload definition is valid
    /// after registration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.Payload Payload {
      get { return payload_; }
      set {
        payload_ = value;
      }
    }

    /// <summary>Field number for the "payload_secret" field.</summary>
    public const int PayloadSecretFieldNumber = 3;
    private string payloadSecret_ = "";
    /// <summary>
    /// A private string provided by the payload to verify identity for auth.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadSecret {
      get { return payloadSecret_; }
      set {
        payloadSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterPayloadRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterPayloadRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(Payload, other.Payload)) return false;
      if (PayloadSecret != other.PayloadSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (payload_ != null) hash ^= Payload.GetHashCode();
      if (PayloadSecret.Length != 0) hash ^= PayloadSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (payload_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Payload);
      }
      if (PayloadSecret.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PayloadSecret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (payload_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Payload);
      }
      if (PayloadSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadSecret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterPayloadRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.payload_ != null) {
        if (payload_ == null) {
          Payload = new global::Bosdyn.Api.Payload();
        }
        Payload.MergeFrom(other.Payload);
      }
      if (other.PayloadSecret.Length != 0) {
        PayloadSecret = other.PayloadSecret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (payload_ == null) {
              Payload = new global::Bosdyn.Api.Payload();
            }
            input.ReadMessage(Payload);
            break;
          }
          case 26: {
            PayloadSecret = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The RegisterPayload response message contains the status of whether the payload was successfully
  /// registered to the directory.
  /// </summary>
  public sealed partial class RegisterPayloadResponse : pb::IMessage<RegisterPayloadResponse> {
    private static readonly pb::MessageParser<RegisterPayloadResponse> _parser = new pb::MessageParser<RegisterPayloadResponse>(() => new RegisterPayloadResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterPayloadResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterPayloadResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterPayloadResponse(RegisterPayloadResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterPayloadResponse Clone() {
      return new RegisterPayloadResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Bosdyn.Api.RegisterPayloadResponse.Types.Status status_ = 0;
    /// <summary>
    /// Return status for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RegisterPayloadResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterPayloadResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterPayloadResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterPayloadResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            Status = (global::Bosdyn.Api.RegisterPayloadResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RegisterPayloadResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Success.  The new service record is available.
        /// </summary>
        [pbr::OriginalName("STATUS_OK")] Ok = 1,
        /// <summary>
        /// RegisterPayload failed because a payload with this GUID already exists.
        /// </summary>
        [pbr::OriginalName("STATUS_ALREADY_EXISTS")] AlreadyExists = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Update the payload definition of the payload with matching GUID. The existing payload must
  /// have a secret set and the request must provide the secret for access.
  /// GUID and is_authorized fields are immutable and cannot be updated.
  /// </summary>
  public sealed partial class UpdatePayloadVersionRequest : pb::IMessage<UpdatePayloadVersionRequest> {
    private static readonly pb::MessageParser<UpdatePayloadVersionRequest> _parser = new pb::MessageParser<UpdatePayloadVersionRequest>(() => new UpdatePayloadVersionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePayloadVersionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadVersionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadVersionRequest(UpdatePayloadVersionRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      payloadCredentials_ = other.payloadCredentials_ != null ? other.payloadCredentials_.Clone() : null;
      payloadGuid_ = other.payloadGuid_;
      payloadSecret_ = other.payloadSecret_;
      updatedVersion_ = other.updatedVersion_ != null ? other.updatedVersion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadVersionRequest Clone() {
      return new UpdatePayloadVersionRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "payload_credentials" field.</summary>
    public const int PayloadCredentialsFieldNumber = 5;
    private global::Bosdyn.Api.PayloadCredentials payloadCredentials_;
    /// <summary>
    /// Payload credentials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PayloadCredentials PayloadCredentials {
      get { return payloadCredentials_; }
      set {
        payloadCredentials_ = value;
      }
    }

    /// <summary>Field number for the "payload_guid" field.</summary>
    public const int PayloadGuidFieldNumber = 2;
    private string payloadGuid_ = "";
    /// <summary>
    /// The GUID of the payload to be updated.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadGuid {
      get { return payloadGuid_; }
      set {
        payloadGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload_secret" field.</summary>
    public const int PayloadSecretFieldNumber = 3;
    private string payloadSecret_ = "";
    /// <summary>
    /// The payload secret for the specified payload.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadSecret {
      get { return payloadSecret_; }
      set {
        payloadSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updated_version" field.</summary>
    public const int UpdatedVersionFieldNumber = 4;
    private global::Bosdyn.Api.SoftwareVersion updatedVersion_;
    /// <summary>
    /// The new software version that the payload is being updated to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.SoftwareVersion UpdatedVersion {
      get { return updatedVersion_; }
      set {
        updatedVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePayloadVersionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePayloadVersionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(PayloadCredentials, other.PayloadCredentials)) return false;
      if (PayloadGuid != other.PayloadGuid) return false;
      if (PayloadSecret != other.PayloadSecret) return false;
      if (!object.Equals(UpdatedVersion, other.UpdatedVersion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (payloadCredentials_ != null) hash ^= PayloadCredentials.GetHashCode();
      if (PayloadGuid.Length != 0) hash ^= PayloadGuid.GetHashCode();
      if (PayloadSecret.Length != 0) hash ^= PayloadSecret.GetHashCode();
      if (updatedVersion_ != null) hash ^= UpdatedVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (PayloadGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PayloadGuid);
      }
      if (PayloadSecret.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PayloadSecret);
      }
      if (updatedVersion_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdatedVersion);
      }
      if (payloadCredentials_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PayloadCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (payloadCredentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayloadCredentials);
      }
      if (PayloadGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadGuid);
      }
      if (PayloadSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadSecret);
      }
      if (updatedVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePayloadVersionRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.payloadCredentials_ != null) {
        if (payloadCredentials_ == null) {
          PayloadCredentials = new global::Bosdyn.Api.PayloadCredentials();
        }
        PayloadCredentials.MergeFrom(other.PayloadCredentials);
      }
      if (other.PayloadGuid.Length != 0) {
        PayloadGuid = other.PayloadGuid;
      }
      if (other.PayloadSecret.Length != 0) {
        PayloadSecret = other.PayloadSecret;
      }
      if (other.updatedVersion_ != null) {
        if (updatedVersion_ == null) {
          UpdatedVersion = new global::Bosdyn.Api.SoftwareVersion();
        }
        UpdatedVersion.MergeFrom(other.UpdatedVersion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            PayloadGuid = input.ReadString();
            break;
          }
          case 26: {
            PayloadSecret = input.ReadString();
            break;
          }
          case 34: {
            if (updatedVersion_ == null) {
              UpdatedVersion = new global::Bosdyn.Api.SoftwareVersion();
            }
            input.ReadMessage(UpdatedVersion);
            break;
          }
          case 42: {
            if (payloadCredentials_ == null) {
              PayloadCredentials = new global::Bosdyn.Api.PayloadCredentials();
            }
            input.ReadMessage(PayloadCredentials);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The UpdatePayloadVersion response message contains the status of whether the update was successful.
  /// </summary>
  public sealed partial class UpdatePayloadVersionResponse : pb::IMessage<UpdatePayloadVersionResponse> {
    private static readonly pb::MessageParser<UpdatePayloadVersionResponse> _parser = new pb::MessageParser<UpdatePayloadVersionResponse>(() => new UpdatePayloadVersionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePayloadVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadVersionResponse(UpdatePayloadVersionResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadVersionResponse Clone() {
      return new UpdatePayloadVersionResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Bosdyn.Api.UpdatePayloadVersionResponse.Types.Status status_ = 0;
    /// <summary>
    /// Return status for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.UpdatePayloadVersionResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePayloadVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePayloadVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePayloadVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            Status = (global::Bosdyn.Api.UpdatePayloadVersionResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdatePayloadVersionResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Success.  The payload version has been updated.
        /// </summary>
        [pbr::OriginalName("STATUS_OK")] Ok = 1,
        /// <summary>
        /// UpdatePayload failed because a payload with this GUID does not yet exist.
        /// </summary>
        [pbr::OriginalName("STATUS_DOES_NOT_EXIST")] DoesNotExist = 2,
        /// <summary>
        /// UpdatePayload failed because the paylod guid &amp; secret do not match any registered payloads.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_CREDENTIALS")] InvalidCredentials = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Request a user token from the robot
  /// A token will only be provided after the registered payload has been enabled by an admin.
  /// The returned user token will have limited access to the services necessary for a simple payload.
  /// </summary>
  public sealed partial class GetPayloadAuthTokenRequest : pb::IMessage<GetPayloadAuthTokenRequest> {
    private static readonly pb::MessageParser<GetPayloadAuthTokenRequest> _parser = new pb::MessageParser<GetPayloadAuthTokenRequest>(() => new GetPayloadAuthTokenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPayloadAuthTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPayloadAuthTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPayloadAuthTokenRequest(GetPayloadAuthTokenRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      payloadCredentials_ = other.payloadCredentials_ != null ? other.payloadCredentials_.Clone() : null;
      payloadGuid_ = other.payloadGuid_;
      payloadSecret_ = other.payloadSecret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPayloadAuthTokenRequest Clone() {
      return new GetPayloadAuthTokenRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "payload_credentials" field.</summary>
    public const int PayloadCredentialsFieldNumber = 4;
    private global::Bosdyn.Api.PayloadCredentials payloadCredentials_;
    /// <summary>
    /// Payload credentials.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PayloadCredentials PayloadCredentials {
      get { return payloadCredentials_; }
      set {
        payloadCredentials_ = value;
      }
    }

    /// <summary>Field number for the "payload_guid" field.</summary>
    public const int PayloadGuidFieldNumber = 2;
    private string payloadGuid_ = "";
    /// <summary>
    /// The GUID to identify which payload to get the auth token for.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadGuid {
      get { return payloadGuid_; }
      set {
        payloadGuid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "payload_secret" field.</summary>
    public const int PayloadSecretFieldNumber = 3;
    private string payloadSecret_ = "";
    /// <summary>
    /// The payload secret for the specified payload.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayloadSecret {
      get { return payloadSecret_; }
      set {
        payloadSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPayloadAuthTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPayloadAuthTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(PayloadCredentials, other.PayloadCredentials)) return false;
      if (PayloadGuid != other.PayloadGuid) return false;
      if (PayloadSecret != other.PayloadSecret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (payloadCredentials_ != null) hash ^= PayloadCredentials.GetHashCode();
      if (PayloadGuid.Length != 0) hash ^= PayloadGuid.GetHashCode();
      if (PayloadSecret.Length != 0) hash ^= PayloadSecret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (PayloadGuid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PayloadGuid);
      }
      if (PayloadSecret.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PayloadSecret);
      }
      if (payloadCredentials_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PayloadCredentials);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (payloadCredentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayloadCredentials);
      }
      if (PayloadGuid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadGuid);
      }
      if (PayloadSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayloadSecret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPayloadAuthTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.payloadCredentials_ != null) {
        if (payloadCredentials_ == null) {
          PayloadCredentials = new global::Bosdyn.Api.PayloadCredentials();
        }
        PayloadCredentials.MergeFrom(other.PayloadCredentials);
      }
      if (other.PayloadGuid.Length != 0) {
        PayloadGuid = other.PayloadGuid;
      }
      if (other.PayloadSecret.Length != 0) {
        PayloadSecret = other.PayloadSecret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            PayloadGuid = input.ReadString();
            break;
          }
          case 26: {
            PayloadSecret = input.ReadString();
            break;
          }
          case 34: {
            if (payloadCredentials_ == null) {
              PayloadCredentials = new global::Bosdyn.Api.PayloadCredentials();
            }
            input.ReadMessage(PayloadCredentials);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The GetPayloadAuthToken response message that returns the token for the payload.
  /// </summary>
  public sealed partial class GetPayloadAuthTokenResponse : pb::IMessage<GetPayloadAuthTokenResponse> {
    private static readonly pb::MessageParser<GetPayloadAuthTokenResponse> _parser = new pb::MessageParser<GetPayloadAuthTokenResponse>(() => new GetPayloadAuthTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetPayloadAuthTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPayloadAuthTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPayloadAuthTokenResponse(GetPayloadAuthTokenResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      status_ = other.status_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetPayloadAuthTokenResponse Clone() {
      return new GetPayloadAuthTokenResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Bosdyn.Api.GetPayloadAuthTokenResponse.Types.Status status_ = 0;
    /// <summary>
    /// Return status for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.GetPayloadAuthTokenResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    /// <summary>
    /// A limited-access user token provided on successful payload registration
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetPayloadAuthTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetPayloadAuthTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Status != other.Status) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetPayloadAuthTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            Status = (global::Bosdyn.Api.GetPayloadAuthTokenResponse.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetPayloadAuthTokenResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Success.  The token is available.
        /// </summary>
        [pbr::OriginalName("STATUS_OK")] Ok = 1,
        /// <summary>
        /// GetPayloadAuthToken failed because the paylod guid &amp; secret do not match any registered payloads.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_CREDENTIALS")] InvalidCredentials = 2,
        /// <summary>
        /// GetPayloadAuthToken failed because the paylod has not been authorized by an admin.
        /// </summary>
        [pbr::OriginalName("STATUS_PAYLOAD_NOT_AUTHORIZED")] PayloadNotAuthorized = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// Attach/detach the payload with the matching GUID. The existing payload must
  /// have a secret set and the request must provide the secret for access.
  /// GUID is immutable and cannot be updated.
  /// </summary>
  public sealed partial class UpdatePayloadAttachedRequest : pb::IMessage<UpdatePayloadAttachedRequest> {
    private static readonly pb::MessageParser<UpdatePayloadAttachedRequest> _parser = new pb::MessageParser<UpdatePayloadAttachedRequest>(() => new UpdatePayloadAttachedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePayloadAttachedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadAttachedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadAttachedRequest(UpdatePayloadAttachedRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      payloadCredentials_ = other.payloadCredentials_ != null ? other.payloadCredentials_.Clone() : null;
      request_ = other.request_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadAttachedRequest Clone() {
      return new UpdatePayloadAttachedRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "payload_credentials" field.</summary>
    public const int PayloadCredentialsFieldNumber = 2;
    private global::Bosdyn.Api.PayloadCredentials payloadCredentials_;
    /// <summary>
    /// Payload credentials, used to identify the payload and authorize the changes. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.PayloadCredentials PayloadCredentials {
      get { return payloadCredentials_; }
      set {
        payloadCredentials_ = value;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 3;
    private global::Bosdyn.Api.UpdatePayloadAttachedRequest.Types.Request request_ = 0;
    /// <summary>
    /// Attach or detach the payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.UpdatePayloadAttachedRequest.Types.Request Request {
      get { return request_; }
      set {
        request_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePayloadAttachedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePayloadAttachedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (!object.Equals(PayloadCredentials, other.PayloadCredentials)) return false;
      if (Request != other.Request) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (payloadCredentials_ != null) hash ^= PayloadCredentials.GetHashCode();
      if (Request != 0) hash ^= Request.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (payloadCredentials_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PayloadCredentials);
      }
      if (Request != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Request);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (payloadCredentials_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayloadCredentials);
      }
      if (Request != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Request);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePayloadAttachedRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.payloadCredentials_ != null) {
        if (payloadCredentials_ == null) {
          PayloadCredentials = new global::Bosdyn.Api.PayloadCredentials();
        }
        PayloadCredentials.MergeFrom(other.PayloadCredentials);
      }
      if (other.Request != 0) {
        Request = other.Request;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            if (payloadCredentials_ == null) {
              PayloadCredentials = new global::Bosdyn.Api.PayloadCredentials();
            }
            input.ReadMessage(PayloadCredentials);
            break;
          }
          case 24: {
            Request = (global::Bosdyn.Api.UpdatePayloadAttachedRequest.Types.Request) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdatePayloadAttachedRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Request {
        [pbr::OriginalName("REQUEST_UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("REQUEST_ATTACH")] Attach = 1,
        [pbr::OriginalName("REQUEST_DETACH")] Detach = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// The UpdatePayloadAttached response message contains the status of whether the update was successful.
  /// </summary>
  public sealed partial class UpdatePayloadAttachedResponse : pb::IMessage<UpdatePayloadAttachedResponse> {
    private static readonly pb::MessageParser<UpdatePayloadAttachedResponse> _parser = new pb::MessageParser<UpdatePayloadAttachedResponse>(() => new UpdatePayloadAttachedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdatePayloadAttachedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadAttachedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadAttachedResponse(UpdatePayloadAttachedResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdatePayloadAttachedResponse Clone() {
      return new UpdatePayloadAttachedResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    /// <summary>
    /// Common response header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Bosdyn.Api.UpdatePayloadAttachedResponse.Types.Status status_ = 0;
    /// <summary>
    /// Return status for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.UpdatePayloadAttachedResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdatePayloadAttachedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdatePayloadAttachedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdatePayloadAttachedResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            Status = (global::Bosdyn.Api.UpdatePayloadAttachedResponse.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UpdatePayloadAttachedResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// UNKNOWN should never be used. An internal PayloadRegistrationService issue has happened if UNKNOWN is set.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Success.  The payload version has been updated.
        /// </summary>
        [pbr::OriginalName("STATUS_OK")] Ok = 1,
        /// <summary>
        /// UpdatePayloadAttached failed because a payload with this GUID does not yet exist.
        /// </summary>
        [pbr::OriginalName("STATUS_DOES_NOT_EXIST")] DoesNotExist = 2,
        /// <summary>
        /// UpdatePayloadAttached failed because the paylod guid &amp; secret do not match any registered payloads.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_CREDENTIALS")] InvalidCredentials = 3,
        /// <summary>
        /// UpdatePayloadAttached failed because the requested payload has not yet been authorized.
        /// Authorize the payload in the webserver first, then try again.
        /// </summary>
        [pbr::OriginalName("STATUS_PAYLOAD_NOT_AUTHORIZED")] PayloadNotAuthorized = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// PayloadCredentials are used to authorize a payload. 
  /// </summary>
  public sealed partial class PayloadCredentials : pb::IMessage<PayloadCredentials> {
    private static readonly pb::MessageParser<PayloadCredentials> _parser = new pb::MessageParser<PayloadCredentials>(() => new PayloadCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayloadCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadRegistrationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadCredentials(PayloadCredentials other) : this() {
      guid_ = other.guid_;
      secret_ = other.secret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadCredentials Clone() {
      return new PayloadCredentials(this);
    }

    /// <summary>Field number for the "guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private string guid_ = "";
    /// <summary>
    /// The GUID of the payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Guid {
      get { return guid_; }
      set {
        guid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private string secret_ = "";
    /// <summary>
    /// The secret of the payload.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayloadCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayloadCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Secret != other.Secret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid.Length != 0) hash ^= Guid.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Guid);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Guid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Guid);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayloadCredentials other) {
      if (other == null) {
        return;
      }
      if (other.Guid.Length != 0) {
        Guid = other.Guid;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Guid = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
