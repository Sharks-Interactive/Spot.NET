// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/auth.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bosdyn.Api {

  /// <summary>Holder for reflection information generated from Protos/auth.proto</summary>
  public static partial class AuthReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/auth.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AuthReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQcm90b3MvYXV0aC5wcm90bxIKYm9zZHluLmFwaRoTUHJvdG9zL2hlYWRl",
            "ci5wcm90byKSAQoTR2V0QXV0aFRva2VuUmVxdWVzdBIpCgZoZWFkZXIYASAB",
            "KAsyGS5ib3NkeW4uYXBpLlJlcXVlc3RIZWFkZXISEAoIdXNlcm5hbWUYAiAB",
            "KAkSEAoIcGFzc3dvcmQYAyABKAkSDQoFdG9rZW4YBCABKAkSHQoRYXBwbGlj",
            "YXRpb25fdG9rZW4YBSABKAlCAhgBItsCChRHZXRBdXRoVG9rZW5SZXNwb25z",
            "ZRIqCgZoZWFkZXIYASABKAsyGi5ib3NkeW4uYXBpLlJlc3BvbnNlSGVhZGVy",
            "EjcKBnN0YXR1cxgCIAEoDjInLmJvc2R5bi5hcGkuR2V0QXV0aFRva2VuUmVz",
            "cG9uc2UuU3RhdHVzEg0KBXRva2VuGAMgASgJIs4BCgZTdGF0dXMSEgoOU1RB",
            "VFVTX1VOS05PV04QABINCglTVEFUVVNfT0sQARIYChRTVEFUVVNfSU5WQUxJ",
            "RF9MT0dJThACEhgKFFNUQVRVU19JTlZBTElEX1RPS0VOEAMSIQodU1RBVFVT",
            "X1RFTVBPUkFSSUxZX0xPQ0tFRF9PVVQQBBIkCiBTVEFUVVNfSU5WQUxJRF9B",
            "UFBMSUNBVElPTl9UT0tFThAFEiQKIFNUQVRVU19FWFBJUkVEX0FQUExJQ0FU",
            "SU9OX1RPS0VOEAZCC0IJQXV0aFByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bosdyn.Api.HeaderReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetAuthTokenRequest), global::Bosdyn.Api.GetAuthTokenRequest.Parser, new[]{ "Header", "Username", "Password", "Token", "ApplicationToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.GetAuthTokenResponse), global::Bosdyn.Api.GetAuthTokenResponse.Parser, new[]{ "Header", "Status", "Token" }, null, new[]{ typeof(global::Bosdyn.Api.GetAuthTokenResponse.Types.Status) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The GetAuthToken request message includes login information for the robot.
  /// </summary>
  public sealed partial class GetAuthTokenRequest : pb::IMessage<GetAuthTokenRequest> {
    private static readonly pb::MessageParser<GetAuthTokenRequest> _parser = new pb::MessageParser<GetAuthTokenRequest>(() => new GetAuthTokenRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthTokenRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.AuthReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthTokenRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthTokenRequest(GetAuthTokenRequest other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      username_ = other.username_;
      password_ = other.password_;
      token_ = other.token_;
      applicationToken_ = other.applicationToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthTokenRequest Clone() {
      return new GetAuthTokenRequest(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.RequestHeader header_;
    /// <summary>
    /// Common request header.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.RequestHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 2;
    private string username_ = "";
    /// <summary>
    /// Username to authenticate with. Must be set if password is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    /// <summary>
    /// Password to authenticate with. Not neccessary if token is set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 4;
    private string token_ = "";
    /// <summary>
    /// Token to authenticate with. Can be used in place of the password, to re-mint a token.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application_token" field.</summary>
    public const int ApplicationTokenFieldNumber = 5;
    private string applicationToken_ = "";
    /// <summary>
    /// Deprecated as of 2.0.1. Application Token for authenticating with robots on older releases.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ApplicationToken {
      get { return applicationToken_; }
      set {
        applicationToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthTokenRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthTokenRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (Token != other.Token) return false;
      if (ApplicationToken != other.ApplicationToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (ApplicationToken.Length != 0) hash ^= ApplicationToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Username.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Token);
      }
      if (ApplicationToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ApplicationToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (ApplicationToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthTokenRequest other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.RequestHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.ApplicationToken.Length != 0) {
        ApplicationToken = other.ApplicationToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.RequestHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 18: {
            Username = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 34: {
            Token = input.ReadString();
            break;
          }
          case 42: {
            ApplicationToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The GetAuthToken response message includes an authentication token if the login information
  /// is correct and succeeds.
  /// </summary>
  public sealed partial class GetAuthTokenResponse : pb::IMessage<GetAuthTokenResponse> {
    private static readonly pb::MessageParser<GetAuthTokenResponse> _parser = new pb::MessageParser<GetAuthTokenResponse>(() => new GetAuthTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAuthTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.AuthReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthTokenResponse(GetAuthTokenResponse other) : this() {
      header_ = other.header_ != null ? other.header_.Clone() : null;
      status_ = other.status_;
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAuthTokenResponse Clone() {
      return new GetAuthTokenResponse(this);
    }

    /// <summary>Field number for the "header" field.</summary>
    public const int HeaderFieldNumber = 1;
    private global::Bosdyn.Api.ResponseHeader header_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.ResponseHeader Header {
      get { return header_; }
      set {
        header_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Bosdyn.Api.GetAuthTokenResponse.Types.Status status_ = 0;
    /// <summary>
    /// The status of the grpc GetAuthToken request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Bosdyn.Api.GetAuthTokenResponse.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private string token_ = "";
    /// <summary>
    /// Token data. Only specified if status == STATUS_OK.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAuthTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAuthTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Header, other.Header)) return false;
      if (Status != other.Status) return false;
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (header_ != null) hash ^= Header.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (header_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Header);
      }
      if (Status != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (header_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Header);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAuthTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.header_ != null) {
        if (header_ == null) {
          Header = new global::Bosdyn.Api.ResponseHeader();
        }
        Header.MergeFrom(other.Header);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (header_ == null) {
              Header = new global::Bosdyn.Api.ResponseHeader();
            }
            input.ReadMessage(Header);
            break;
          }
          case 16: {
            Status = (global::Bosdyn.Api.GetAuthTokenResponse.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            Token = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetAuthTokenResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Status {
        /// <summary>
        /// STATUS_UNKNOWN should never be used. If used, an internal error has happend.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// STATUS_OK indicates that authentication has succeeded. The 'token' field field will
        /// be populated with a session token that can be used to authenticate the user.
        /// </summary>
        [pbr::OriginalName("STATUS_OK")] Ok = 1,
        /// <summary>
        /// STATUS_INVALID_LOGIN indicates that authentication has failed since an invalid
        /// username and/or password were provided.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_LOGIN")] InvalidLogin = 2,
        /// <summary>
        /// STATUS_INVALID_TOKEN indicates that authentication has failed since the 'token'
        /// provided in the request is invalid. Reasons for the token being invalid could be
        /// because it has expired, because it is improperly formed, for the wrong robot, the
        /// user that the token is for has changed a password, or many other reasons. Clients
        /// should use username/password-based authentication when refreshing the token fails.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_TOKEN")] InvalidToken = 3,
        /// <summary>
        /// STATUS_TEMPORARILY_LOCKED_OUT indicates that authentication has failed since
        /// authentication for the user is temporarily locked out due to too many unsuccessful
        /// attempts. Any new authentication attempts should be delayed so they may happen after
        /// the lock out period ends.
        /// </summary>
        [pbr::OriginalName("STATUS_TEMPORARILY_LOCKED_OUT")] TemporarilyLockedOut = 4,
        /// <summary>
        /// STATUS_INVALID_APPLICATION_TOKEN indicates that the 'application_token' field in the
        /// request was invalid.
        /// </summary>
        [pbr::OriginalName("STATUS_INVALID_APPLICATION_TOKEN")] InvalidApplicationToken = 5,
        /// <summary>
        /// STATUS_EXPIRED_APPLICATION_TOKEN indicates that the 'application_token' field in the
        /// request was valid, but has expired.
        /// </summary>
        [pbr::OriginalName("STATUS_EXPIRED_APPLICATION_TOKEN")] ExpiredApplicationToken = 6,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
