// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/data_service.proto
// </auto-generated>
// Original file comments:
// Copyright (c) 2021 Boston Dynamics, Inc.  All rights reserved.
//
// Downloading, reproducing, distributing or otherwise using the SDK Software
// is subject to the terms and conditions of the Boston Dynamics Software
// Development Kit License (20191101-BDSDK-SL).
//
// DataBufferService allows adding information to the robot's log files.
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Bosdyn.Api {
  /// <summary>
  /// The DataService is a mechanism for querying and managing data stored on robot.
  /// </summary>
  public static partial class DataService
  {
    static readonly string __ServiceName = "bosdyn.api.DataService";

    static readonly grpc::Marshaller<global::Bosdyn.Api.GetDataIndexRequest> __Marshaller_bosdyn_api_GetDataIndexRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetDataIndexRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.GetDataIndexResponse> __Marshaller_bosdyn_api_GetDataIndexResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetDataIndexResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.GetEventsCommentsRequest> __Marshaller_bosdyn_api_GetEventsCommentsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetEventsCommentsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.GetEventsCommentsResponse> __Marshaller_bosdyn_api_GetEventsCommentsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetEventsCommentsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.GetDataBufferStatusRequest> __Marshaller_bosdyn_api_GetDataBufferStatusRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetDataBufferStatusRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.GetDataBufferStatusResponse> __Marshaller_bosdyn_api_GetDataBufferStatusResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetDataBufferStatusResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.GetDataPagesRequest> __Marshaller_bosdyn_api_GetDataPagesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetDataPagesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.GetDataPagesResponse> __Marshaller_bosdyn_api_GetDataPagesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.GetDataPagesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.DeleteDataPagesRequest> __Marshaller_bosdyn_api_DeleteDataPagesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.DeleteDataPagesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Bosdyn.Api.DeleteDataPagesResponse> __Marshaller_bosdyn_api_DeleteDataPagesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Bosdyn.Api.DeleteDataPagesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Bosdyn.Api.GetDataIndexRequest, global::Bosdyn.Api.GetDataIndexResponse> __Method_GetDataIndex = new grpc::Method<global::Bosdyn.Api.GetDataIndexRequest, global::Bosdyn.Api.GetDataIndexResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataIndex",
        __Marshaller_bosdyn_api_GetDataIndexRequest,
        __Marshaller_bosdyn_api_GetDataIndexResponse);

    static readonly grpc::Method<global::Bosdyn.Api.GetEventsCommentsRequest, global::Bosdyn.Api.GetEventsCommentsResponse> __Method_GetEventsComments = new grpc::Method<global::Bosdyn.Api.GetEventsCommentsRequest, global::Bosdyn.Api.GetEventsCommentsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetEventsComments",
        __Marshaller_bosdyn_api_GetEventsCommentsRequest,
        __Marshaller_bosdyn_api_GetEventsCommentsResponse);

    static readonly grpc::Method<global::Bosdyn.Api.GetDataBufferStatusRequest, global::Bosdyn.Api.GetDataBufferStatusResponse> __Method_GetDataBufferStatus = new grpc::Method<global::Bosdyn.Api.GetDataBufferStatusRequest, global::Bosdyn.Api.GetDataBufferStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataBufferStatus",
        __Marshaller_bosdyn_api_GetDataBufferStatusRequest,
        __Marshaller_bosdyn_api_GetDataBufferStatusResponse);

    static readonly grpc::Method<global::Bosdyn.Api.GetDataPagesRequest, global::Bosdyn.Api.GetDataPagesResponse> __Method_GetDataPages = new grpc::Method<global::Bosdyn.Api.GetDataPagesRequest, global::Bosdyn.Api.GetDataPagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDataPages",
        __Marshaller_bosdyn_api_GetDataPagesRequest,
        __Marshaller_bosdyn_api_GetDataPagesResponse);

    static readonly grpc::Method<global::Bosdyn.Api.DeleteDataPagesRequest, global::Bosdyn.Api.DeleteDataPagesResponse> __Method_DeleteDataPages = new grpc::Method<global::Bosdyn.Api.DeleteDataPagesRequest, global::Bosdyn.Api.DeleteDataPagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteDataPages",
        __Marshaller_bosdyn_api_DeleteDataPagesRequest,
        __Marshaller_bosdyn_api_DeleteDataPagesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Bosdyn.Api.DataServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of DataService</summary>
    [grpc::BindServiceMethod(typeof(DataService), "BindService")]
    public abstract partial class DataServiceBase
    {
      /// <summary>
      /// Get index of current data matching a given DataQuery.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Bosdyn.Api.GetDataIndexResponse> GetDataIndex(global::Bosdyn.Api.GetDataIndexRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get events and comments.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Bosdyn.Api.GetEventsCommentsResponse> GetEventsComments(global::Bosdyn.Api.GetEventsCommentsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get basic stats on data buffer storage.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Bosdyn.Api.GetDataBufferStatusResponse> GetDataBufferStatus(global::Bosdyn.Api.GetDataBufferStatusRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get a list pf pages matching a given time range
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Bosdyn.Api.GetDataPagesResponse> GetDataPages(global::Bosdyn.Api.GetDataPagesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a list of pages matching a given time range or page ids
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Bosdyn.Api.DeleteDataPagesResponse> DeleteDataPages(global::Bosdyn.Api.DeleteDataPagesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for DataService</summary>
    public partial class DataServiceClient : grpc::ClientBase<DataServiceClient>
    {
      /// <summary>Creates a new client for DataService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public DataServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for DataService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public DataServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected DataServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected DataServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Get index of current data matching a given DataQuery.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetDataIndexResponse GetDataIndex(global::Bosdyn.Api.GetDataIndexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataIndex(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get index of current data matching a given DataQuery.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetDataIndexResponse GetDataIndex(global::Bosdyn.Api.GetDataIndexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataIndex, null, options, request);
      }
      /// <summary>
      /// Get index of current data matching a given DataQuery.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetDataIndexResponse> GetDataIndexAsync(global::Bosdyn.Api.GetDataIndexRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataIndexAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get index of current data matching a given DataQuery.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetDataIndexResponse> GetDataIndexAsync(global::Bosdyn.Api.GetDataIndexRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataIndex, null, options, request);
      }
      /// <summary>
      /// Get events and comments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetEventsCommentsResponse GetEventsComments(global::Bosdyn.Api.GetEventsCommentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventsComments(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get events and comments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetEventsCommentsResponse GetEventsComments(global::Bosdyn.Api.GetEventsCommentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetEventsComments, null, options, request);
      }
      /// <summary>
      /// Get events and comments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetEventsCommentsResponse> GetEventsCommentsAsync(global::Bosdyn.Api.GetEventsCommentsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetEventsCommentsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get events and comments.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetEventsCommentsResponse> GetEventsCommentsAsync(global::Bosdyn.Api.GetEventsCommentsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetEventsComments, null, options, request);
      }
      /// <summary>
      /// Get basic stats on data buffer storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetDataBufferStatusResponse GetDataBufferStatus(global::Bosdyn.Api.GetDataBufferStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataBufferStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get basic stats on data buffer storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetDataBufferStatusResponse GetDataBufferStatus(global::Bosdyn.Api.GetDataBufferStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataBufferStatus, null, options, request);
      }
      /// <summary>
      /// Get basic stats on data buffer storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetDataBufferStatusResponse> GetDataBufferStatusAsync(global::Bosdyn.Api.GetDataBufferStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataBufferStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get basic stats on data buffer storage.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetDataBufferStatusResponse> GetDataBufferStatusAsync(global::Bosdyn.Api.GetDataBufferStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataBufferStatus, null, options, request);
      }
      /// <summary>
      /// Get a list pf pages matching a given time range
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetDataPagesResponse GetDataPages(global::Bosdyn.Api.GetDataPagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataPages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list pf pages matching a given time range
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.GetDataPagesResponse GetDataPages(global::Bosdyn.Api.GetDataPagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDataPages, null, options, request);
      }
      /// <summary>
      /// Get a list pf pages matching a given time range
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetDataPagesResponse> GetDataPagesAsync(global::Bosdyn.Api.GetDataPagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDataPagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get a list pf pages matching a given time range
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.GetDataPagesResponse> GetDataPagesAsync(global::Bosdyn.Api.GetDataPagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDataPages, null, options, request);
      }
      /// <summary>
      /// Delete a list of pages matching a given time range or page ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.DeleteDataPagesResponse DeleteDataPages(global::Bosdyn.Api.DeleteDataPagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDataPages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a list of pages matching a given time range or page ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Bosdyn.Api.DeleteDataPagesResponse DeleteDataPages(global::Bosdyn.Api.DeleteDataPagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteDataPages, null, options, request);
      }
      /// <summary>
      /// Delete a list of pages matching a given time range or page ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.DeleteDataPagesResponse> DeleteDataPagesAsync(global::Bosdyn.Api.DeleteDataPagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteDataPagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a list of pages matching a given time range or page ids
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Bosdyn.Api.DeleteDataPagesResponse> DeleteDataPagesAsync(global::Bosdyn.Api.DeleteDataPagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteDataPages, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override DataServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new DataServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(DataServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetDataIndex, serviceImpl.GetDataIndex)
          .AddMethod(__Method_GetEventsComments, serviceImpl.GetEventsComments)
          .AddMethod(__Method_GetDataBufferStatus, serviceImpl.GetDataBufferStatus)
          .AddMethod(__Method_GetDataPages, serviceImpl.GetDataPages)
          .AddMethod(__Method_DeleteDataPages, serviceImpl.DeleteDataPages).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, DataServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetDataIndex, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bosdyn.Api.GetDataIndexRequest, global::Bosdyn.Api.GetDataIndexResponse>(serviceImpl.GetDataIndex));
      serviceBinder.AddMethod(__Method_GetEventsComments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bosdyn.Api.GetEventsCommentsRequest, global::Bosdyn.Api.GetEventsCommentsResponse>(serviceImpl.GetEventsComments));
      serviceBinder.AddMethod(__Method_GetDataBufferStatus, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bosdyn.Api.GetDataBufferStatusRequest, global::Bosdyn.Api.GetDataBufferStatusResponse>(serviceImpl.GetDataBufferStatus));
      serviceBinder.AddMethod(__Method_GetDataPages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bosdyn.Api.GetDataPagesRequest, global::Bosdyn.Api.GetDataPagesResponse>(serviceImpl.GetDataPages));
      serviceBinder.AddMethod(__Method_DeleteDataPages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Bosdyn.Api.DeleteDataPagesRequest, global::Bosdyn.Api.DeleteDataPagesResponse>(serviceImpl.DeleteDataPages));
    }

  }
}
#endregion
