// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/full_body_command.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bosdyn.Api {

  /// <summary>Holder for reflection information generated from Protos/full_body_command.proto</summary>
  public static partial class FullBodyCommandReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/full_body_command.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FullBodyCommandReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5Qcm90b3MvZnVsbF9ib2R5X2NvbW1hbmQucHJvdG8SCmJvc2R5bi5hcGka",
            "GlByb3Rvcy9iYXNpY19jb21tYW5kLnByb3RvGh9Qcm90b3MvcGF5bG9hZF9l",
            "c3RpbWF0aW9uLnByb3RvGhlnb29nbGUvcHJvdG9idWYvYW55LnByb3RvIs4J",
            "Cg9GdWxsQm9keUNvbW1hbmQaxwQKB1JlcXVlc3QSNwoMc3RvcF9yZXF1ZXN0",
            "GAEgASgLMh8uYm9zZHluLmFwaS5TdG9wQ29tbWFuZC5SZXF1ZXN0SAASOwoO",
            "ZnJlZXplX3JlcXVlc3QYAiABKAsyIS5ib3NkeW4uYXBpLkZyZWV6ZUNvbW1h",
            "bmQuUmVxdWVzdEgAEkEKEXNlbGZyaWdodF9yZXF1ZXN0GAMgASgLMiQuYm9z",
            "ZHluLmFwaS5TZWxmUmlnaHRDb21tYW5kLlJlcXVlc3RIABJJChZzYWZlX3Bv",
            "d2VyX29mZl9yZXF1ZXN0GAQgASgLMicuYm9zZHluLmFwaS5TYWZlUG93ZXJP",
            "ZmZDb21tYW5kLlJlcXVlc3RIABJTChtiYXR0ZXJ5X2NoYW5nZV9wb3NlX3Jl",
            "cXVlc3QYBSABKAsyLC5ib3NkeW4uYXBpLkJhdHRlcnlDaGFuZ2VQb3NlQ29t",
            "bWFuZC5SZXF1ZXN0SAASUgoacGF5bG9hZF9lc3RpbWF0aW9uX3JlcXVlc3QY",
            "BiABKAsyLC5ib3NkeW4uYXBpLlBheWxvYWRFc3RpbWF0aW9uQ29tbWFuZC5S",
            "ZXF1ZXN0SAASXgogY29uc3RyYWluZWRfbWFuaXB1bGF0aW9uX3JlcXVlc3QY",
            "ByABKAsyMi5ib3NkeW4uYXBpLkNvbnN0cmFpbmVkTWFuaXB1bGF0aW9uQ29t",
            "bWFuZC5SZXF1ZXN0SAASJAoGcGFyYW1zGGQgASgLMhQuZ29vZ2xlLnByb3Rv",
            "YnVmLkFueUIJCgdjb21tYW5kGvAECghGZWVkYmFjaxI5Cg1zdG9wX2ZlZWRi",
            "YWNrGAEgASgLMiAuYm9zZHluLmFwaS5TdG9wQ29tbWFuZC5GZWVkYmFja0gA",
            "Ej0KD2ZyZWV6ZV9mZWVkYmFjaxgCIAEoCzIiLmJvc2R5bi5hcGkuRnJlZXpl",
            "Q29tbWFuZC5GZWVkYmFja0gAEkMKEnNlbGZyaWdodF9mZWVkYmFjaxgDIAEo",
            "CzIlLmJvc2R5bi5hcGkuU2VsZlJpZ2h0Q29tbWFuZC5GZWVkYmFja0gAEksK",
            "F3NhZmVfcG93ZXJfb2ZmX2ZlZWRiYWNrGAQgASgLMiguYm9zZHluLmFwaS5T",
            "YWZlUG93ZXJPZmZDb21tYW5kLkZlZWRiYWNrSAASVQocYmF0dGVyeV9jaGFu",
            "Z2VfcG9zZV9mZWVkYmFjaxgFIAEoCzItLmJvc2R5bi5hcGkuQmF0dGVyeUNo",
            "YW5nZVBvc2VDb21tYW5kLkZlZWRiYWNrSAASVAobcGF5bG9hZF9lc3RpbWF0",
            "aW9uX2ZlZWRiYWNrGAYgASgLMi0uYm9zZHluLmFwaS5QYXlsb2FkRXN0aW1h",
            "dGlvbkNvbW1hbmQuRmVlZGJhY2tIABJgCiFjb25zdHJhaW5lZF9tYW5pcHVs",
            "YXRpb25fZmVlZGJhY2sYByABKAsyMy5ib3NkeW4uYXBpLkNvbnN0cmFpbmVk",
            "TWFuaXB1bGF0aW9uQ29tbWFuZC5GZWVkYmFja0gAEj0KBnN0YXR1cxhkIAEo",
            "DjItLmJvc2R5bi5hcGkuUm9ib3RDb21tYW5kRmVlZGJhY2tTdGF0dXMuU3Rh",
            "dHVzQgoKCGZlZWRiYWNrQhZCFEZ1bGxCb2R5Q29tbWFuZFByb3RvYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bosdyn.Api.BasicCommandReflection.Descriptor, global::Bosdyn.Api.PayloadEstimationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.FullBodyCommand), global::Bosdyn.Api.FullBodyCommand.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.FullBodyCommand.Types.Request), global::Bosdyn.Api.FullBodyCommand.Types.Request.Parser, new[]{ "StopRequest", "FreezeRequest", "SelfrightRequest", "SafePowerOffRequest", "BatteryChangePoseRequest", "PayloadEstimationRequest", "ConstrainedManipulationRequest", "Params" }, new[]{ "Command" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.FullBodyCommand.Types.Feedback), global::Bosdyn.Api.FullBodyCommand.Types.Feedback.Parser, new[]{ "StopFeedback", "FreezeFeedback", "SelfrightFeedback", "SafePowerOffFeedback", "BatteryChangePoseFeedback", "PayloadEstimationFeedback", "ConstrainedManipulationFeedback", "Status" }, new[]{ "Feedback" }, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The robot command message to specify a basic command that requires full control of the entire
  /// robot to be completed.
  /// </summary>
  public sealed partial class FullBodyCommand : pb::IMessage<FullBodyCommand> {
    private static readonly pb::MessageParser<FullBodyCommand> _parser = new pb::MessageParser<FullBodyCommand>(() => new FullBodyCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FullBodyCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.FullBodyCommandReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCommand(FullBodyCommand other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FullBodyCommand Clone() {
      return new FullBodyCommand(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FullBodyCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FullBodyCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FullBodyCommand other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the FullBodyCommand message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// The full body request must be one of the basic command primitives.
      /// </summary>
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Bosdyn.Api.FullBodyCommand.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          params_ = other.params_ != null ? other.params_.Clone() : null;
          switch (other.CommandCase) {
            case CommandOneofCase.StopRequest:
              StopRequest = other.StopRequest.Clone();
              break;
            case CommandOneofCase.FreezeRequest:
              FreezeRequest = other.FreezeRequest.Clone();
              break;
            case CommandOneofCase.SelfrightRequest:
              SelfrightRequest = other.SelfrightRequest.Clone();
              break;
            case CommandOneofCase.SafePowerOffRequest:
              SafePowerOffRequest = other.SafePowerOffRequest.Clone();
              break;
            case CommandOneofCase.BatteryChangePoseRequest:
              BatteryChangePoseRequest = other.BatteryChangePoseRequest.Clone();
              break;
            case CommandOneofCase.PayloadEstimationRequest:
              PayloadEstimationRequest = other.PayloadEstimationRequest.Clone();
              break;
            case CommandOneofCase.ConstrainedManipulationRequest:
              ConstrainedManipulationRequest = other.ConstrainedManipulationRequest.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        /// <summary>Field number for the "stop_request" field.</summary>
        public const int StopRequestFieldNumber = 1;
        /// <summary>
        /// Command to stop the robot.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.StopCommand.Types.Request StopRequest {
          get { return commandCase_ == CommandOneofCase.StopRequest ? (global::Bosdyn.Api.StopCommand.Types.Request) command_ : null; }
          set {
            command_ = value;
            commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.StopRequest;
          }
        }

        /// <summary>Field number for the "freeze_request" field.</summary>
        public const int FreezeRequestFieldNumber = 2;
        /// <summary>
        /// Command to freeze all joints of the robot.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.FreezeCommand.Types.Request FreezeRequest {
          get { return commandCase_ == CommandOneofCase.FreezeRequest ? (global::Bosdyn.Api.FreezeCommand.Types.Request) command_ : null; }
          set {
            command_ = value;
            commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.FreezeRequest;
          }
        }

        /// <summary>Field number for the "selfright_request" field.</summary>
        public const int SelfrightRequestFieldNumber = 3;
        /// <summary>
        /// Command to self-right the robot to a ready position.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.SelfRightCommand.Types.Request SelfrightRequest {
          get { return commandCase_ == CommandOneofCase.SelfrightRequest ? (global::Bosdyn.Api.SelfRightCommand.Types.Request) command_ : null; }
          set {
            command_ = value;
            commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.SelfrightRequest;
          }
        }

        /// <summary>Field number for the "safe_power_off_request" field.</summary>
        public const int SafePowerOffRequestFieldNumber = 4;
        /// <summary>
        /// Command to safely power off the robot.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.SafePowerOffCommand.Types.Request SafePowerOffRequest {
          get { return commandCase_ == CommandOneofCase.SafePowerOffRequest ? (global::Bosdyn.Api.SafePowerOffCommand.Types.Request) command_ : null; }
          set {
            command_ = value;
            commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.SafePowerOffRequest;
          }
        }

        /// <summary>Field number for the "battery_change_pose_request" field.</summary>
        public const int BatteryChangePoseRequestFieldNumber = 5;
        /// <summary>
        /// Command to put the robot in a position to easily change the battery.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.BatteryChangePoseCommand.Types.Request BatteryChangePoseRequest {
          get { return commandCase_ == CommandOneofCase.BatteryChangePoseRequest ? (global::Bosdyn.Api.BatteryChangePoseCommand.Types.Request) command_ : null; }
          set {
            command_ = value;
            commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.BatteryChangePoseRequest;
          }
        }

        /// <summary>Field number for the "payload_estimation_request" field.</summary>
        public const int PayloadEstimationRequestFieldNumber = 6;
        /// <summary>
        /// Command to perform payload mass property estimation
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.PayloadEstimationCommand.Types.Request PayloadEstimationRequest {
          get { return commandCase_ == CommandOneofCase.PayloadEstimationRequest ? (global::Bosdyn.Api.PayloadEstimationCommand.Types.Request) command_ : null; }
          set {
            command_ = value;
            commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.PayloadEstimationRequest;
          }
        }

        /// <summary>Field number for the "constrained_manipulation_request" field.</summary>
        public const int ConstrainedManipulationRequestFieldNumber = 7;
        /// <summary>
        /// Command to perform full body constrained manipulation moves
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Request ConstrainedManipulationRequest {
          get { return commandCase_ == CommandOneofCase.ConstrainedManipulationRequest ? (global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Request) command_ : null; }
          set {
            command_ = value;
            commandCase_ = value == null ? CommandOneofCase.None : CommandOneofCase.ConstrainedManipulationRequest;
          }
        }

        /// <summary>Field number for the "params" field.</summary>
        public const int ParamsFieldNumber = 100;
        private global::Google.Protobuf.WellKnownTypes.Any params_;
        /// <summary>
        /// Robot specific command parameters.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Any Params {
          get { return params_; }
          set {
            params_ = value;
          }
        }

        private object command_;
        /// <summary>Enum of possible cases for the "command" oneof.</summary>
        public enum CommandOneofCase {
          None = 0,
          StopRequest = 1,
          FreezeRequest = 2,
          SelfrightRequest = 3,
          SafePowerOffRequest = 4,
          BatteryChangePoseRequest = 5,
          PayloadEstimationRequest = 6,
          ConstrainedManipulationRequest = 7,
        }
        private CommandOneofCase commandCase_ = CommandOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public CommandOneofCase CommandCase {
          get { return commandCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearCommand() {
          commandCase_ = CommandOneofCase.None;
          command_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(StopRequest, other.StopRequest)) return false;
          if (!object.Equals(FreezeRequest, other.FreezeRequest)) return false;
          if (!object.Equals(SelfrightRequest, other.SelfrightRequest)) return false;
          if (!object.Equals(SafePowerOffRequest, other.SafePowerOffRequest)) return false;
          if (!object.Equals(BatteryChangePoseRequest, other.BatteryChangePoseRequest)) return false;
          if (!object.Equals(PayloadEstimationRequest, other.PayloadEstimationRequest)) return false;
          if (!object.Equals(ConstrainedManipulationRequest, other.ConstrainedManipulationRequest)) return false;
          if (!object.Equals(Params, other.Params)) return false;
          if (CommandCase != other.CommandCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (commandCase_ == CommandOneofCase.StopRequest) hash ^= StopRequest.GetHashCode();
          if (commandCase_ == CommandOneofCase.FreezeRequest) hash ^= FreezeRequest.GetHashCode();
          if (commandCase_ == CommandOneofCase.SelfrightRequest) hash ^= SelfrightRequest.GetHashCode();
          if (commandCase_ == CommandOneofCase.SafePowerOffRequest) hash ^= SafePowerOffRequest.GetHashCode();
          if (commandCase_ == CommandOneofCase.BatteryChangePoseRequest) hash ^= BatteryChangePoseRequest.GetHashCode();
          if (commandCase_ == CommandOneofCase.PayloadEstimationRequest) hash ^= PayloadEstimationRequest.GetHashCode();
          if (commandCase_ == CommandOneofCase.ConstrainedManipulationRequest) hash ^= ConstrainedManipulationRequest.GetHashCode();
          if (params_ != null) hash ^= Params.GetHashCode();
          hash ^= (int) commandCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (commandCase_ == CommandOneofCase.StopRequest) {
            output.WriteRawTag(10);
            output.WriteMessage(StopRequest);
          }
          if (commandCase_ == CommandOneofCase.FreezeRequest) {
            output.WriteRawTag(18);
            output.WriteMessage(FreezeRequest);
          }
          if (commandCase_ == CommandOneofCase.SelfrightRequest) {
            output.WriteRawTag(26);
            output.WriteMessage(SelfrightRequest);
          }
          if (commandCase_ == CommandOneofCase.SafePowerOffRequest) {
            output.WriteRawTag(34);
            output.WriteMessage(SafePowerOffRequest);
          }
          if (commandCase_ == CommandOneofCase.BatteryChangePoseRequest) {
            output.WriteRawTag(42);
            output.WriteMessage(BatteryChangePoseRequest);
          }
          if (commandCase_ == CommandOneofCase.PayloadEstimationRequest) {
            output.WriteRawTag(50);
            output.WriteMessage(PayloadEstimationRequest);
          }
          if (commandCase_ == CommandOneofCase.ConstrainedManipulationRequest) {
            output.WriteRawTag(58);
            output.WriteMessage(ConstrainedManipulationRequest);
          }
          if (params_ != null) {
            output.WriteRawTag(162, 6);
            output.WriteMessage(Params);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (commandCase_ == CommandOneofCase.StopRequest) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StopRequest);
          }
          if (commandCase_ == CommandOneofCase.FreezeRequest) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FreezeRequest);
          }
          if (commandCase_ == CommandOneofCase.SelfrightRequest) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfrightRequest);
          }
          if (commandCase_ == CommandOneofCase.SafePowerOffRequest) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SafePowerOffRequest);
          }
          if (commandCase_ == CommandOneofCase.BatteryChangePoseRequest) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatteryChangePoseRequest);
          }
          if (commandCase_ == CommandOneofCase.PayloadEstimationRequest) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayloadEstimationRequest);
          }
          if (commandCase_ == CommandOneofCase.ConstrainedManipulationRequest) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConstrainedManipulationRequest);
          }
          if (params_ != null) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Params);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          if (other.params_ != null) {
            if (params_ == null) {
              Params = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            Params.MergeFrom(other.Params);
          }
          switch (other.CommandCase) {
            case CommandOneofCase.StopRequest:
              if (StopRequest == null) {
                StopRequest = new global::Bosdyn.Api.StopCommand.Types.Request();
              }
              StopRequest.MergeFrom(other.StopRequest);
              break;
            case CommandOneofCase.FreezeRequest:
              if (FreezeRequest == null) {
                FreezeRequest = new global::Bosdyn.Api.FreezeCommand.Types.Request();
              }
              FreezeRequest.MergeFrom(other.FreezeRequest);
              break;
            case CommandOneofCase.SelfrightRequest:
              if (SelfrightRequest == null) {
                SelfrightRequest = new global::Bosdyn.Api.SelfRightCommand.Types.Request();
              }
              SelfrightRequest.MergeFrom(other.SelfrightRequest);
              break;
            case CommandOneofCase.SafePowerOffRequest:
              if (SafePowerOffRequest == null) {
                SafePowerOffRequest = new global::Bosdyn.Api.SafePowerOffCommand.Types.Request();
              }
              SafePowerOffRequest.MergeFrom(other.SafePowerOffRequest);
              break;
            case CommandOneofCase.BatteryChangePoseRequest:
              if (BatteryChangePoseRequest == null) {
                BatteryChangePoseRequest = new global::Bosdyn.Api.BatteryChangePoseCommand.Types.Request();
              }
              BatteryChangePoseRequest.MergeFrom(other.BatteryChangePoseRequest);
              break;
            case CommandOneofCase.PayloadEstimationRequest:
              if (PayloadEstimationRequest == null) {
                PayloadEstimationRequest = new global::Bosdyn.Api.PayloadEstimationCommand.Types.Request();
              }
              PayloadEstimationRequest.MergeFrom(other.PayloadEstimationRequest);
              break;
            case CommandOneofCase.ConstrainedManipulationRequest:
              if (ConstrainedManipulationRequest == null) {
                ConstrainedManipulationRequest = new global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Request();
              }
              ConstrainedManipulationRequest.MergeFrom(other.ConstrainedManipulationRequest);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Bosdyn.Api.StopCommand.Types.Request subBuilder = new global::Bosdyn.Api.StopCommand.Types.Request();
                if (commandCase_ == CommandOneofCase.StopRequest) {
                  subBuilder.MergeFrom(StopRequest);
                }
                input.ReadMessage(subBuilder);
                StopRequest = subBuilder;
                break;
              }
              case 18: {
                global::Bosdyn.Api.FreezeCommand.Types.Request subBuilder = new global::Bosdyn.Api.FreezeCommand.Types.Request();
                if (commandCase_ == CommandOneofCase.FreezeRequest) {
                  subBuilder.MergeFrom(FreezeRequest);
                }
                input.ReadMessage(subBuilder);
                FreezeRequest = subBuilder;
                break;
              }
              case 26: {
                global::Bosdyn.Api.SelfRightCommand.Types.Request subBuilder = new global::Bosdyn.Api.SelfRightCommand.Types.Request();
                if (commandCase_ == CommandOneofCase.SelfrightRequest) {
                  subBuilder.MergeFrom(SelfrightRequest);
                }
                input.ReadMessage(subBuilder);
                SelfrightRequest = subBuilder;
                break;
              }
              case 34: {
                global::Bosdyn.Api.SafePowerOffCommand.Types.Request subBuilder = new global::Bosdyn.Api.SafePowerOffCommand.Types.Request();
                if (commandCase_ == CommandOneofCase.SafePowerOffRequest) {
                  subBuilder.MergeFrom(SafePowerOffRequest);
                }
                input.ReadMessage(subBuilder);
                SafePowerOffRequest = subBuilder;
                break;
              }
              case 42: {
                global::Bosdyn.Api.BatteryChangePoseCommand.Types.Request subBuilder = new global::Bosdyn.Api.BatteryChangePoseCommand.Types.Request();
                if (commandCase_ == CommandOneofCase.BatteryChangePoseRequest) {
                  subBuilder.MergeFrom(BatteryChangePoseRequest);
                }
                input.ReadMessage(subBuilder);
                BatteryChangePoseRequest = subBuilder;
                break;
              }
              case 50: {
                global::Bosdyn.Api.PayloadEstimationCommand.Types.Request subBuilder = new global::Bosdyn.Api.PayloadEstimationCommand.Types.Request();
                if (commandCase_ == CommandOneofCase.PayloadEstimationRequest) {
                  subBuilder.MergeFrom(PayloadEstimationRequest);
                }
                input.ReadMessage(subBuilder);
                PayloadEstimationRequest = subBuilder;
                break;
              }
              case 58: {
                global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Request subBuilder = new global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Request();
                if (commandCase_ == CommandOneofCase.ConstrainedManipulationRequest) {
                  subBuilder.MergeFrom(ConstrainedManipulationRequest);
                }
                input.ReadMessage(subBuilder);
                ConstrainedManipulationRequest = subBuilder;
                break;
              }
              case 802: {
                if (params_ == null) {
                  Params = new global::Google.Protobuf.WellKnownTypes.Any();
                }
                input.ReadMessage(Params);
                break;
              }
            }
          }
        }

      }

      /// <summary>
      /// The feedback for the fully body command that will provide information on the progress
      /// of the robot command.
      /// </summary>
      public sealed partial class Feedback : pb::IMessage<Feedback> {
        private static readonly pb::MessageParser<Feedback> _parser = new pb::MessageParser<Feedback>(() => new Feedback());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Feedback> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Bosdyn.Api.FullBodyCommand.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Feedback() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Feedback(Feedback other) : this() {
          status_ = other.status_;
          switch (other.FeedbackCase) {
            case FeedbackOneofCase.StopFeedback:
              StopFeedback = other.StopFeedback.Clone();
              break;
            case FeedbackOneofCase.FreezeFeedback:
              FreezeFeedback = other.FreezeFeedback.Clone();
              break;
            case FeedbackOneofCase.SelfrightFeedback:
              SelfrightFeedback = other.SelfrightFeedback.Clone();
              break;
            case FeedbackOneofCase.SafePowerOffFeedback:
              SafePowerOffFeedback = other.SafePowerOffFeedback.Clone();
              break;
            case FeedbackOneofCase.BatteryChangePoseFeedback:
              BatteryChangePoseFeedback = other.BatteryChangePoseFeedback.Clone();
              break;
            case FeedbackOneofCase.PayloadEstimationFeedback:
              PayloadEstimationFeedback = other.PayloadEstimationFeedback.Clone();
              break;
            case FeedbackOneofCase.ConstrainedManipulationFeedback:
              ConstrainedManipulationFeedback = other.ConstrainedManipulationFeedback.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Feedback Clone() {
          return new Feedback(this);
        }

        /// <summary>Field number for the "stop_feedback" field.</summary>
        public const int StopFeedbackFieldNumber = 1;
        /// <summary>
        /// Feedback for the stop command request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.StopCommand.Types.Feedback StopFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.StopFeedback ? (global::Bosdyn.Api.StopCommand.Types.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.StopFeedback;
          }
        }

        /// <summary>Field number for the "freeze_feedback" field.</summary>
        public const int FreezeFeedbackFieldNumber = 2;
        /// <summary>
        /// Feedback for the freeze command request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.FreezeCommand.Types.Feedback FreezeFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.FreezeFeedback ? (global::Bosdyn.Api.FreezeCommand.Types.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.FreezeFeedback;
          }
        }

        /// <summary>Field number for the "selfright_feedback" field.</summary>
        public const int SelfrightFeedbackFieldNumber = 3;
        /// <summary>
        /// Feedback for the self-right command request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.SelfRightCommand.Types.Feedback SelfrightFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.SelfrightFeedback ? (global::Bosdyn.Api.SelfRightCommand.Types.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.SelfrightFeedback;
          }
        }

        /// <summary>Field number for the "safe_power_off_feedback" field.</summary>
        public const int SafePowerOffFeedbackFieldNumber = 4;
        /// <summary>
        /// Feedback for the safe power off command request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.SafePowerOffCommand.Types.Feedback SafePowerOffFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.SafePowerOffFeedback ? (global::Bosdyn.Api.SafePowerOffCommand.Types.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.SafePowerOffFeedback;
          }
        }

        /// <summary>Field number for the "battery_change_pose_feedback" field.</summary>
        public const int BatteryChangePoseFeedbackFieldNumber = 5;
        /// <summary>
        /// Feedback for the battery change pose command request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.BatteryChangePoseCommand.Types.Feedback BatteryChangePoseFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.BatteryChangePoseFeedback ? (global::Bosdyn.Api.BatteryChangePoseCommand.Types.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.BatteryChangePoseFeedback;
          }
        }

        /// <summary>Field number for the "payload_estimation_feedback" field.</summary>
        public const int PayloadEstimationFeedbackFieldNumber = 6;
        /// <summary>
        /// Feedback for the payload estimation command request.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback PayloadEstimationFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.PayloadEstimationFeedback ? (global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.PayloadEstimationFeedback;
          }
        }

        /// <summary>Field number for the "constrained_manipulation_feedback" field.</summary>
        public const int ConstrainedManipulationFeedbackFieldNumber = 7;
        /// <summary>
        /// Feedback for the constrained manipulation command request
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Feedback ConstrainedManipulationFeedback {
          get { return feedbackCase_ == FeedbackOneofCase.ConstrainedManipulationFeedback ? (global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Feedback) feedback_ : null; }
          set {
            feedback_ = value;
            feedbackCase_ = value == null ? FeedbackOneofCase.None : FeedbackOneofCase.ConstrainedManipulationFeedback;
          }
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 100;
        private global::Bosdyn.Api.RobotCommandFeedbackStatus.Types.Status status_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.RobotCommandFeedbackStatus.Types.Status Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        private object feedback_;
        /// <summary>Enum of possible cases for the "feedback" oneof.</summary>
        public enum FeedbackOneofCase {
          None = 0,
          StopFeedback = 1,
          FreezeFeedback = 2,
          SelfrightFeedback = 3,
          SafePowerOffFeedback = 4,
          BatteryChangePoseFeedback = 5,
          PayloadEstimationFeedback = 6,
          ConstrainedManipulationFeedback = 7,
        }
        private FeedbackOneofCase feedbackCase_ = FeedbackOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FeedbackOneofCase FeedbackCase {
          get { return feedbackCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearFeedback() {
          feedbackCase_ = FeedbackOneofCase.None;
          feedback_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Feedback);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Feedback other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(StopFeedback, other.StopFeedback)) return false;
          if (!object.Equals(FreezeFeedback, other.FreezeFeedback)) return false;
          if (!object.Equals(SelfrightFeedback, other.SelfrightFeedback)) return false;
          if (!object.Equals(SafePowerOffFeedback, other.SafePowerOffFeedback)) return false;
          if (!object.Equals(BatteryChangePoseFeedback, other.BatteryChangePoseFeedback)) return false;
          if (!object.Equals(PayloadEstimationFeedback, other.PayloadEstimationFeedback)) return false;
          if (!object.Equals(ConstrainedManipulationFeedback, other.ConstrainedManipulationFeedback)) return false;
          if (Status != other.Status) return false;
          if (FeedbackCase != other.FeedbackCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (feedbackCase_ == FeedbackOneofCase.StopFeedback) hash ^= StopFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.FreezeFeedback) hash ^= FreezeFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.SelfrightFeedback) hash ^= SelfrightFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.SafePowerOffFeedback) hash ^= SafePowerOffFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.BatteryChangePoseFeedback) hash ^= BatteryChangePoseFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.PayloadEstimationFeedback) hash ^= PayloadEstimationFeedback.GetHashCode();
          if (feedbackCase_ == FeedbackOneofCase.ConstrainedManipulationFeedback) hash ^= ConstrainedManipulationFeedback.GetHashCode();
          if (Status != 0) hash ^= Status.GetHashCode();
          hash ^= (int) feedbackCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (feedbackCase_ == FeedbackOneofCase.StopFeedback) {
            output.WriteRawTag(10);
            output.WriteMessage(StopFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.FreezeFeedback) {
            output.WriteRawTag(18);
            output.WriteMessage(FreezeFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.SelfrightFeedback) {
            output.WriteRawTag(26);
            output.WriteMessage(SelfrightFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.SafePowerOffFeedback) {
            output.WriteRawTag(34);
            output.WriteMessage(SafePowerOffFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.BatteryChangePoseFeedback) {
            output.WriteRawTag(42);
            output.WriteMessage(BatteryChangePoseFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.PayloadEstimationFeedback) {
            output.WriteRawTag(50);
            output.WriteMessage(PayloadEstimationFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.ConstrainedManipulationFeedback) {
            output.WriteRawTag(58);
            output.WriteMessage(ConstrainedManipulationFeedback);
          }
          if (Status != 0) {
            output.WriteRawTag(160, 6);
            output.WriteEnum((int) Status);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (feedbackCase_ == FeedbackOneofCase.StopFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(StopFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.FreezeFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FreezeFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.SelfrightFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SelfrightFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.SafePowerOffFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(SafePowerOffFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.BatteryChangePoseFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BatteryChangePoseFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.PayloadEstimationFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PayloadEstimationFeedback);
          }
          if (feedbackCase_ == FeedbackOneofCase.ConstrainedManipulationFeedback) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConstrainedManipulationFeedback);
          }
          if (Status != 0) {
            size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Feedback other) {
          if (other == null) {
            return;
          }
          if (other.Status != 0) {
            Status = other.Status;
          }
          switch (other.FeedbackCase) {
            case FeedbackOneofCase.StopFeedback:
              if (StopFeedback == null) {
                StopFeedback = new global::Bosdyn.Api.StopCommand.Types.Feedback();
              }
              StopFeedback.MergeFrom(other.StopFeedback);
              break;
            case FeedbackOneofCase.FreezeFeedback:
              if (FreezeFeedback == null) {
                FreezeFeedback = new global::Bosdyn.Api.FreezeCommand.Types.Feedback();
              }
              FreezeFeedback.MergeFrom(other.FreezeFeedback);
              break;
            case FeedbackOneofCase.SelfrightFeedback:
              if (SelfrightFeedback == null) {
                SelfrightFeedback = new global::Bosdyn.Api.SelfRightCommand.Types.Feedback();
              }
              SelfrightFeedback.MergeFrom(other.SelfrightFeedback);
              break;
            case FeedbackOneofCase.SafePowerOffFeedback:
              if (SafePowerOffFeedback == null) {
                SafePowerOffFeedback = new global::Bosdyn.Api.SafePowerOffCommand.Types.Feedback();
              }
              SafePowerOffFeedback.MergeFrom(other.SafePowerOffFeedback);
              break;
            case FeedbackOneofCase.BatteryChangePoseFeedback:
              if (BatteryChangePoseFeedback == null) {
                BatteryChangePoseFeedback = new global::Bosdyn.Api.BatteryChangePoseCommand.Types.Feedback();
              }
              BatteryChangePoseFeedback.MergeFrom(other.BatteryChangePoseFeedback);
              break;
            case FeedbackOneofCase.PayloadEstimationFeedback:
              if (PayloadEstimationFeedback == null) {
                PayloadEstimationFeedback = new global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback();
              }
              PayloadEstimationFeedback.MergeFrom(other.PayloadEstimationFeedback);
              break;
            case FeedbackOneofCase.ConstrainedManipulationFeedback:
              if (ConstrainedManipulationFeedback == null) {
                ConstrainedManipulationFeedback = new global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Feedback();
              }
              ConstrainedManipulationFeedback.MergeFrom(other.ConstrainedManipulationFeedback);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                global::Bosdyn.Api.StopCommand.Types.Feedback subBuilder = new global::Bosdyn.Api.StopCommand.Types.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.StopFeedback) {
                  subBuilder.MergeFrom(StopFeedback);
                }
                input.ReadMessage(subBuilder);
                StopFeedback = subBuilder;
                break;
              }
              case 18: {
                global::Bosdyn.Api.FreezeCommand.Types.Feedback subBuilder = new global::Bosdyn.Api.FreezeCommand.Types.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.FreezeFeedback) {
                  subBuilder.MergeFrom(FreezeFeedback);
                }
                input.ReadMessage(subBuilder);
                FreezeFeedback = subBuilder;
                break;
              }
              case 26: {
                global::Bosdyn.Api.SelfRightCommand.Types.Feedback subBuilder = new global::Bosdyn.Api.SelfRightCommand.Types.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.SelfrightFeedback) {
                  subBuilder.MergeFrom(SelfrightFeedback);
                }
                input.ReadMessage(subBuilder);
                SelfrightFeedback = subBuilder;
                break;
              }
              case 34: {
                global::Bosdyn.Api.SafePowerOffCommand.Types.Feedback subBuilder = new global::Bosdyn.Api.SafePowerOffCommand.Types.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.SafePowerOffFeedback) {
                  subBuilder.MergeFrom(SafePowerOffFeedback);
                }
                input.ReadMessage(subBuilder);
                SafePowerOffFeedback = subBuilder;
                break;
              }
              case 42: {
                global::Bosdyn.Api.BatteryChangePoseCommand.Types.Feedback subBuilder = new global::Bosdyn.Api.BatteryChangePoseCommand.Types.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.BatteryChangePoseFeedback) {
                  subBuilder.MergeFrom(BatteryChangePoseFeedback);
                }
                input.ReadMessage(subBuilder);
                BatteryChangePoseFeedback = subBuilder;
                break;
              }
              case 50: {
                global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback subBuilder = new global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.PayloadEstimationFeedback) {
                  subBuilder.MergeFrom(PayloadEstimationFeedback);
                }
                input.ReadMessage(subBuilder);
                PayloadEstimationFeedback = subBuilder;
                break;
              }
              case 58: {
                global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Feedback subBuilder = new global::Bosdyn.Api.ConstrainedManipulationCommand.Types.Feedback();
                if (feedbackCase_ == FeedbackOneofCase.ConstrainedManipulationFeedback) {
                  subBuilder.MergeFrom(ConstrainedManipulationFeedback);
                }
                input.ReadMessage(subBuilder);
                ConstrainedManipulationFeedback = subBuilder;
                break;
              }
              case 800: {
                Status = (global::Bosdyn.Api.RobotCommandFeedbackStatus.Types.Status) input.ReadEnum();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
