// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/payload_estimation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Bosdyn.Api {

  /// <summary>Holder for reflection information generated from Protos/payload_estimation.proto</summary>
  public static partial class PayloadEstimationReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/payload_estimation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PayloadEstimationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9Qcm90b3MvcGF5bG9hZF9lc3RpbWF0aW9uLnByb3RvEgpib3NkeW4uYXBp",
            "GhRQcm90b3MvcGF5bG9hZC5wcm90byLNAwoYUGF5bG9hZEVzdGltYXRpb25D",
            "b21tYW5kGgkKB1JlcXVlc3QapQMKCEZlZWRiYWNrEkQKBnN0YXR1cxgBIAEo",
            "DjI0LmJvc2R5bi5hcGkuUGF5bG9hZEVzdGltYXRpb25Db21tYW5kLkZlZWRi",
            "YWNrLlN0YXR1cxIQCghwcm9ncmVzcxgCIAEoAhJCCgVlcnJvchgDIAEoDjIz",
            "LmJvc2R5bi5hcGkuUGF5bG9hZEVzdGltYXRpb25Db21tYW5kLkZlZWRiYWNr",
            "LkVycm9yEi4KEWVzdGltYXRlZF9wYXlsb2FkGAQgASgLMhMuYm9zZHluLmFw",
            "aS5QYXlsb2FkInMKBlN0YXR1cxISCg5TVEFUVVNfVU5LTk9XThAAEhQKEFNU",
            "QVRVU19DT01QTEVURUQQARIVChFTVEFUVVNfU01BTExfTUFTUxACEhYKElNU",
            "QVRVU19JTl9QUk9HUkVTUxADEhAKDFNUQVRVU19FUlJPUhAEIlgKBUVycm9y",
            "EhEKDUVSUk9SX1VOS05PV04QABIOCgpFUlJPUl9OT05FEAESFgoSRVJST1Jf",
            "RkFJTEVEX1NUQU5EEAISFAoQRVJST1JfTk9fUkVTVUxUUxADQhhCFlBheWxv",
            "YWRFc3RpbWF0aW9uUHJvdG9iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Bosdyn.Api.PayloadReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.PayloadEstimationCommand), global::Bosdyn.Api.PayloadEstimationCommand.Parser, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.PayloadEstimationCommand.Types.Request), global::Bosdyn.Api.PayloadEstimationCommand.Types.Request.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback), global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Parser, new[]{ "Status", "Progress", "Error", "EstimatedPayload" }, null, new[]{ typeof(global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Status), typeof(global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Error) }, null)})
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Command the robot to stand and execute a routine to estimate the mass properties of an
  /// unregistered payload attached to the robot.
  /// </summary>
  public sealed partial class PayloadEstimationCommand : pb::IMessage<PayloadEstimationCommand> {
    private static readonly pb::MessageParser<PayloadEstimationCommand> _parser = new pb::MessageParser<PayloadEstimationCommand>(() => new PayloadEstimationCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PayloadEstimationCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Bosdyn.Api.PayloadEstimationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadEstimationCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadEstimationCommand(PayloadEstimationCommand other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadEstimationCommand Clone() {
      return new PayloadEstimationCommand(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PayloadEstimationCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PayloadEstimationCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PayloadEstimationCommand other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PayloadEstimationCommand message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// PayloadEstimation command request takes no additional arguments. The estimation routine
      /// takes about ~1min to run. Subsequent PayloadEstimationCommand requests issued while the 
      /// routine is in progress are ignored until the routine is completed.
      /// </summary>
      public sealed partial class Request : pb::IMessage<Request> {
        private static readonly pb::MessageParser<Request> _parser = new pb::MessageParser<Request>(() => new Request());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Request> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Bosdyn.Api.PayloadEstimationCommand.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request(Request other) : this() {
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Request Clone() {
          return new Request(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Request);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Request other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Request other) {
          if (other == null) {
            return;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
            }
          }
        }

      }

      /// <summary>
      /// The PayloadEstimationCommand provides several pieces of feedback:
      ///   - If the routine is finished running (and its current progress).
      ///   - If the routine encountered any errors while running.
      ///   - The resulting payload estimated by the routine.
      /// </summary>
      public sealed partial class Feedback : pb::IMessage<Feedback> {
        private static readonly pb::MessageParser<Feedback> _parser = new pb::MessageParser<Feedback>(() => new Feedback());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Feedback> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Bosdyn.Api.PayloadEstimationCommand.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Feedback() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Feedback(Feedback other) : this() {
          status_ = other.status_;
          progress_ = other.progress_;
          error_ = other.error_;
          estimatedPayload_ = other.estimatedPayload_ != null ? other.estimatedPayload_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Feedback Clone() {
          return new Feedback(this);
        }

        /// <summary>Field number for the "status" field.</summary>
        public const int StatusFieldNumber = 1;
        private global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Status status_ = 0;
        /// <summary>
        /// Status of the estimation routine.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Status Status {
          get { return status_; }
          set {
            status_ = value;
          }
        }

        /// <summary>Field number for the "progress" field.</summary>
        public const int ProgressFieldNumber = 2;
        private float progress_;
        /// <summary>
        /// The approximate progress of the routine, range [0-1].
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public float Progress {
          get { return progress_; }
          set {
            progress_ = value;
          }
        }

        /// <summary>Field number for the "error" field.</summary>
        public const int ErrorFieldNumber = 3;
        private global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Error error_ = 0;
        /// <summary>
        /// Error status of the estimation routine.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Error Error {
          get { return error_; }
          set {
            error_ = value;
          }
        }

        /// <summary>Field number for the "estimated_payload" field.</summary>
        public const int EstimatedPayloadFieldNumber = 4;
        private global::Bosdyn.Api.Payload estimatedPayload_;
        /// <summary>
        /// The resulting payload estimated by the estimation routine.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Bosdyn.Api.Payload EstimatedPayload {
          get { return estimatedPayload_; }
          set {
            estimatedPayload_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Feedback);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Feedback other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Status != other.Status) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Progress, other.Progress)) return false;
          if (Error != other.Error) return false;
          if (!object.Equals(EstimatedPayload, other.EstimatedPayload)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Status != 0) hash ^= Status.GetHashCode();
          if (Progress != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Progress);
          if (Error != 0) hash ^= Error.GetHashCode();
          if (estimatedPayload_ != null) hash ^= EstimatedPayload.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Status != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Status);
          }
          if (Progress != 0F) {
            output.WriteRawTag(21);
            output.WriteFloat(Progress);
          }
          if (Error != 0) {
            output.WriteRawTag(24);
            output.WriteEnum((int) Error);
          }
          if (estimatedPayload_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(EstimatedPayload);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Status != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
          }
          if (Progress != 0F) {
            size += 1 + 4;
          }
          if (Error != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Error);
          }
          if (estimatedPayload_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EstimatedPayload);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Feedback other) {
          if (other == null) {
            return;
          }
          if (other.Status != 0) {
            Status = other.Status;
          }
          if (other.Progress != 0F) {
            Progress = other.Progress;
          }
          if (other.Error != 0) {
            Error = other.Error;
          }
          if (other.estimatedPayload_ != null) {
            if (estimatedPayload_ == null) {
              EstimatedPayload = new global::Bosdyn.Api.Payload();
            }
            EstimatedPayload.MergeFrom(other.EstimatedPayload);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Status = (global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Status) input.ReadEnum();
                break;
              }
              case 21: {
                Progress = input.ReadFloat();
                break;
              }
              case 24: {
                Error = (global::Bosdyn.Api.PayloadEstimationCommand.Types.Feedback.Types.Error) input.ReadEnum();
                break;
              }
              case 34: {
                if (estimatedPayload_ == null) {
                  EstimatedPayload = new global::Bosdyn.Api.Payload();
                }
                input.ReadMessage(EstimatedPayload);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Feedback message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum Status {
            [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
            /// <summary>
            /// Completed estimation routine successfully; estimated_payload is populated.
            /// </summary>
            [pbr::OriginalName("STATUS_COMPLETED")] Completed = 1,
            /// <summary>
            /// Completed estimation routine successfully, but estimated mass is small enough to
            /// not significantly impact mobility; estimated_payload is empty.
            /// </summary>
            [pbr::OriginalName("STATUS_SMALL_MASS")] SmallMass = 2,
            /// <summary>
            /// Estimation routine is currently running; estimated_payload is empty.
            /// </summary>
            [pbr::OriginalName("STATUS_IN_PROGRESS")] InProgress = 3,
            /// <summary>
            /// Error occurred during the routine; estaimted_payload is empty.
            /// </summary>
            [pbr::OriginalName("STATUS_ERROR")] Error = 4,
          }

          public enum Error {
            [pbr::OriginalName("ERROR_UNKNOWN")] Unknown = 0,
            /// <summary>
            /// No error has occurred.
            /// </summary>
            [pbr::OriginalName("ERROR_NONE")] None = 1,
            /// <summary>
            /// Robot failed to stand/change stance.
            /// </summary>
            [pbr::OriginalName("ERROR_FAILED_STAND")] FailedStand = 2,
            /// <summary>
            /// Failed to calculate results.
            /// </summary>
            [pbr::OriginalName("ERROR_NO_RESULTS")] NoResults = 3,
          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
